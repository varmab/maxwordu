{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\n\nvar useGenerateRandomColor = function useGenerateRandomColor() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var generateColor = function generateColor() {\n    setColor(Math.random().toString(16).substr(-6));\n  };\n\n  return {\n    color: color,\n    generateColor: generateColor\n  };\n};\n\nexport default useGenerateRandomColor;","map":{"version":3,"names":["useState","useGenerateRandomColor","color","setColor","generateColor","Math","random","toString","substr"],"sources":["/Users/ecorfytechnologies/jagadish/GitHub/maxwordu/src/components/RandomColor.js"],"sourcesContent":["import {useState} from 'react';\n  \nconst useGenerateRandomColor = () => {\n    const [color,setColor] = useState(\"\")\n    const generateColor = () =>{\n        setColor(Math.random().toString(16).substr(-6));\n    };\n    return {color,generateColor};\n      \n};\nexport default useGenerateRandomColor;"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;EACjC,gBAAyBD,QAAQ,CAAC,EAAD,CAAjC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAaC,QAAb;;EACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAK;IACvBD,QAAQ,CAACE,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAC,CAAnC,CAAD,CAAR;EACH,CAFD;;EAGA,OAAO;IAACN,KAAK,EAALA,KAAD;IAAOE,aAAa,EAAbA;EAAP,CAAP;AAEH,CAPD;;AAQA,eAAeH,sBAAf"},"metadata":{},"sourceType":"module"}