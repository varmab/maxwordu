{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from 'react-native-modalbox';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getUniqueId, getManufacturer } from 'react-native-device-info';\nimport styles from \"./../Styles/homeStyle\";\nimport { Card } from 'react-native-paper';\nimport Header from \"./Header\";\nimport env from \"../../env\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar windowSize = Dimensions.get('window');\nconsole.log(windowSize.height, 'sizeheight @@@@@');\nvar FONT = 17;\nvar font = 20;\nvar Margin = 28;\n\nif (windowSize.width >= 350) {\n  FONT = 30, Margin = 40;\n}\n\nif (windowSize.width < 350) {\n  font = 18;\n}\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      Name: '',\n      City: '',\n      uuid: '',\n      Level: 'Beginner',\n      Show: false\n    };\n    _this.refs = React.createRef();\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        count: this.state.count + 1\n      });\n      AsyncStorage.getItem(\"uuid\").then(function (value) {\n        _this2.setState({\n          uuid: value\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      AsyncStorage.getItem(\"Name\").then(function (value) {\n        _this3.setState({\n          \"Name\": value\n        });\n      });\n      AsyncStorage.getItem(\"City\").then(function (value) {\n        _this3.setState({\n          \"City\": value\n        });\n      });\n      AsyncStorage.getItem(\"Level\").then(function (value) {\n        if (value == null || value == \"null\") {\n          AsyncStorage.setItem(\"Level\", 'Beginner');\n        } else {\n          _this3.setState({\n            \"Level\": value\n          });\n\n          _this3.setState({\n            count: _this3.state.count + 1\n          });\n        }\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.state.uuid == null || this.state.uuid == \"null\" || this.state.uuid == null) {\n        this.setState({\n          Show: true\n        });\n      } else if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" || this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n        this.model();\n      } else {\n        this.props.navigation.navigate('PlayNow');\n      }\n    }\n  }, {\n    key: \"option\",\n    value: function option() {\n      this.props.navigation.navigate('Options');\n    }\n  }, {\n    key: \"model\",\n    value: function model(id) {\n      this.refs.modal3.open();\n    }\n  }, {\n    key: \"onOk\",\n    value: function onOk() {\n      this.refs.modal3.close();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this4 = this;\n\n      if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == '' || this.state.Name == undefined) {\n        Alert.alert('MaxWord', 'Please enter name', [{\n          text: 'OK'\n        }]);\n      } else if (this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n        Alert.alert('MaxWord', 'Please enter city', [{\n          text: 'OK'\n        }]);\n      } else {\n        AsyncStorage.setItem(\"uuid\", getUniqueId());\n        this.setState({\n          uuid: getUniqueId(),\n          Show: false\n        }, function () {\n          _this4.props.navigation.navigate('PlayNow');\n        });\n      }\n    }\n  }, {\n    key: \"model1\",\n    value: function model1(id) {\n      this.refs.modal4.open();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, e) {\n      if (name == 'Name') {\n        AsyncStorage.setItem(\"Name\", e.nativeEvent.text);\n        this.setState({\n          Name: e.nativeEvent.text\n        });\n      } else {\n        AsyncStorage.setItem(\"City\", e.nativeEvent.text);\n        this.setState({\n          City: e.nativeEvent.text\n        });\n      }\n    }\n  }, {\n    key: \"help\",\n    value: function help() {\n      this.props.navigation.navigate(\"Help\");\n    }\n  }, {\n    key: \"inputFocused\",\n    value: function inputFocused(refName) {\n      if (refName == 'Name') {\n        if (windowSize.width >= 340) {\n          var scrollResponder = this.refs.scrollView.getScrollResponder();\n          scrollResponder.scrollTo({\n            y: windowSize.height / 3\n          });\n        }\n      } else {\n        if (windowSize.width < 340) {\n          var _scrollResponder = this.refs.scrollView.getScrollResponder();\n\n          _scrollResponder.scrollTo({\n            y: windowSize.height / 2.3\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return _jsxs(Card, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(Header, {\n          title: 'MaxWord'\n        }), this.state.Show ? _jsx(View, {\n          style: {\n            flex: 1,\n            backgroundColor: 'white'\n          },\n          children: _jsx(ScrollView, {\n            ref: \"scrollView\",\n            automaticallyAdjustContentInsets: false,\n            children: _jsxs(View, {\n              children: [_jsx(Text, {\n                allowFontScaling: false,\n                style: {\n                  marginTop: 20,\n                  marginLeft: 20,\n                  marginRight: 20,\n                  fontSize: 20\n                },\n                children: \"To play, simply tap on available letters to form words before the tiles fill up. If the word is correct, the letters disappear. A letter can be used more than once, and longer words score higher; \\u201CBANANA\\u201D scores higher than \\u201CBAN\\u201D. After all the tiles are filled, you have a few seconds to submit a word or the game ends. There are three levels of play to choose from. Name and City is requested for the leaderboard.\"\n              }), _jsx(View, {\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: {\n                    textAlign: 'center',\n                    marginTop: 15,\n                    fontSize: 17,\n                    fontWeight: 'bold',\n                    color: 'black'\n                  },\n                  children: \"Enter your name :\"\n                })\n              }), _jsx(TextInput, {\n                allowFontScaling: false,\n                style: styles.textInput,\n                placeholder: \"Name\",\n                value: this.state.Name,\n                placeholderTextColor: '#c0c0c0',\n                returnKeyType: \"next\",\n                onFocus: this.inputFocused.bind(this, 'Name'),\n                onSubmitEditing: function onSubmitEditing(event) {\n                  _this5.refs.SecondInput.focus();\n                },\n                onChange: this.handleChange.bind(this, 'Name')\n              }), _jsx(View, {\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: {\n                    textAlign: 'center',\n                    marginTop: 15,\n                    fontSize: 17,\n                    fontWeight: 'bold',\n                    color: 'black'\n                  },\n                  children: \"Enter your city :\"\n                })\n              }), _jsx(TextInput, {\n                ref: \"SecondInput\",\n                allowFontScaling: false,\n                style: styles.textInput,\n                placeholder: \"City\",\n                value: this.state.City,\n                placeholderTextColor: '#c0c0c0',\n                returnKeyType: \"done\",\n                onFocus: this.inputFocused.bind(this, 'City'),\n                onSubmitEditing: function onSubmitEditing(event) {\n                  _this5.close();\n                },\n                onChange: this.handleChange.bind(this, 'City')\n              }), _jsx(TouchableOpacity, {\n                onPress: this.close.bind(this),\n                style: {\n                  height: 40,\n                  marginTop: 30,\n                  marginLeft: width / 4,\n                  marginRight: width / 4,\n                  backgroundColor: '#27ae61',\n                  marginBottom: 30\n                },\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: {\n                    textAlign: 'center',\n                    fontSize: 25,\n                    marginTop: 6,\n                    color: 'white'\n                  },\n                  children: \"OK\"\n                })\n              })]\n            })\n          })\n        }) : _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            style: {\n              flex: 0.3,\n              justifyContent: 'center',\n              alignSelf: 'center'\n            },\n            children: _jsx(Text, {\n              allowFontScaling: false,\n              style: {\n                fontSize: 30,\n                fontWeight: 'bold'\n              },\n              children: \"MaxWord\"\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 0.1\n            },\n            children: _jsx(Text, {\n              allowFontScaling: false,\n              style: {\n                fontSize: 18,\n                textAlign: 'center'\n              },\n              children: \"a quick escape for word game lovers\"\n            })\n          }), _jsx(View, {\n            style: [styles.imageBody, {\n              height: 100,\n              justifyContent: 'center',\n              alignItems: 'center'\n            }],\n            children: _jsx(Image, {\n              style: styles.logo,\n              source: require(\"../img/MWicon.png\")\n            })\n          }), _jsx(View, {\n            children: _jsxs(Text, {\n              style: styles.version_text,\n              children: [\"Version \", env.APP_VERSION]\n            })\n          }), _jsx(View, {\n            style: styles.footer,\n            children: _jsxs(View, {\n              style: styles.row,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.subRow, styles.shadowProp],\n                onPress: this.start.bind(this),\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: styles.Text,\n                  children: \"Play Now\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.subRow1, styles.shadowProp],\n                onPress: this.option.bind(this),\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: styles.Text,\n                  children: \"Options\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.subRow, styles.shadowProp],\n                onPress: this.help.bind(this),\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: styles.Text,\n                  children: \"Help\"\n                })\n              })]\n            })\n          }), _jsx(Modal, {\n            style: [styles.modal, styles.modal3],\n            position: \"center\",\n            ref: \"modal3\",\n            backdropPressToClose: false,\n            children: _jsxs(View, {\n              style: {\n                flex: 1,\n                width: width - 50\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flex: 0.8\n                },\n                children: [_jsxs(View, {\n                  style: {\n                    justifyContent: 'center'\n                  },\n                  children: [_jsx(View, {\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        textAlign: 'center',\n                        marginTop: 15,\n                        fontSize: 17,\n                        fontWeight: 'bold',\n                        color: 'black'\n                      },\n                      children: \"Enter your name :\"\n                    })\n                  }), _jsx(TextInput, {\n                    allowFontScaling: false,\n                    style: styles.textInput,\n                    placeholder: \"Name\",\n                    value: this.state.Name,\n                    placeholderTextColor: '#c0c0c0',\n                    returnKeyType: \"next\",\n                    onSubmitEditing: function onSubmitEditing(event) {\n                      _this5.refs.SecondInput.focus();\n                    },\n                    onChange: this.handleChange.bind(this, 'Name')\n                  })]\n                }), _jsxs(View, {\n                  children: [_jsx(View, {\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        textAlign: 'center',\n                        fontSize: 17,\n                        fontWeight: 'bold',\n                        color: 'black'\n                      },\n                      children: \"Enter your city :\"\n                    })\n                  }), _jsx(TextInput, {\n                    ref: \"SecondInput\",\n                    allowFontScaling: false,\n                    style: styles.textInput,\n                    placeholder: \"City\",\n                    placeholderTextColor: '#c0c0c0',\n                    value: this.state.City,\n                    returnKeyType: \"done\",\n                    onSubmitEditing: function onSubmitEditing(event) {\n                      Keyboard.dismiss;\n                    },\n                    onChange: this.handleChange.bind(this, 'City')\n                  })]\n                })]\n              }), _jsx(View, {\n                style: {\n                  flex: 0.2,\n                  backgroundColor: '#013369',\n                  justifyContent: \"center\"\n                },\n                children: _jsx(TouchableOpacity, {\n                  onPress: this.onOk.bind(this),\n                  children: _jsx(View, {\n                    style: {\n                      justifyContent: 'center',\n                      alignSelf: 'center'\n                    },\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        color: 'white',\n                        textAlign: 'center'\n                      },\n                      children: \"OK\"\n                    })\n                  })\n                })\n              })]\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };","map":{"version":3,"names":["React","useState","Modal","AsyncStorage","getUniqueId","getManufacturer","styles","Card","Header","env","Dimensions","get","width","height","windowSize","console","log","FONT","font","Margin","Main","props","state","Name","City","uuid","Level","Show","refs","createRef","setState","count","getItem","then","value","setItem","model","navigation","navigate","id","modal3","open","close","undefined","Alert","alert","text","modal4","name","e","nativeEvent","refName","scrollResponder","scrollView","getScrollResponder","scrollTo","y","flex","backgroundColor","marginTop","marginLeft","marginRight","fontSize","textAlign","fontWeight","color","textInput","inputFocused","bind","event","SecondInput","focus","handleChange","marginBottom","container","justifyContent","alignSelf","imageBody","alignItems","logo","require","version_text","APP_VERSION","footer","row","subRow","shadowProp","start","Text","subRow1","option","help","modal","Keyboard","dismiss","onOk","Component"],"sources":["/Users/ecorfytechnologies/jagadish/GitHub/maxwordu/src/components/Main.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n    View,\n    StyleSheet,\n    Text,\n    Image,\n    TextInput,\n    TouchableOpacity,\n    TouchableHighlight,\n    Alert,\n    ScrollView,\n    Dimensions,\n    Keyboard\n} from 'react-native'\nimport Modal from 'react-native-modalbox';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getUniqueId, getManufacturer } from 'react-native-device-info';\nimport styles from './../Styles/homeStyle'\nimport { Card } from 'react-native-paper';\nimport Header from './Header';\nimport env from '../../env'\n\nconst { width, height } = Dimensions.get('window');\nvar windowSize = Dimensions.get('window');\nconsole.log(windowSize.height,'sizeheight @@@@@');\nvar FONT   = 17;\nvar font = 20;\nvar Margin = 28;\nif(windowSize.width >=350){\n  FONT   = 30,\n  Margin = 40   \n}if(windowSize.width < 350){\n  font = 18\n}\n\n\n\n\nexport default class Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { Name: '', City: '', uuid: '', Level: 'Beginner', Show: false };\n        this.refs = React.createRef();\n\n    }\n    componentWillMount() {\n        this.setState({count:this.state.count+1})\n        AsyncStorage.getItem(\"uuid\").then((value) => {\n            this.setState({\n                uuid: value\n            })\n        })\n    }\n    componentDidMount() {\n       \n        AsyncStorage.getItem(\"Name\").then((value) => {\n            this.setState({ \"Name\": value })\n           \n        })\n        AsyncStorage.getItem(\"City\").then((value) => {\n            this.setState({ \"City\": value })\n        })\n        AsyncStorage.getItem(\"Level\").then((value) => {\n            if (value == null || value == \"null\") {\n                AsyncStorage.setItem(\"Level\", 'Beginner')\n            } else {\n                this.setState({ \"Level\": value })\n                this.setState({count:this.state.count+1})\n            }\n        })\n    }\n    start() {\n        if (this.state.uuid == null || this.state.uuid == \"null\" || this.state.uuid == null) {\n            this.setState({ Show: true })\n        }\n        else if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" || this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n            this.model()\n        } else {\n            \n            this.props.navigation.navigate('PlayNow');\n            \n        }\n    }\n    option() {\n        \n        this.props.navigation.navigate('Options');\n    }\n    model(id) {\n        this.refs.modal3.open();\n    }\n    onOk() {\n        this.refs.modal3.close();\n    }\n    close() {\n        if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == '' ||\n            this.state.Name == undefined) {\n            Alert.alert('MaxWord', 'Please enter name', [{ text: 'OK' }]);\n        } else\n            if (this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n                Alert.alert('MaxWord', 'Please enter city', [{ text: 'OK' }]);\n            } else {\n                AsyncStorage.setItem(\"uuid\", getUniqueId())\n                this.setState({\n                    uuid: getUniqueId(),\n                    Show: false\n                }, () => {\n                   \n                    this.props.navigation.navigate('PlayNow');\n                })\n            }\n    }\n    model1(id) {\n        this.refs.modal4.open();\n    }\n    handleChange(name, e) {\n        if (name == 'Name') {\n            AsyncStorage.setItem(\"Name\", e.nativeEvent.text)\n            this.setState({\n                Name: e.nativeEvent.text\n            })\n        } else {\n            AsyncStorage.setItem(\"City\", e.nativeEvent.text)\n            this.setState({\n                City: e.nativeEvent.text\n            })\n        }\n    }\n\n    help() {\n        \n        this.props.navigation.navigate(\"Help\")\n    }\n    \n    inputFocused(refName) {\n        \n       \n        if (refName == 'Name') {\n            if (windowSize.width >=340) {\n                let scrollResponder = this.refs.scrollView.getScrollResponder();\n                scrollResponder.scrollTo({ y: windowSize.height / 3 })\n            }\n        } else {\n            if (windowSize.width < 340) {\n                let scrollResponder = this.refs.scrollView.getScrollResponder();\n                scrollResponder.scrollTo({ y: windowSize.height / 2.3 })\n            }\n        }\n\n    }\n    render() {\n        return <Card style={{ flex: 1 }}>\n            <Header\n                title={'MaxWord'}\n            />\n                {this.state.Show ? (\n                    <View style={{ flex: 1, backgroundColor:'white'}}>\n                        <ScrollView\n                            // ref={scrollRef}\n                            ref='scrollView'\n                            automaticallyAdjustContentInsets={false}>\n                            <View>\n                                <Text allowFontScaling={false} style={{ marginTop: 20, marginLeft: 20, marginRight: 20, fontSize: 20 }}>\n                                    To play, simply tap on available letters to form words before the tiles fill up. If the word is correct, the letters disappear. A letter can be used more than once, and longer words score higher; “BANANA” scores higher than “BAN”. After all the tiles are filled, you have a few seconds to submit a word or the game ends. There are three levels of play to choose from. Name and City is requested for the leaderboard.\n                                </Text>\n                                <View>\n                                    <Text allowFontScaling={false} style={{ textAlign: 'center', marginTop: 15, fontSize: 17, fontWeight: 'bold', color: 'black' }}>Enter your name :</Text>\n                                </View>\n                                <TextInput\n                                    allowFontScaling={false}\n                                    style={styles.textInput}\n                                    placeholder=\"Name\"\n                                    value={this.state.Name}\n                                    placeholderTextColor={'#c0c0c0'}\n                                    returnKeyType='next'\n                                    onFocus={this.inputFocused.bind(this, 'Name')}\n                                    onSubmitEditing={(event) => {\n                                        this.refs.SecondInput.focus();\n                                    }}\n                                    onChange={this.handleChange.bind(this, 'Name')} />\n                                <View>\n                                    <Text allowFontScaling={false} style={{ textAlign: 'center', marginTop: 15, fontSize: 17, fontWeight: 'bold', color: 'black' }}>Enter your city :</Text>\n                                </View>\n                                <TextInput\n                                    ref='SecondInput'\n                                    allowFontScaling={false}\n                                    style={styles.textInput}\n                                    placeholder=\"City\"\n                                    value={this.state.City}\n                                    placeholderTextColor={'#c0c0c0'}\n                                    // value={loginDetails.city}\n                                    returnKeyType='done'\n                                    onFocus={this.inputFocused.bind(this, 'City')}\n                                    onSubmitEditing={(event) => {\n                                        this.close();\n                                    }}\n                                    onChange={this.handleChange.bind(this, 'City')}\n                                // onChangeText={text => {\n                                //     onChangeData(text, 'city');\n                                // }}\n                                />\n                                <TouchableOpacity\n                                    onPress={this.close.bind(this)}\n                                    style={{ height: 40, marginTop: 30, marginLeft: width / 4, marginRight: width / 4, backgroundColor: '#27ae61', marginBottom: 30 }}>\n                                    <Text allowFontScaling={false} style={{ textAlign: 'center', fontSize: 25, marginTop: 6, color: 'white' }}>OK</Text>\n                                </TouchableOpacity>\n                            </View>\n                        </ScrollView>\n                    </View>\n                )\n                    : (\n                       \n                        <View style={styles.container}>\n                            <View style={{ flex: 0.3, justifyContent: 'center', alignSelf: 'center' }}>\n                                <Text allowFontScaling={false} style={{ fontSize: 30, fontWeight: 'bold' }}>MaxWord</Text>\n\n                            </View>\n                            <View style={{ flex: 0.1 }}>\n                                <Text allowFontScaling={false} style={{ fontSize: 18, textAlign: 'center' }}>a quick escape for word game lovers</Text>\n                            </View>\n                                        <View style={[styles.imageBody,{height:100, justifyContent:'center', alignItems:'center'}]}>\n                                            <Image style={styles.logo} source={require('../img/MWicon.png')} /> \n                                        </View>\n                            <View>\n                                <Text style={styles.version_text}>Version {env.APP_VERSION}</Text>\n                            </View>\n                            <View style={styles.footer}>\n                                <View style={styles.row}>\n                                    <TouchableOpacity style={[styles.subRow,styles.shadowProp]}\n                                        onPress={this.start.bind(this)}\n                                    >\n                                        <Text allowFontScaling={false} style={styles.Text}>Play Now</Text>\n                                    </TouchableOpacity>\n                                    <TouchableOpacity style={[styles.subRow1,styles.shadowProp]}\n                                        onPress={this.option.bind(this)}\n                                    >\n                                        <Text allowFontScaling={false} style={styles.Text}>Options</Text>\n                                    </TouchableOpacity>\n                                    <TouchableOpacity style={[styles.subRow,styles.shadowProp]}\n                                        onPress={this.help.bind(this)}\n                                    >\n                                        <Text allowFontScaling={false} style={styles.Text}>Help</Text>\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                           \n\n                            <Modal style={[styles.modal, styles.modal3]} position={\"center\"}\n                                ref={\"modal3\"}\n                                backdropPressToClose={false}>\n                                <View style={{ flex: 1, width: width - 50 }}>\n                                    <View style={{ flex: 0.8 }}>\n                                        <View style={{ justifyContent: 'center' }}>\n                                            <View>\n                                                <Text allowFontScaling={false} style={{ textAlign: 'center', marginTop: 15, fontSize: 17, fontWeight: 'bold', color: 'black' }}>Enter your name :</Text>\n                                            </View>\n                                            <TextInput\n                                                allowFontScaling={false}\n                                                style={styles.textInput}\n                                                placeholder=\"Name\"\n                                                value={this.state.Name}\n                                                placeholderTextColor={'#c0c0c0'}\n                                                // value={loginDetails.name}\n                                                returnKeyType='next'\n                                                onSubmitEditing={(event) => {\n                                                    this.refs.SecondInput.focus();\n                                                }}\n                                                onChange={this.handleChange.bind(this, 'Name')}\n                                            // onChangeText={text => {\n                                            //     onChangeData(text, 'name');\n                                            // }}\n                                            />\n                                        </View>\n                                        <View >\n                                            <View>\n                                                <Text allowFontScaling={false} style={{ textAlign: 'center', fontSize: 17, fontWeight: 'bold', color: 'black' }}>Enter your city :</Text>\n                                            </View>\n                                            <TextInput\n                                                ref='SecondInput'\n                                                allowFontScaling={false}\n                                                style={styles.textInput}\n                                                placeholder=\"City\"\n                                                placeholderTextColor={'#c0c0c0'}\n                                                // value={loginDetails.city}\n                                                value={this.state.City}\n                                                returnKeyType='done'\n                                                onSubmitEditing={(event) => {\n                                                    Keyboard.dismiss\n                                                }}\n                                                onChange={this.handleChange.bind(this, 'City')}\n                                            // onChangeText={text => {\n                                            //     onChangeData(text, 'city');\n                                            // }}\n                                            />\n                                        </View>\n                                    </View>\n                                    <View style={{ flex: 0.2, backgroundColor: '#013369', justifyContent: \"center\" }}>\n                                        <TouchableOpacity\n                                            onPress={this.onOk.bind(this)}\n                                        >\n                                            <View style={{ justifyContent: 'center', alignSelf: 'center' }}>\n                                                <Text allowFontScaling={false} style={{ color: 'white', textAlign: 'center' }}>OK</Text>\n                                            </View>\n                                        </TouchableOpacity>\n                                    </View>\n                                </View>\n                            </Modal>\n                        </View>\n                    )}\n        </Card>\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}