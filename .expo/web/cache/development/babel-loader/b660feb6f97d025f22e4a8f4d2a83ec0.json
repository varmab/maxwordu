{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from 'react-native-modalbox';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getUniqueId, getManufacturer } from 'react-native-device-info';\nimport styles from \"./../Styles/homeStyle\";\nimport { Card } from 'react-native-paper';\nimport Header from \"./Header\";\nimport env from \"../../env\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Icon from '@expo/vector-icons/FontAwesome';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar windowSize = Dimensions.get('window');\nconsole.log(windowSize.height, 'sizeheight @@@@@');\nvar FONT = 17;\nvar font = 20;\nvar Margin = 28;\nvar Font_main = 70;\nvar icon_size = 35;\n\nif (windowSize.width > 400) {\n  FONT = 30, Margin = 40, Font_main = 70, icon_size = 40;\n}\n\nif (windowSize.width < 350) {\n  font = 18, Font_main = 50, icon_size = 30;\n}\n\nvar play_icon = _jsx(Icon, {\n  name: \"play\",\n  size: icon_size,\n  color: \"white\"\n});\n\nvar option_icon = _jsx(Icon, {\n  name: \"bars\",\n  size: icon_size,\n  color: \"white\"\n});\n\nvar help_icon = _jsx(Icon, {\n  name: \"question\",\n  size: icon_size,\n  color: \"white\"\n});\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      Name: '',\n      City: '',\n      uuid: '',\n      Level: 'Beginner',\n      Show: false\n    };\n    _this.refs = React.createRef();\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        count: this.state.count + 1\n      });\n      AsyncStorage.getItem(\"uuid\").then(function (value) {\n        _this2.setState({\n          uuid: value\n        });\n      });\n    }\n  }, {\n    key: \"UNSAFE_componentDidMount\",\n    value: function UNSAFE_componentDidMount() {\n      var _this3 = this;\n\n      AsyncStorage.getItem(\"Name\").then(function (value) {\n        _this3.setState({\n          \"Name\": value\n        });\n      });\n      AsyncStorage.getItem(\"City\").then(function (value) {\n        _this3.setState({\n          \"City\": value\n        });\n      });\n      AsyncStorage.getItem(\"Level\").then(function (value) {\n        if (value == null || value == \"null\") {\n          AsyncStorage.setItem(\"Level\", 'Beginner');\n        } else {\n          _this3.setState({\n            \"Level\": value\n          });\n\n          _this3.setState({\n            count: _this3.state.count + 1\n          });\n        }\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.state.uuid == null || this.state.uuid == \"null\" || this.state.uuid == null) {\n        this.setState({\n          Show: true\n        });\n      } else if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" || this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n        this.model();\n      } else {\n        this.props.navigation.navigate('PlayNow');\n      }\n    }\n  }, {\n    key: \"option\",\n    value: function option() {\n      this.props.navigation.navigate('Options');\n    }\n  }, {\n    key: \"model\",\n    value: function model(id) {\n      this.refs.modal3.open();\n    }\n  }, {\n    key: \"onOk\",\n    value: function onOk() {\n      this.refs.modal3.close();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this4 = this;\n\n      if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == '' || this.state.Name == undefined) {\n        Alert.alert('MaxWord', 'Please enter name', [{\n          text: 'OK'\n        }]);\n      } else if (this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n        Alert.alert('MaxWord', 'Please enter city', [{\n          text: 'OK'\n        }]);\n      } else {\n        AsyncStorage.setItem(\"uuid\", getUniqueId());\n        this.setState({\n          uuid: getUniqueId(),\n          Show: false\n        }, function () {\n          _this4.props.navigation.navigate('PlayNow');\n        });\n      }\n    }\n  }, {\n    key: \"model1\",\n    value: function model1(id) {\n      this.refs.modal4.open();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, e) {\n      if (name == 'Name') {\n        AsyncStorage.setItem(\"Name\", e.nativeEvent.text);\n        this.setState({\n          Name: e.nativeEvent.text\n        });\n      } else {\n        AsyncStorage.setItem(\"City\", e.nativeEvent.text);\n        this.setState({\n          City: e.nativeEvent.text\n        });\n      }\n    }\n  }, {\n    key: \"help\",\n    value: function help() {\n      this.props.navigation.navigate(\"Help\");\n    }\n  }, {\n    key: \"inputFocused\",\n    value: function inputFocused(refName) {\n      if (refName == 'Name') {\n        if (windowSize.width >= 340) {\n          var scrollResponder = this.refs.scrollView.getScrollResponder();\n          scrollResponder.scrollTo({\n            y: windowSize.height / 3\n          });\n        }\n      } else {\n        if (windowSize.width < 340) {\n          var _scrollResponder = this.refs.scrollView.getScrollResponder();\n\n          _scrollResponder.scrollTo({\n            y: windowSize.height / 2.3\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      if (this.state.Show) {\n        return _jsx(Card, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(View, {\n            style: {\n              flex: 1,\n              backgroundColor: \"white\"\n            },\n            children: _jsx(ScrollView, {\n              ref: \"scrollView\",\n              automaticallyAdjustContentInsets: false,\n              children: _jsxs(View, {\n                children: [_jsx(Text, {\n                  allowFontScaling: false,\n                  style: {\n                    marginTop: 20,\n                    marginLeft: 20,\n                    marginRight: 20,\n                    fontSize: 20\n                  },\n                  children: \"To play, simply tap on available letters to form words before the tiles fill up. If the word is correct, the letters disappear. A letter can be used more than once, and longer words score higher; \\u201CBANANA\\u201D scores higher than \\u201CBAN\\u201D. After all the tiles are filled, you have a few seconds to submit a word or the game ends. There are three levels of play to choose from. Name and City is requested for the leaderboard.\"\n                }), _jsx(View, {\n                  children: _jsx(Text, {\n                    allowFontScaling: false,\n                    style: {\n                      textAlign: \"center\",\n                      marginTop: 15,\n                      fontSize: 17,\n                      fontWeight: \"bold\",\n                      color: \"black\"\n                    },\n                    children: \"Enter your name :\"\n                  })\n                }), _jsx(TextInput, {\n                  allowFontScaling: false,\n                  style: styles.textInput,\n                  placeholder: \"Name\",\n                  value: this.state.Name,\n                  placeholderTextColor: \"#c0c0c0\",\n                  returnKeyType: \"next\",\n                  onFocus: this.inputFocused.bind(this, \"Name\"),\n                  onSubmitEditing: function onSubmitEditing(event) {\n                    _this5.refs.SecondInput.focus();\n                  },\n                  onChange: this.handleChange.bind(this, \"Name\")\n                }), _jsx(View, {\n                  children: _jsx(Text, {\n                    allowFontScaling: false,\n                    style: {\n                      textAlign: \"center\",\n                      marginTop: 15,\n                      fontSize: 17,\n                      fontWeight: \"bold\",\n                      color: \"black\"\n                    },\n                    children: \"Enter your city :\"\n                  })\n                }), _jsx(TextInput, {\n                  ref: \"SecondInput\",\n                  allowFontScaling: false,\n                  style: styles.textInput,\n                  placeholder: \"City\",\n                  value: this.state.City,\n                  placeholderTextColor: \"#c0c0c0\",\n                  returnKeyType: \"done\",\n                  onFocus: this.inputFocused.bind(this, \"City\"),\n                  onSubmitEditing: function onSubmitEditing(event) {\n                    _this5.close();\n                  },\n                  onChange: this.handleChange.bind(this, \"City\")\n                }), _jsx(TouchableOpacity, {\n                  onPress: this.close.bind(this),\n                  style: {\n                    height: 40,\n                    marginTop: 30,\n                    marginLeft: width / 4,\n                    marginRight: width / 4,\n                    backgroundColor: \"#27ae61\",\n                    marginBottom: 30\n                  },\n                  children: _jsx(Text, {\n                    allowFontScaling: false,\n                    style: {\n                      textAlign: \"center\",\n                      fontSize: 25,\n                      marginTop: 6,\n                      color: \"white\"\n                    },\n                    children: \"OK\"\n                  })\n                })]\n              })\n            })\n          })\n        });\n      } else {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            style: {\n              flex: 0.3,\n              justifyContent: \"center\",\n              alignSelf: \"center\"\n            },\n            children: _jsx(Text, {\n              allowFontScaling: false,\n              style: {\n                fontSize: Font_main,\n                fontWeight: \"bold\",\n                fontStyle: 'italic'\n              },\n              children: \"MaxWord\"\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 0.1\n            },\n            children: _jsx(Text, {\n              allowFontScaling: false,\n              style: {\n                fontSize: 18,\n                textAlign: \"center\"\n              },\n              children: \"a quick escape for word game lovers\"\n            })\n          }), _jsx(View, {\n            style: [styles.imageBody, {\n              height: 100,\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }],\n            children: _jsx(Image, {\n              style: styles.logo,\n              source: require(\"../img/MWicon.png\")\n            })\n          }), _jsx(View, {\n            children: _jsxs(Text, {\n              style: styles.version_text,\n              children: [\"Version \", env.APP_VERSION]\n            })\n          }), _jsxs(View, {\n            style: styles.button,\n            children: [_jsx(View, {\n              children: _jsx(TouchableOpacity, {\n                onPress: this.start.bind(this),\n                children: _jsx(View, {\n                  style: styles.buttonParent,\n                  children: _jsxs(LinearGradient, {\n                    colors: ['#848484', \"#535353\", \"#313131\"],\n                    style: styles.buttonGrad,\n                    children: [play_icon, _jsx(Text, {\n                      style: styles.text_button,\n                      children: \"PLAY\"\n                    })]\n                  })\n                })\n              })\n            }), _jsx(View, {\n              style: {\n                paddingLeft: 10,\n                paddingRight: 10\n              },\n              children: _jsx(TouchableOpacity, {\n                onPress: this.option.bind(this),\n                children: _jsx(View, {\n                  style: styles.buttonParent,\n                  children: _jsxs(LinearGradient, {\n                    colors: ['#848484', \"#535353\", \"#313131\"],\n                    style: styles.buttonGrad,\n                    children: [option_icon, _jsx(Text, {\n                      style: styles.text_button,\n                      children: \"OPTIONS\"\n                    })]\n                  })\n                })\n              })\n            }), _jsx(View, {\n              style: {},\n              children: _jsx(TouchableOpacity, {\n                onPress: this.help.bind(this),\n                children: _jsx(View, {\n                  style: styles.buttonParent,\n                  children: _jsxs(LinearGradient, {\n                    colors: ['#848484', \"#535353\", \"#313131\"],\n                    style: styles.buttonGrad,\n                    children: [help_icon, _jsx(Text, {\n                      style: styles.text_button,\n                      children: \"HELP\"\n                    })]\n                  })\n                })\n              })\n            })]\n          }), _jsx(Modal, {\n            style: [styles.modal, styles.modal3],\n            position: \"center\",\n            ref: \"modal3\",\n            backdropPressToClose: false,\n            children: _jsxs(View, {\n              style: {\n                flex: 1,\n                width: width - 50\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flex: 0.8\n                },\n                children: [_jsxs(View, {\n                  style: {\n                    justifyContent: \"center\"\n                  },\n                  children: [_jsx(View, {\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        textAlign: \"center\",\n                        marginTop: 15,\n                        fontSize: 17,\n                        fontWeight: \"bold\",\n                        color: \"black\"\n                      },\n                      children: \"Enter your name :\"\n                    })\n                  }), _jsx(TextInput, {\n                    allowFontScaling: false,\n                    style: styles.textInput,\n                    placeholder: \"Name\",\n                    value: this.state.Name,\n                    placeholderTextColor: \"#c0c0c0\",\n                    returnKeyType: \"next\",\n                    onSubmitEditing: function onSubmitEditing(event) {\n                      _this5.refs.SecondInput.focus();\n                    },\n                    onChange: this.handleChange.bind(this, \"Name\")\n                  })]\n                }), _jsxs(View, {\n                  children: [_jsx(View, {\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        textAlign: \"center\",\n                        fontSize: 17,\n                        fontWeight: \"bold\",\n                        color: \"black\"\n                      },\n                      children: \"Enter your city :\"\n                    })\n                  }), _jsx(TextInput, {\n                    ref: \"SecondInput\",\n                    allowFontScaling: false,\n                    style: styles.textInput,\n                    placeholder: \"City\",\n                    placeholderTextColor: \"#c0c0c0\",\n                    value: this.state.City,\n                    returnKeyType: \"done\",\n                    onSubmitEditing: function onSubmitEditing(event) {\n                      Keyboard.dismiss;\n                    },\n                    onChange: this.handleChange.bind(this, \"City\")\n                  })]\n                })]\n              }), _jsx(View, {\n                style: {\n                  flex: 0.2,\n                  backgroundColor: \"#013369\",\n                  justifyContent: \"center\"\n                },\n                children: _jsx(TouchableOpacity, {\n                  onPress: this.onOk.bind(this),\n                  children: _jsx(View, {\n                    style: {\n                      justifyContent: \"center\",\n                      alignSelf: \"center\"\n                    },\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        color: \"white\",\n                        textAlign: \"center\"\n                      },\n                      children: \"OK\"\n                    })\n                  })\n                })\n              })]\n            })\n          })]\n        });\n      }\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\n;","map":{"version":3,"names":["React","useState","Modal","AsyncStorage","getUniqueId","getManufacturer","styles","Card","Header","env","LinearGradient","Icon","Dimensions","get","width","height","windowSize","console","log","FONT","font","Margin","Font_main","icon_size","play_icon","option_icon","help_icon","Main","props","state","Name","City","uuid","Level","Show","refs","createRef","setState","count","getItem","then","value","setItem","model","navigation","navigate","id","modal3","open","close","undefined","Alert","alert","text","modal4","name","e","nativeEvent","refName","scrollResponder","scrollView","getScrollResponder","scrollTo","y","flex","backgroundColor","marginTop","marginLeft","marginRight","fontSize","textAlign","fontWeight","color","textInput","inputFocused","bind","event","SecondInput","focus","handleChange","marginBottom","container","justifyContent","alignSelf","fontStyle","imageBody","alignItems","logo","require","version_text","APP_VERSION","button","start","buttonParent","buttonGrad","text_button","paddingLeft","paddingRight","option","help","modal","Keyboard","dismiss","onOk","Component"],"sources":["/Users/ecorfytechnologies/jagadish/GitHub/maxwordu/src/components/Main.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n    View,\n    StyleSheet,\n    Text,\n    Image,\n    TextInput,\n    TouchableOpacity,\n    TouchableHighlight,\n    Alert,\n    ScrollView,\n    Dimensions,\n    Keyboard\n} from 'react-native'\nimport Modal from 'react-native-modalbox';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getUniqueId, getManufacturer } from 'react-native-device-info';\nimport styles from './../Styles/homeStyle'\nimport { Card } from 'react-native-paper';\nimport Header from './Header';\nimport env from '../../env'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport Icon from '@expo/vector-icons/FontAwesome'\n\n\nconst { width, height } = Dimensions.get('window');\nvar windowSize = Dimensions.get('window');\nconsole.log(windowSize.height,'sizeheight @@@@@');\nvar FONT   = 17;\nvar font = 20;\nvar Margin = 28;\nvar Font_main=70\nvar icon_size=35\nif(windowSize.width >400){\n  FONT   = 30,\n  Margin = 40 , \n  Font_main=70,\n  icon_size=40 \n}if(windowSize.width < 350){\n  font = 18,\n  Font_main=50,\n  icon_size=30\n}\n\nconst play_icon = (\n    <Icon name=\"play\" size={icon_size} color=\"white\"/>)\n\nconst option_icon = (\n    <Icon name=\"bars\" size={icon_size} color=\"white\"/>)\n\nconst help_icon = (\n    <Icon name=\"question\" size={icon_size} color=\"white\"/>)\n\n\nexport default class Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { Name: '', City: '', uuid: '', Level: 'Beginner', Show: false };\n        this.refs = React.createRef();\n        \n\n    }\n    UNSAFE_componentWillMount() {\n        this.setState({count:this.state.count+1})\n        AsyncStorage.getItem(\"uuid\").then((value) => {\n            this.setState({\n                uuid: value\n            })\n        })\n    }\n    UNSAFE_componentDidMount() {\n       \n        AsyncStorage.getItem(\"Name\").then((value) => {\n            this.setState({ \"Name\": value })\n           \n        })\n        AsyncStorage.getItem(\"City\").then((value) => {\n            this.setState({ \"City\": value })\n        })\n        AsyncStorage.getItem(\"Level\").then((value) => {\n            if (value == null || value == \"null\") {\n                AsyncStorage.setItem(\"Level\", 'Beginner')\n            } else {\n                this.setState({ \"Level\": value })\n                this.setState({count:this.state.count+1})\n            }\n        })\n    }\n    start() {\n        if (this.state.uuid == null || this.state.uuid == \"null\" || this.state.uuid == null) {\n            this.setState({ Show: true })\n        }\n        else if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" || this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n            this.model()\n        } else {\n            \n            this.props.navigation.navigate('PlayNow');\n            \n        }\n    }\n    option() {\n        \n        this.props.navigation.navigate('Options');\n    }\n    model(id) {\n        this.refs.modal3.open();\n    }\n    onOk() {\n        this.refs.modal3.close();\n    }\n    close() {\n        if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == '' ||\n            this.state.Name == undefined) {\n            Alert.alert('MaxWord', 'Please enter name', [{ text: 'OK' }]);\n        } else\n            if (this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n                Alert.alert('MaxWord', 'Please enter city', [{ text: 'OK' }]);\n            } else {\n                AsyncStorage.setItem(\"uuid\", getUniqueId())\n                this.setState({\n                    uuid: getUniqueId(),\n                    Show: false\n                }, () => {\n                   \n                    this.props.navigation.navigate('PlayNow');\n                })\n            }\n    }\n    model1(id) {\n        this.refs.modal4.open();\n    }\n    handleChange(name, e) {\n        if (name == 'Name') {\n            AsyncStorage.setItem(\"Name\", e.nativeEvent.text)\n            this.setState({\n                Name: e.nativeEvent.text\n            })\n        } else {\n            AsyncStorage.setItem(\"City\", e.nativeEvent.text)\n            this.setState({\n                City: e.nativeEvent.text\n            })\n        }\n    }\n\n    help() {\n        \n        this.props.navigation.navigate(\"Help\")\n    }\n    \n    inputFocused(refName) {\n        \n       \n        if (refName == 'Name') {\n            if (windowSize.width >=340) {\n                let scrollResponder = this.refs.scrollView.getScrollResponder();\n                scrollResponder.scrollTo({ y: windowSize.height / 3 })\n            }\n        } else {\n            if (windowSize.width < 340) {\n                let scrollResponder = this.refs.scrollView.getScrollResponder();\n                scrollResponder.scrollTo({ y: windowSize.height / 2.3 })\n            }\n        }\n\n    }\n    render() {\n      if(this.state.Show){ \n        return (\n          \n          <Card style={{ flex: 1 }}>\n            \n           \n              <View style={{ flex: 1, backgroundColor: \"white\" }}>\n                <ScrollView\n                  // ref={scrollRef}\n                  ref=\"scrollView\"\n                  automaticallyAdjustContentInsets={false}\n                >\n                  <View>\n                    <Text\n                      allowFontScaling={false}\n                      style={{\n                        marginTop: 20,\n                        marginLeft: 20,\n                        marginRight: 20,\n                        fontSize: 20,\n                      }}\n                    >\n                      To play, simply tap on available letters to form words\n                      before the tiles fill up. If the word is correct, the\n                      letters disappear. A letter can be used more than once,\n                      and longer words score higher; “BANANA” scores higher than\n                      “BAN”. After all the tiles are filled, you have a few\n                      seconds to submit a word or the game ends. There are three\n                      levels of play to choose from. Name and City is requested\n                      for the leaderboard.\n                    </Text>\n                    <View>\n                      <Text\n                        allowFontScaling={false}\n                        style={{\n                          textAlign: \"center\",\n                          marginTop: 15,\n                          fontSize: 17,\n                          fontWeight: \"bold\",\n                          color: \"black\",\n                        }}\n                      >\n                        Enter your name :\n                      </Text>\n                    </View>\n                    <TextInput\n                      allowFontScaling={false}\n                      style={styles.textInput}\n                      placeholder=\"Name\"\n                      value={this.state.Name}\n                      placeholderTextColor={\"#c0c0c0\"}\n                      returnKeyType=\"next\"\n                      onFocus={this.inputFocused.bind(this, \"Name\")}\n                      onSubmitEditing={(event) => {\n                        this.refs.SecondInput.focus();\n                      }}\n                      onChange={this.handleChange.bind(this, \"Name\")}\n                    />\n                    <View>\n                      <Text\n                        allowFontScaling={false}\n                        style={{\n                          textAlign: \"center\",\n                          marginTop: 15,\n                          fontSize: 17,\n                          fontWeight: \"bold\",\n                          color: \"black\",\n                        }}\n                      >\n                        Enter your city :\n                      </Text>\n                    </View>\n                    <TextInput\n                      ref=\"SecondInput\"\n                      allowFontScaling={false}\n                      style={styles.textInput}\n                      placeholder=\"City\"\n                      value={this.state.City}\n                      placeholderTextColor={\"#c0c0c0\"}\n                      // value={loginDetails.city}\n                      returnKeyType=\"done\"\n                      onFocus={this.inputFocused.bind(this, \"City\")}\n                      onSubmitEditing={(event) => {\n                        this.close();\n                      }}\n                      onChange={this.handleChange.bind(this, \"City\")}\n                      // onChangeText={text => {\n                      //     onChangeData(text, 'city');\n                      // }}\n                    />\n                    <TouchableOpacity\n                      onPress={this.close.bind(this)}\n                      style={{\n                        height: 40,\n                        marginTop: 30,\n                        marginLeft: width / 4,\n                        marginRight: width / 4,\n                        backgroundColor: \"#27ae61\",\n                        marginBottom: 30,\n                      }}\n                    >\n                      <Text\n                        allowFontScaling={false}\n                        style={{\n                          textAlign: \"center\",\n                          fontSize: 25,\n                          marginTop: 6,\n                          color: \"white\",\n                        }}\n                      >\n                        OK\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </ScrollView>\n              </View>\n              </Card>)\n              }else{\n              return(\n              <View style={styles.container}>\n                <View\n                  style={{\n                    flex: 0.3,\n                    justifyContent: \"center\",\n                    alignSelf: \"center\",\n                  }}\n                >\n                  <Text\n                    allowFontScaling={false}\n                    style={{ fontSize:Font_main, fontWeight: \"bold\" ,fontStyle:'italic'}}\n                  >\n                    MaxWord\n                  </Text>\n                </View>\n                <View style={{ flex: 0.1 }}>\n                  <Text\n                    allowFontScaling={false}\n                    style={{ fontSize: 18, textAlign: \"center\" }}\n                  >\n                    a quick escape for word game lovers\n                  </Text>\n                </View>\n                <View\n                  style={[\n                    styles.imageBody,\n                    {\n                      height: 100,\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    },\n                  ]}\n                >\n                  <Image\n                    style={styles.logo}\n                    source={require(\"../img/MWicon.png\")}\n                  />\n                </View>\n                <View>\n                  <Text style={styles.version_text}>\n                    Version {env.APP_VERSION}\n                  </Text>\n                </View>\n\n\n\n\n                <View style={styles.button}>\n                  <View>\n                    <TouchableOpacity onPress={this.start.bind(this)}>\n                      <View style={styles.buttonParent}>\n                        <LinearGradient\n                          colors={['#848484', \"#535353\",\"#313131\"]}\n                          style={styles.buttonGrad}\n                        >\n                          {play_icon}\n                          <Text style={styles.text_button}>PLAY</Text>\n                        </LinearGradient>\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                  <View style={{ paddingLeft: 10, paddingRight: 10 }}>\n                    <TouchableOpacity onPress={this.option.bind(this)}>\n                      <View style={styles.buttonParent}>\n                        <LinearGradient\n                          colors={['#848484', \"#535353\",\"#313131\"]}\n                          style={styles.buttonGrad}\n                        >\n                          {option_icon}\n                          <Text style={styles.text_button}>OPTIONS</Text>\n                        </LinearGradient>\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                  <View style={{}}>\n                    <TouchableOpacity onPress={this.help.bind(this)}>\n                      <View style={styles.buttonParent}>\n                        <LinearGradient\n                          colors={['#848484', \"#535353\",\"#313131\"]}\n                          style={styles.buttonGrad}\n                        >\n                          {help_icon}\n                          <Text style={styles.text_button}>HELP</Text>\n                        </LinearGradient>\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n\n\n\n\n                <Modal\n                  style={[styles.modal, styles.modal3]}\n                  position={\"center\"}\n                  ref={\"modal3\"}\n                  backdropPressToClose={false}\n                >\n                  <View style={{ flex: 1, width: width - 50 }}>\n                    <View style={{ flex: 0.8 }}>\n                      <View style={{ justifyContent: \"center\" }}>\n                        <View>\n                          <Text\n                            allowFontScaling={false}\n                            style={{\n                              textAlign: \"center\",\n                              marginTop: 15,\n                              fontSize: 17,\n                              fontWeight: \"bold\",\n                              color: \"black\",\n                            }}\n                          >\n                            Enter your name :\n                          </Text>\n                        </View>\n                        <TextInput\n                          allowFontScaling={false}\n                          style={styles.textInput}\n                          placeholder=\"Name\"\n                          value={this.state.Name}\n                          placeholderTextColor={\"#c0c0c0\"}\n                          // value={loginDetails.name}\n                          returnKeyType=\"next\"\n                          onSubmitEditing={(event) => {\n                            this.refs.SecondInput.focus();\n                          }}\n                          onChange={this.handleChange.bind(this, \"Name\")}\n                          // onChangeText={text => {\n                          //     onChangeData(text, 'name');\n                          // }}\n                        />\n                      </View>\n                      <View>\n                        <View>\n                          <Text\n                            allowFontScaling={false}\n                            style={{\n                              textAlign: \"center\",\n                              fontSize: 17,\n                              fontWeight: \"bold\",\n                              color: \"black\",\n                            }}\n                          >\n                            Enter your city :\n                          </Text>\n                        </View>\n                        <TextInput\n                          ref=\"SecondInput\"\n                          allowFontScaling={false}\n                          style={styles.textInput}\n                          placeholder=\"City\"\n                          placeholderTextColor={\"#c0c0c0\"}\n                          // value={loginDetails.city}\n                          value={this.state.City}\n                          returnKeyType=\"done\"\n                          onSubmitEditing={(event) => {\n                            Keyboard.dismiss;\n                          }}\n                          onChange={this.handleChange.bind(this, \"City\")}\n                          // onChangeText={text => {\n                          //     onChangeData(text, 'city');\n                          // }}\n                        />\n                      </View>\n                    </View>\n                    <View\n                      style={{\n                        flex: 0.2,\n                        backgroundColor: \"#013369\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <TouchableOpacity onPress={this.onOk.bind(this)}>\n                        <View\n                          style={{\n                            justifyContent: \"center\",\n                            alignSelf: \"center\",\n                          }}\n                        >\n                          <Text\n                            allowFontScaling={false}\n                            style={{ color: \"white\", textAlign: \"center\" }}\n                          >\n                            OK\n                          </Text>\n                        </View>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </Modal>\n              </View>\n            \n       \n                        )\n    }\n  }\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}