{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport React, { Component } from \"react\";\nimport { Card, TextInput } from \"react-native-paper\";\nimport Header from \"./Header\";\nimport Modal from \"react-native-modalbox\";\nimport styles from \"./../Styles/optionsStyles\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { getUniqueId, getManufacturer } from \"react-native-device-info\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowSize = Dimensions.get(\"window\");\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar FONT = 17;\nvar Margin = 38;\nvar textFont = 20;\nvar height = 80;\n\nif (windowSize.width == 768) {\n  FONT = 30, Margin = 50, textFont = 20;\n  height = 120;\n} else if (windowSize.width == 320) {\n  textFont: 18;\n\n  height = 60;\n}\n\nvar Options = function (_Component) {\n  _inherits(Options, _Component);\n\n  var _super = _createSuper(Options);\n\n  function Options() {\n    var _this;\n\n    _classCallCheck(this, Options);\n\n    _this = _super.call(this);\n    _this.state = {\n      Level: \"Beginner\",\n      Name: \"\",\n      City: \"\",\n      uuid: \"\",\n      Show: false,\n      layer: false\n    };\n    _this.refs = React.createRef();\n    return _this;\n  }\n\n  _createClass(Options, [{\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      var self = this;\n\n      if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\") {\n        Alert.alert(\"MaxWord\", \"Please enter name\", [{\n          text: \"OK\"\n        }]);\n      } else if (this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n        Alert.alert(\"MaxWord\", \"Please enter city\", [{\n          text: \"OK\"\n        }]);\n      } else {\n        AsyncStorage.setItem(\"uuid\", getUniqueId());\n        this.setState({\n          uuid: getUniqueId(),\n          Show: false\n        }, function () {\n          var Level = self.state.Level;\n          var Name = self.state.Name;\n          var City = self.state.City;\n\n          _this2.props.navigation.replace(\"PlayNow\", {\n            Level: Level,\n            Name: Name,\n            City: City\n          });\n        });\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      var _this3 = this;\n\n      AsyncStorage.getItem(\"Name\").then(function (value) {\n        _this3.setState({\n          Name: value\n        });\n      });\n      AsyncStorage.getItem(\"City\").then(function (value) {\n        _this3.setState({\n          City: value\n        });\n      });\n      AsyncStorage.getItem(\"Level\").then(function (value) {\n        _this3.setState({\n          Level: value\n        });\n      });\n      AsyncStorage.getItem(\"uuid\").then(function (value) {\n        _this3.setState({\n          uuid: value\n        });\n      });\n    }\n  }, {\n    key: \"inputFocused\",\n    value: function inputFocused(refName) {\n      if (refName == \"Name\") {\n        var scrollResponder = this.refs.scrollView.getScrollResponder();\n        scrollResponder.scrollTo({\n          y: windowSize.height / 3\n        });\n      } else {\n        var _scrollResponder = this.refs.scrollView.getScrollResponder();\n\n        _scrollResponder.scrollTo({\n          y: windowSize.height / 2.3\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, e) {\n      if (name == \"Name\") {\n        AsyncStorage.setItem(\"Name\", e.nativeEvent.text);\n        this.setState({\n          Name: e.nativeEvent.text\n        });\n      } else {\n        AsyncStorage.setItem(\"City\", e.nativeEvent.text);\n        this.setState({\n          City: e.nativeEvent.text\n        });\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select(value) {\n      AsyncStorage.setItem(\"Level\", value);\n      this.setState({\n        Level: value\n      });\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      if (this.state.uuid == null || this.state.uuid == \"null\" || this.state.uuid == \"\") {\n        this.setState({\n          Show: true\n        });\n      } else if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" || this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n        this.model();\n      } else {\n        var Level = this.state.Level;\n        var Name = this.state.Name;\n        var City = this.state.City;\n        this.props.navigation.replace(\"PlayNow\");\n      }\n    }\n  }, {\n    key: \"home\",\n    value: function home() {\n      this.props.navigation.navigate(\"Main\");\n    }\n  }, {\n    key: \"model\",\n    value: function model(id) {\n      this.refs.modal3.open();\n    }\n  }, {\n    key: \"onOk\",\n    value: function onOk() {\n      this.refs.modal3.close();\n    }\n  }, {\n    key: \"gameDay\",\n    value: function (_gameDay) {\n      function gameDay() {\n        return _gameDay.apply(this, arguments);\n      }\n\n      gameDay.toString = function () {\n        return _gameDay.toString();\n      };\n\n      return gameDay;\n    }(function () {\n      var _this4 = this;\n\n      var name = this.state.Name;\n      var gameDate = moment().format(\"YYYY-MM-DD\");\n\n      if (this.state.uuid == null || this.state.uuid == \"null\" || this.state.uuid == \"\") {\n        this.setState({\n          Show: true\n        });\n      } else if (this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" || this.state.City == null || this.state.City == \"null\" || this.state.City == \"\") {\n        this.model();\n      } else {\n        this.setState({\n          layer: true\n        });\n        fetch(\"http://www.maxword.net/api/api/gameOfTheDay\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            udId: this.state.uuid,\n            name: name,\n            gameDate: gameDate\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (responseData) {\n          _this4.setState({\n            layer: false\n          });\n\n          if (responseData.status == \"Success\") {\n            if (responseData.message == \"Game does not exist\") {\n              Alert.alert(\"MaxWord\", \"Game does not exist\", [{\n                text: \"OK\"\n              }]);\n            } else if (responseData.message == \"Already played\") {\n              Alert.alert(\"MaxWord\", \"Already played\", [{\n                text: \"OK\"\n              }]);\n            } else {\n              var gameWord = responseData.message.gameWord;\n\n              _this4.props.navigator.push({\n                component: gameDay,\n                title: \"MaxWord\",\n                passProps: {\n                  Level: \"gameDay\",\n                  Name: name,\n                  City: _this4.state.City,\n                  gameWord: gameWord\n                }\n              });\n            }\n          }\n        });\n      }\n    })\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var options = [\"Beginner\", \"Intermediate\", \"Advanced\"];\n      return _jsxs(Card, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(Header, {\n          showBack: true,\n          onBackPress: function onBackPress() {\n            return _this5.props.navigation.navigate(\"Main\");\n          },\n          title: \"Options\"\n        }), this.state.Show ? _jsx(View, {\n          style: {\n            flex: 1,\n            marginTop: 64\n          },\n          children: _jsx(ScrollView, {\n            ref: \"scrollView\",\n            automaticallyAdjustContentInsets: false,\n            children: _jsxs(View, {\n              children: [_jsx(Text, {\n                allowFontScaling: false,\n                style: {\n                  marginTop: 20,\n                  marginLeft: 20,\n                  marginRight: 20,\n                  fontSize: 20\n                },\n                children: \"To play, simply tap on available letters to form words before the tiles fill up. If the word is correct, the letters disappear. A letter can be used more than once, and longer words score higher; \\u201CBANANA\\u201D scores higher than \\u201CBAN\\u201D. After all the tiles are filled, you have a few seconds to submit a word or the game ends. There are three levels of play to choose from. Name and City is requested for the leaderboard.\"\n              }), _jsx(View, {\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: {\n                    textAlign: \"center\",\n                    marginTop: 15,\n                    fontSize: 17,\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                  },\n                  children: \"Enter your name :\"\n                })\n              }), console.log(this.state.Name, \"options\"), _jsx(TextInput, {\n                allowFontScaling: false,\n                style: styles.textInput,\n                placeholder: \"Name\",\n                value: this.state.Name,\n                returnKeyType: \"next\",\n                onFocus: this.inputFocused.bind(this, \"Name\"),\n                onSubmitEditing: function onSubmitEditing(event) {\n                  _this5.refs.SecondInput.focus();\n                },\n                onChange: this.handleChange.bind(this, \"Name\")\n              }), _jsx(View, {\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: {\n                    textAlign: \"center\",\n                    marginTop: 15,\n                    fontSize: 17,\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                  },\n                  children: \"Enter your city :\"\n                })\n              }), _jsx(TextInput, {\n                ref: \"SecondInput\",\n                allowFontScaling: false,\n                style: styles.textInput,\n                placeholder: \"City\",\n                value: this.state.City,\n                returnKeyType: \"done\",\n                onFocus: this.inputFocused.bind(this, \"City\"),\n                onSubmitEditing: function onSubmitEditing(event) {\n                  _this5.close();\n                },\n                onChange: this.handleChange.bind(this, \"City\")\n              }), _jsx(TouchableOpacity, {\n                onPress: this.close.bind(this),\n                style: {\n                  height: 40,\n                  marginTop: 30,\n                  marginLeft: windowSize.width / 4,\n                  marginRight: windowSize.width / 4,\n                  backgroundColor: \"#27ae61\",\n                  marginBottom: 30\n                },\n                children: _jsx(Text, {\n                  allowFontScaling: false,\n                  style: {\n                    textAlign: \"center\",\n                    fontSize: 25,\n                    marginTop: 6,\n                    color: \"white\"\n                  },\n                  children: \"OK\"\n                })\n              })]\n            })\n          })\n        }) : _jsxs(View, {\n          style: styles.container,\n          children: [_jsxs(View, {\n            style: styles.body,\n            children: [_jsx(Card, {\n              style: {\n                height: 60,\n                width: windowSize.width\n              },\n              children: _jsxs(View, {\n                style: {\n                  flex: 1,\n                  flexDirection: \"row\"\n                },\n                children: [_jsx(View, {\n                  style: {\n                    width: \"50%\"\n                  },\n                  children: _jsx(View, {\n                    style: {\n                      flex: 1,\n                      justifyContent: \"center\",\n                      textAlign: \"center\",\n                      paddingLeft: \"60%\"\n                    },\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        fontSize: textFont,\n                        marginLeft: 10,\n                        fontWeight: \"bold\"\n                      },\n                      children: \"Enter Your Name:\"\n                    })\n                  })\n                }), _jsx(View, {\n                  style: {\n                    width: windowSize.width / 6\n                  },\n                  children: _jsx(View, {\n                    style: {\n                      flex: 1\n                    },\n                    children: _jsx(TextInput, {\n                      style: {\n                        height: 60,\n                        width: windowSize.width / 6,\n                        marginLeft: 10,\n                        fontSize: textFont,\n                        justifyContent: \"center\",\n                        color: \"black\"\n                      },\n                      placeholder: \"Name\",\n                      value: this.state.Name,\n                      returnKeyType: \"next\",\n                      onSubmitEditing: function onSubmitEditing(event) {\n                        _this5.refs.SecondInput.focus();\n                      },\n                      onChange: this.handleChange.bind(this, \"Name\")\n                    })\n                  })\n                })]\n              })\n            }), _jsx(View, {\n              style: {\n                height: 60,\n                width: windowSize.width\n              },\n              children: _jsxs(View, {\n                style: {\n                  flex: 1,\n                  flexDirection: \"row\"\n                },\n                children: [_jsx(View, {\n                  style: {\n                    width: \"50%\"\n                  },\n                  children: _jsx(View, {\n                    style: {\n                      flex: 1,\n                      justifyContent: \"center\",\n                      paddingLeft: \"60%\",\n                      textAlign: \"center\"\n                    },\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        fontSize: textFont,\n                        marginLeft: 10,\n                        fontWeight: \"bold\"\n                      },\n                      children: \"Enter Your City:\"\n                    })\n                  })\n                }), _jsx(View, {\n                  style: {\n                    width: windowSize.width / 6\n                  },\n                  children: _jsx(View, {\n                    style: {\n                      flex: 1\n                    },\n                    children: _jsx(TextInput, {\n                      ref: \"SecondInput\",\n                      style: {\n                        height: 60,\n                        width: windowSize.width / 6,\n                        marginLeft: 10,\n                        fontSize: textFont,\n                        justifyContent: \"center\",\n                        color: \"black\"\n                      },\n                      returnKeyType: \"done\",\n                      placeholder: \"City\",\n                      value: this.state.City,\n                      onSubmitEditing: function onSubmitEditing(event) {\n                        Keyboard.dismiss;\n                      },\n                      onChange: this.handleChange.bind(this, \"City\")\n                    })\n                  })\n                })]\n              })\n            }), _jsxs(View, {\n              children: [_jsx(Text, {\n                allowFontScaling: false,\n                style: [styles.levelText, {\n                  marginBottom: 20\n                }],\n                children: \"Choose level:\"\n              }), _jsxs(View, {\n                style: {\n                  height: 80\n                },\n                children: [_jsxs(View, {\n                  style: styles.row1,\n                  children: [_jsx(View, {\n                    style: styles.row1_column1,\n                    children: _jsxs(TouchableOpacity, {\n                      style: [styles.blue_column, styles.shadowProp],\n                      onPress: this.select.bind(this, \"Beginner\"),\n                      children: [_jsx(View, {\n                        style: {\n                          height: 40,\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        },\n                        children: _jsx(Text, {\n                          allowFontScaling: false,\n                          style: {\n                            fontSize: FONT,\n                            justifyContent: \"center\",\n                            textAlign: 'center'\n                          },\n                          children: \"Beginner\"\n                        })\n                      }), _jsx(View, {\n                        style: {\n                          height: 40,\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        },\n                        children: this.state.Level == \"Beginner\" ? _jsx(Image, {\n                          style: {\n                            height: 30,\n                            width: 30\n                          },\n                          source: require(\"../../assets/check.png\")\n                        }) : _jsx(View, {})\n                      })]\n                    })\n                  }), _jsx(View, {\n                    style: styles.row1_column2,\n                    children: _jsxs(TouchableOpacity, {\n                      style: [styles.green_column, styles.shadowProp],\n                      onPress: this.select.bind(this, \"Intermediate\"),\n                      children: [_jsx(View, {\n                        style: {\n                          height: 40,\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        },\n                        children: _jsx(Text, {\n                          allowFontScaling: false,\n                          style: {\n                            fontSize: FONT,\n                            justifyContent: \"center\",\n                            textAlign: 'center'\n                          },\n                          children: \"Intermediate\"\n                        })\n                      }), _jsx(View, {\n                        style: {\n                          height: 40,\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        },\n                        children: this.state.Level == \"Intermediate\" ? _jsx(Image, {\n                          style: {\n                            height: 30,\n                            width: 30\n                          },\n                          source: require(\"../../assets/check.png\")\n                        }) : _jsx(View, {})\n                      })]\n                    })\n                  })]\n                }), _jsxs(View, {\n                  style: styles.row2,\n                  children: [_jsx(View, {\n                    style: styles.row2_column1,\n                    children: _jsxs(TouchableOpacity, {\n                      style: [styles.blue_column, styles.shadowProp],\n                      onPress: this.select.bind(this, \"Advanced\"),\n                      children: [_jsx(View, {\n                        style: {\n                          height: 40,\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        },\n                        children: _jsx(Text, {\n                          allowFontScaling: false,\n                          style: {\n                            fontSize: FONT,\n                            justifyContent: \"center\",\n                            textAlign: 'center'\n                          },\n                          children: \"Advanced\"\n                        })\n                      }), _jsx(View, {\n                        style: {\n                          height: 40,\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        },\n                        children: this.state.Level == \"Advanced\" ? _jsx(Image, {\n                          style: {\n                            height: 30,\n                            width: 30\n                          },\n                          source: require(\"../../assets/check.png\")\n                        }) : _jsx(View, {})\n                      })]\n                    })\n                  }), _jsx(View, {\n                    style: styles.row2_column2,\n                    children: _jsxs(TouchableOpacity, {\n                      style: [styles.green_column, styles.shadowProp],\n                      onPress: this.select.bind(this, \"Pro\"),\n                      children: [_jsx(View, {\n                        style: {\n                          height: 40,\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        },\n                        children: _jsx(Text, {\n                          allowFontScaling: false,\n                          style: {\n                            fontSize: FONT,\n                            justifyContent: \"center\",\n                            textAlign: 'center'\n                          },\n                          children: \"Pro\"\n                        })\n                      }), _jsx(View, {\n                        style: {\n                          height: 40,\n                          justifyContent: \"center\",\n                          alignItems: \"center\"\n                        },\n                        children: this.state.Level == \"Pro\" ? _jsx(Image, {\n                          style: {\n                            height: 30,\n                            width: 30\n                          },\n                          source: require(\"../../assets/check.png\")\n                        }) : _jsx(View, {})\n                      })]\n                    })\n                  })]\n                })]\n              })]\n            })]\n          }), _jsx(View, {\n            style: {\n              height: height,\n              width: windowSize.width\n            },\n            children: _jsxs(View, {\n              style: {\n                flex: 1,\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                textAlign: 'center'\n              },\n              children: [_jsx(TouchableOpacity, {\n                onPress: this.play.bind(this),\n                style: [styles.shadowProp, {\n                  marginRight: '15%',\n                  marginLeft: '5%',\n                  height: height,\n                  backgroundColor: \"#27ae61\",\n                  width: \"15%\",\n                  borderRadius: 15\n                }],\n                children: _jsx(View, {\n                  style: {\n                    flex: 1,\n                    justifyContent: \"center\"\n                  },\n                  children: _jsx(Text, {\n                    allowFontScaling: false,\n                    style: {\n                      textAlign: \"center\",\n                      color: \"white\",\n                      fontWeight: \"bold\",\n                      fontSize: FONT\n                    },\n                    children: \"Play Now\"\n                  })\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: this.home.bind(this),\n                style: [styles.shadowProp, {\n                  width: \"15%\",\n                  height: height,\n                  backgroundColor: \"#34475d\",\n                  borderRadius: 15,\n                  marginRight: '5%',\n                  marginleft: '15%'\n                }],\n                children: _jsx(View, {\n                  style: {\n                    flex: 1,\n                    justifyContent: \"center\"\n                  },\n                  children: _jsx(Text, {\n                    allowFontScaling: false,\n                    style: {\n                      textAlign: \"center\",\n                      color: \"white\",\n                      fontWeight: \"bold\",\n                      fontSize: FONT\n                    },\n                    children: \"Home\"\n                  })\n                })\n              })]\n            })\n          }), _jsx(Modal, {\n            style: [styles.modal, styles.modal3],\n            position: \"center\",\n            ref: \"modal3\",\n            backdropPressToClose: false,\n            children: _jsxs(View, {\n              style: {\n                flex: 1,\n                width: windowSize.width - 50\n              },\n              children: [_jsx(View, {\n                style: {\n                  flex: 0.7,\n                  justifyContent: \"center\",\n                  alignSelf: \"center\"\n                },\n                children: _jsx(View, {\n                  children: this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" && this.state.City == null || this.state.City == \"null\" || this.state.City == \"\" ? _jsx(Text, {\n                    allowFontScaling: false,\n                    style: {\n                      textAlign: \"center\",\n                      fontSize: 17\n                    },\n                    children: \"Please Enter Name and City\"\n                  }) : this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" ? _jsx(Text, {\n                    allowFontScaling: false,\n                    style: {\n                      textAlign: \"center\",\n                      fontSize: 17\n                    },\n                    children: \"Please Enter Name\"\n                  }) : this.state.City == null || this.state.City == \"null\" || this.state.City == \"\" ? _jsx(Text, {\n                    allowFontScaling: false,\n                    style: {\n                      textAlign: \"center\",\n                      fontSize: 17\n                    },\n                    children: \"Please Enter City\"\n                  }) : _jsx(View, {})\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 0.3,\n                  backgroundColor: \"#013369\",\n                  justifyContent: \"center\"\n                },\n                children: _jsx(TouchableOpacity, {\n                  onPress: this.onOk.bind(this),\n                  children: _jsx(View, {\n                    style: {\n                      justifyContent: \"center\",\n                      alignSelf: \"center\"\n                    },\n                    children: _jsx(Text, {\n                      allowFontScaling: false,\n                      style: {\n                        color: \"white\",\n                        textAlign: \"center\"\n                      },\n                      children: \"OK\"\n                    })\n                  })\n                })\n              })]\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Options;\n}(Component);\n\nexport { Options as default };","map":{"version":3,"names":["React","Component","Card","TextInput","Header","Modal","styles","AsyncStorage","getUniqueId","getManufacturer","windowSize","Dimensions","get","width","FONT","Margin","textFont","height","Options","state","Level","Name","City","uuid","Show","layer","refs","createRef","self","Alert","alert","text","setItem","setState","props","navigation","replace","getItem","then","value","refName","scrollResponder","scrollView","getScrollResponder","scrollTo","y","name","e","nativeEvent","model","navigate","id","modal3","open","close","gameDate","moment","format","fetch","method","headers","Accept","body","JSON","stringify","udId","response","json","responseData","status","message","gameWord","navigator","push","component","gameDay","title","passProps","options","flex","marginTop","marginLeft","marginRight","fontSize","textAlign","fontWeight","color","console","log","textInput","inputFocused","bind","event","SecondInput","focus","handleChange","backgroundColor","marginBottom","container","flexDirection","justifyContent","paddingLeft","Keyboard","dismiss","levelText","row1","row1_column1","blue_column","shadowProp","select","alignItems","require","row1_column2","green_column","row2","row2_column1","row2_column2","play","borderRadius","home","marginleft","modal","alignSelf","onOk"],"sources":["/Users/ecorfytechnologies/jagadish/GitHub/maxwordu/src/components/Options.js"],"sourcesContent":["// import React from 'react-native';\n// import Play from  './Play';\n// import Modal from 'react-native-modalbox';\n// import DeviceInfo from 'react-native-device-info';\n// // import dismissKeyboard from 'dismissKeyboard';\n// import {\n//   View,\n//   StyleSheet,\n//   Text,\n//   Image,\n//   TextInput,\n//   TouchableOpacity,\n//   TouchableHighlight,\n//   Alert,\n//   ScrollView,\n//   Dimensions,TouchableWithoutFeedback,\n//   Linking,AppRegistry\n// } from 'react-native'\n// import gameDay from './gameDay';\n\n// // import { AdMobInterstitial, AdMobBanner } from 'react-native-admob';\n// // import moment from 'moment';\n// // import styles from './../Styles/optionsStyles';\n// // const {\n// //   AppRegistry,\n// //   LinkingIOS,\n// //   TouchableWithoutFeedback,\n// // } = React;\n\n// // import { GoogleAnalyticsTracker } from 'react-native-google-analytics-bridge';\n// // let tracker = new GoogleAnalyticsTracker('UA-86654723-1');\n\n// // tracker.trackScreenView('Options');\n// var FONT   = 17;\n// var Margin = 38;\n// var textFont = 20\n// var height = 80\n// if(windowSize.width == 768){\n//   FONT   = 30,\n//   Margin = 50,\n//   textFont = 20\n//   height = 120\n// }else if(windowSize.width == 320){\n//   textFont:18\n//   height = 60\n\n// }\n// var windowSize = Dimensions.get('window');\n// class Options extends React.Component {\n//   constructor(){\n//     super();\n//     this.state = {Level:\"Beginner\",Name:\"\",\n//     City:\"\",uuid:'',Show:false,\n//     layer:false\n//     };\n//   }\n//   handleChange(name,e){\n//     if(name == 'Name'){\n//       AsyncStorage.setItem(\"Name\", e.nativeEvent.text)\n//        this.setState({\n//          Name: e.nativeEvent.text\n//        })\n//     }else{\n//        AsyncStorage.setItem(\"City\", e.nativeEvent.text)\n//        this.setState({\n//          City: e.nativeEvent.text\n//        })\n//     }\n//   }\n//   componentWillMount() {\n//     AsyncStorage.getItem(\"Name\").then((value) =>{\n//       this.setState({\"Name\":value})\n//     }).done();\n//     AsyncStorage.getItem(\"City\").then((value) =>{\n//       this.setState({\"City\":value})\n//     }).done();\n//     AsyncStorage.getItem(\"Level\").then((value) =>{\n//       this.setState({\"Level\":value})\n//     }).done();\n//      AsyncStorage.getItem(\"uuid\").then((value) =>{\n//         this.setState({\n//           uuid:value\n//         })\n//     }).done();\n//   }\n//   componentDidMount(){\n//     AdMobInterstitial.setTestDeviceID('EMULATOR');\n//     AdMobInterstitial.setAdUnitID('ca-app-pub-7238183882077023/7178259794');\n\n//     AdMobInterstitial.addEventListener('interstitialDidLoad',\n//       () => console.log('interstitialDidLoad event'));\n//     AdMobInterstitial.addEventListener('interstitialDidClose',\n//       this.interstitialDidClose);\n//     AdMobInterstitial.addEventListener('interstitialDidFailToLoad',\n//       () => console.log('interstitialDidFailToLoad event'));\n//     AdMobInterstitial.addEventListener('interstitialDidOpen',\n//       () => console.log('interstitialDidOpen event'));\n//     AdMobInterstitial.addEventListener('interstitialWillLeaveApplication',\n//       () => console.log('interstitalWillLeaveApplication event'));\n\n//     AdMobInterstitial.requestAd((error) => error && console.log(error));\n//   }\n//   model(id){\n//     this.refs.modal3.open();\n//   }\n//   onOk(){\n//     this.refs.modal3.close();\n//   }\n//   model1(id){\n//     this.refs.modal4.open();\n//   }\n//   play(){\n//     if(this.state.uuid == null || this.state.uuid == \"null\" || this.state.uuid == \"\"){\n//       this.setState({Show:true})\n//     }\n//     else if(this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" || this.state.City == null || this.state.City == \"null\" || this.state.City == \"\"){\n//       this.model()\n//     }else{\n//      var Level = this.state.Level\n//       var Name  = this.state.Name\n//       var City = this.state.City\n//       this.props.navigator.push({\n//         name:'Play Now',\n//         component: Play,\n//         title: 'MaxWord',\n//         passProps:{Level:Level,Name:Name,City:City}\n//       });\n//     }\n//   }\n//   home(){\n//     // var Home = require('./Home');\n//     this.props.navigator.replacePreviousAndPop({\n//       component:Home,\n//       title: 'MaxWord',\n//     })\n//   }\n//   close(){\n//    var self = this\n//     if(this.state.Name == null || this.state.Name == \"null\" || this.state.Name == ''){\n//       Alert.alert('MaxWord','Please enter name',[{text:'OK'}]);\n//     }else if(this.state.City == null || this.state.City == \"null\" || this.state.City == \"\"){\n//       Alert.alert('MaxWord','Please enter city',[{text:'OK'}]);\n//     }else{\n//       AsyncStorage.setItem(\"uuid\", DeviceInfo.getUniqueID())\n//       this.setState({\n//         uuid:DeviceInfo.getUniqueID(),\n//         Show:false\n//       },()=>{\n//         var Level = self.state.Level\n//         var Name  = self.state.Name\n//         var City = self.state.City\n//         this.props.navigator.push({\n//           name:'Play Now',\n//           component: Play,\n//           title: 'MaxWord',\n//           passProps:{Level:Level,Name:Name,City:City}\n//         });\n//       })\n//     }\n//   }\n//   inputFocused (refName) {\n//     if(refName == 'Name'){\n//       let scrollResponder = this.refs.scrollView.getScrollResponder();\n//       scrollResponder.scrollTo({y: windowSize.height/3})\n//     }else{\n//       let scrollResponder = this.refs.scrollView.getScrollResponder();\n//       scrollResponder.scrollTo({y: windowSize.height/2.3})\n//     }\n//   }\n//   gameDay(){\n//      var name = this.state.Name\n//      var gameDate = moment().format('YYYY-MM-DD')\n//     if(this.state.uuid == null || this.state.uuid == \"null\" || this.state.uuid == \"\"){\n//       this.setState({Show:true})\n//     }\n//     else if(this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" || this.state.City == null || this.state.City == \"null\" || this.state.City == \"\"){\n//       this.model()\n//     }else{\n//       this.setState({layer:true})\n//       fetch('https://maxwords.herokuapp.com/api/gameOfTheDay', {\n//       method: 'POST',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({'udId':this.state.uuid,'name':name,\"gameDate\":gameDate})\n//     }).then((response) => response.json()).then((responseData) => {\n//        this.setState({layer:false})\n//        if(responseData.status == \"Success\"){\n//         if(responseData.message == 'Game does not exist'){\n//           Alert.alert('MaxWord','Game does not exist',[{text:'OK'}]);\n//         }else if(responseData.message == 'Already played'){\n//           Alert.alert('MaxWord','Already played',[{text:'OK'}]);\n//         }else{\n//           var gameWord = responseData.message.gameWord\n//           this.props.navigator.push({\n//             component: gameDay,\n//             title: 'MaxWord',\n//             passProps:{Level:'gameDay',Name:name,City:this.state.City,gameWord:gameWord}\n//           });\n//         }\n//        }\n//       })\n//     }\n//   }\n//   select(value){\n//     AsyncStorage.setItem(\"Level\", value)\n//     this.setState({\n//         Level:value,\n//       });\n//   }\n\n//   render() {\n//     const options = [\n//       \"Beginner\",\n//       \"Intermediate\",\n//       \"Advanced\",\n//     ];\n//      if(this.state.Show){\n//     return(\n//       <View style={{flex:1,marginTop:64}}>\n//          {/* <ScrollView ref='scrollView' automaticallyAdjustContentInsets={false}>\n//             <View>\n//               <Text allowFontScaling={false} style={{marginTop:20,marginLeft:20,marginRight:20,fontSize:20}}>\n//               To play, simply tap on available letters to form words before the tiles fill up. If the word is correct, the letters disappear. A letter can be used more than once, and longer words score higher; “BANANA” scores higher than “BAN”. After all the tiles are filled, you have a few seconds to submit a word or the game ends. There are three levels of play to choose from. Name and City is requested for the leaderboard.\n//               </Text>\n//               <View>\n//                 <Text allowFontScaling={false} style={{textAlign:'center',marginTop:15,fontSize:17,fontWeight:'bold',color:'black'}}>Enter your name :</Text>\n//               </View>\n//               <TextInput\n//                 allowFontScaling={false}\n//                 style={styles.textInput}\n//                 placeholder=\"Name\"\n//                 value={this.state.Name}\n//                 returnKeyType='next'\n//                  onFocus={this.inputFocused.bind(this, 'Name')}\n//                  onSubmitEditing={(event)=>{\n//                     this.refs.SecondInput.focus();\n//                   }}\n//                 onChange={this.handleChange.bind(this,'Name')}/>\n//                 <View>\n//                 <Text allowFontScaling={false} style={{textAlign:'center',marginTop:15,fontSize:17,fontWeight:'bold',color:'black'}}>Enter your city :</Text>\n//                 </View>\n//                 <TextInput\n//                   ref='SecondInput'\n//                   allowFontScaling={false}\n//                   style={styles.textInput}\n//                   placeholder=\"City\"\n//                   value={this.state.City}\n//                   returnKeyType='done'\n//                   onFocus={this.inputFocused.bind(this, 'City')}\n//                   onSubmitEditing={(event)=>{\n//                     this.close();\n//                     }}\n//                   onChange={this.handleChange.bind(this,'City')}/>\n//                   <TouchableOpacity onPress={this.close.bind(this)} style={{height:40,marginTop:30,marginLeft:windowSize.width/4,marginRight:windowSize.width/4,backgroundColor:'#27ae61',marginBottom:30}}>\n//                     <Text allowFontScaling={false} style={{textAlign:'center',fontSize:25,marginTop:6,color:'white'}}>OK</Text>\n//                   </TouchableOpacity>\n//                 </View>\n//           </ScrollView> */}\n//       </View>\n//     )\n//    }else{\n//     return (\n//       <View style={styles.container}>\n//           {/* <View style={styles.body}>\n//             <View style={{height:60,width:windowSize.width}}>\n//               <View style={{flex:1,flexDirection:'row'}}>\n//                 <View style={{width:windowSize.width/2}}>\n//                   <View style={{flex:1,justifyContent:'center'}}>\n//                     <Text allowFontScaling={false} style={{fontSize:textFont,marginLeft:10,fontWeight:'bold'}}>Enter Your Name:</Text>\n//                   </View>\n//                 </View>\n//                 <View style={{width:windowSize.width/2}}>\n//                   <View style={{flex:1}}>\n//                     <TextInput\n//                      style={{height:60,width:windowSize.width/2,marginLeft:10,fontSize: textFont,justifyContent:'center',color: 'black'}}\n//                      value={this.state.Name}\n//                      placeholder=\"Name\"\n//                      returnKeyType='next'\n//                      onSubmitEditing={(event)=>{\n//                         this.refs.SecondInput.focus();\n//                       }}\n//                      onChange={this.handleChange.bind(this,'Name')}/>\n//                   </View>\n//                 </View>\n//               </View>\n//             </View>\n//             <View style={{height:1,backgroundColor:'black',marginLeft:10,marginRight:10}}></View>\n//             <View style={{height:60,width:windowSize.width}}>\n//               <View style={{flex:1,flexDirection:'row'}}>\n//                 <View style={{width:windowSize.width/2}}>\n//                   <View style={{flex:1,justifyContent:'center'}}>\n//                     <Text allowFontScaling={false} style={{fontSize:textFont,marginLeft:10,fontWeight:'bold'}}>Enter Your City:</Text>\n//                   </View>\n//                 </View>\n//                 <View style={{width:windowSize.width/2}}>\n//                   <View style={{flex:1}}>\n//                     <TextInput\n//                     ref='SecondInput'\n//                      style={{height:60,width:windowSize.width/2,marginLeft:10,fontSize: textFont,justifyContent:'center',color: 'black'}}\n//                      value={this.state.City}\n//                      returnKeyType='done'\n//                      placeholder=\"City\"\n//                      onSubmitEditing={(event)=>{\n//                       dismissKeyboard();\n//                       }}\n//                      onChange={this.handleChange.bind(this,'City')}/>\n//                   </View>\n//                 </View>\n//               </View>\n//             </View>\n//             <View style={{height:1,backgroundColor:'black',marginLeft:10,marginRight:10}}></View>\n//             <View>\n//               <Text allowFontScaling={false} style={styles.levelText}>Choose level:</Text>\n//               <View style={{height:1,backgroundColor:'black'}}></View>\n//               <View style={{height:80}}>\n//                 <View style={{flex:1,flexDirection:'row'}}>\n//                   <TouchableOpacity style={{width:windowSize.width/4}} onPress={this.select.bind(this,'Beginner')}>\n//                     <View style={{flex:1,flexDirection:'row'}}>\n//                     <View style={{flex:1,flexDirection:'column'}}>\n//                     <View style={{width:windowSize.width/4,height:40,justifyContent:'center',alignItems:'center'}}>\n//                       <Text allowFontScaling={false} style={{fontSize:12}}>Beginner</Text>\n//                     </View>\n//                     <View style={{width:windowSize.width/4,height:40,justifyContent:'center',alignItems:'center'}}>\n//                     {this.state.Level == 'Beginner' ? (\n//                       <Image style={{height:30,width:30}}  source={require('image!check')} />\n//                       ):(<View></View>)}\n//                     </View>\n//                     </View>\n//                     <View style={{height:80,width:1,backgroundColor:'black'}}></View>\n//                     </View>\n//                   </TouchableOpacity>\n//                   <TouchableOpacity style={{width:windowSize.width/4}} onPress={this.select.bind(this,'Intermediate')}>\n//                     <View style={{flex:1,flexDirection:'row'}}>\n//                     <View style={{flex:1,flexDirection:'column'}}>\n//                     <View style={{width:windowSize.width/4,height:40,justifyContent:'center',alignItems:'center'}}>\n//                       <Text allowFontScaling={false} style={{fontSize:12}}>Intermediate</Text>\n//                     </View>\n//                     <View style={{width:windowSize.width/4,height:40,justifyContent:'center',alignItems:'center'}}>\n//                       {this.state.Level == 'Intermediate' ? (\n//                       <Image style={{height:30,width:30}}  source={require('image!check')} />\n//                       ):(<View></View>)}\n//                     </View>\n//                     </View>\n//                     <View style={{height:80,width:1,backgroundColor:'black'}}></View>\n//                     </View>\n//                   </TouchableOpacity>\n//                   <TouchableOpacity style={{width:windowSize.width/4,height:80}} onPress={this.select.bind(this,'Advanced')}>\n//                     <View style={{flex:1,flexDirection:'row'}}>\n//                     <View style={{flex:1,flexDirection:'column'}}>\n//                     <View style={{width:windowSize.width/4,height:40,justifyContent:'center',alignItems:'center'}}>\n//                       <Text allowFontScaling={false} style={{fontSize:12}}>Advanced</Text>\n//                     </View>\n//                     <View style={{width:windowSize.width/4,height:40,justifyContent:'center',alignItems:'center'}}>\n//                       {this.state.Level == 'Advanced' ? (\n//                       <Image style={{height:30,width:30}}  source={require('image!check')} />\n//                       ):(<View></View>)}\n//                     </View>\n//                     </View>\n//                     <View style={{height:80,width:1,backgroundColor:'black'}}></View>\n//                      </View>\n//                   </TouchableOpacity>\n//                   <TouchableOpacity style={{width:windowSize.width/4}} onPress={this.select.bind(this,'Pro')}>\n//                     <View style={{width:windowSize.width/4,height:40,justifyContent:'center',alignItems:'center'}}>\n//                       <Text allowFontScaling={false} style={{fontSize:12}}>Pro</Text>\n//                     </View>\n//                     <View style={{width:windowSize.width/4,height:40,justifyContent:'center',alignItems:'center'}}>\n//                       {this.state.Level == 'Pro' ? (\n//                       <Image style={{height:30,width:30}}  source={require('image!check')} />\n//                       ):(<View></View>)}\n//                     </View>\n//                   </TouchableOpacity>\n//                 </View>\n//               </View>\n//               <View style={{height:1,width:windowSize.width,backgroundColor:'black'}}></View>\n//             </View>\n\n//           </View> */}\n//           {/* <View style={{height:height,width:windowSize.width}}>\n//             <View style={{flex:1,flexDirection:'row'}}>\n//               <TouchableOpacity onPress={this.play.bind(this)} style={{width:windowSize.width/2,height:height,backgroundColor:'#27ae61'}}>\n//                 <View style={{flex:1,justifyContent:'center'}}>\n//                   <Text allowFontScaling={false} style={{textAlign:'center',color:'white',fontWeight:'bold',fontSize:FONT}}>Play Now</Text>\n//                 </View>\n//               </TouchableOpacity>\n//               <TouchableOpacity onPress={this.home.bind(this)} style={{width:windowSize.width/2,height:height,backgroundColor:'#34475d'}}>\n//                 <View style={{flex:1,justifyContent:'center'}}>\n//                   <Text allowFontScaling={false} style={{textAlign:'center',color:'white',fontWeight:'bold',fontSize:FONT}}>Home</Text>\n//                 </View>\n//               </TouchableOpacity>\n//             </View>\n//           </View> */}\n\n//           {/* <View style={{marginTop:3}}>\n//             <AdMobBanner\n//               bannerSize={this.state.bannerSize}\n//               testDeviceID=\"EMULATOR\"\n//               adUnitID=\"ca-app-pub-7238183882077023/7178259794\"/>\n//           </View> */}\n//           {/* <Modal style={[styles.modal, styles.modal3]} position={\"center\"} ref={\"modal3\"} backdropPressToClose={false}>\n//             <View style={{flex:1,width:windowSize.width-50}}>\n//               <View style={{flex:0.7,justifyContent:'center',alignSelf:'center'}}>\n//                <View>\n//                {this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" && this.state.City == null || this.state.City == \"null\" || this.state.City == \"\" ?(\n//                 <Text allowFontScaling={false} style={{textAlign:'center',fontSize:17}}>Please Enter Name and City</Text>\n//                 ):this.state.Name == null || this.state.Name == \"null\" || this.state.Name == \"\" ? (\n//                 <Text allowFontScaling={false} style={{textAlign:'center',fontSize:17}}>Please Enter Name</Text>\n//                 ):this.state.City == null || this.state.City == \"null\" || this.state.City == \"\" ? (\n//                 <Text allowFontScaling={false} style={{textAlign:'center',fontSize:17}}>Please Enter City</Text>\n//                 ):<View></View>}\n//                </View>\n//               </View>\n//               <View style={{flex:0.3,backgroundColor:'#013369',justifyContent:\"center\"}}>\n//                 <TouchableOpacity onPress={this.onOk.bind(this)}>\n//                   <View style={{justifyContent:'center',alignSelf:'center'}}>\n//                     <Text allowFontScaling={false} style={{color:'white',textAlign:'center'}}>OK</Text>\n//                   </View>\n//                 </TouchableOpacity>\n//               </View>\n//             </View>\n//           </Modal> */}\n//         </View>\n//         );\n//     }\n//   }\n// }\n// module.exports = Options\n\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  TouchableHighlight,\n  Alert,\n  ScrollView,\n  Dimensions,\n  Keyboard,\n} from \"react-native\";\nimport React, { Component } from \"react\";\nimport { Card, TextInput } from \"react-native-paper\";\nimport Header from \"./Header\";\nimport Modal from \"react-native-modalbox\";\nimport styles from \"./../Styles/optionsStyles\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { getUniqueId, getManufacturer } from \"react-native-device-info\";\nvar windowSize = Dimensions.get(\"window\");\n\nconst { width } = Dimensions.get(\"window\");\nvar FONT = 17;\nvar Margin = 38;\nvar textFont = 20;\nvar height = 80;\nif (windowSize.width == 768) {\n  (FONT = 30), (Margin = 50), (textFont = 20);\n  height = 120;\n} else if (windowSize.width == 320) {\n  textFont: 18;\n  height = 60;\n}\nexport default class Options extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Level: \"Beginner\",\n      Name: \"\",\n      City: \"\",\n      uuid: \"\",\n      Show: false,\n      layer: false,\n    };\n    this.refs = React.createRef();\n  }\n\n  close() {\n    var self = this;\n    if (\n      this.state.Name == null ||\n      this.state.Name == \"null\" ||\n      this.state.Name == \"\"\n    ) {\n      Alert.alert(\"MaxWord\", \"Please enter name\", [{ text: \"OK\" }]);\n    } else if (\n      this.state.City == null ||\n      this.state.City == \"null\" ||\n      this.state.City == \"\"\n    ) {\n      Alert.alert(\"MaxWord\", \"Please enter city\", [{ text: \"OK\" }]);\n    } else {\n      AsyncStorage.setItem(\"uuid\", getUniqueId());\n      this.setState(\n        {\n          uuid: getUniqueId(),\n          Show: false,\n        },\n        () => {\n          var Level = self.state.Level;\n          var Name = self.state.Name;\n          var City = self.state.City;\n          // this.props.navigator.push({\n          //   name: 'Play Now',\n          //   component: Play,\n          //   title: 'MaxWord',\n          //   passProps: { Level: Level, Name: Name, City: City }\n          // });\n          this.props.navigation.replace(\"PlayNow\", {\n            Level: Level,\n            Name: Name,\n            City: City,\n          });\n        }\n      );\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    AsyncStorage.getItem(\"Name\").then((value) => {\n      this.setState({ Name: value });\n    });\n    AsyncStorage.getItem(\"City\").then((value) => {\n      this.setState({ City: value });\n    });\n    AsyncStorage.getItem(\"Level\").then((value) => {\n      this.setState({ Level: value });\n    });\n    AsyncStorage.getItem(\"uuid\").then((value) => {\n      this.setState({\n        uuid: value,\n      });\n    });\n  }\n\n  inputFocused(refName) {\n    if (refName == \"Name\") {\n      let scrollResponder = this.refs.scrollView.getScrollResponder();\n      scrollResponder.scrollTo({ y: windowSize.height / 3 });\n    } else {\n      let scrollResponder = this.refs.scrollView.getScrollResponder();\n      scrollResponder.scrollTo({ y: windowSize.height / 2.3 });\n    }\n  }\n\n  handleChange(name, e) {\n    if (name == \"Name\") {\n      AsyncStorage.setItem(\"Name\", e.nativeEvent.text);\n      this.setState({\n        Name: e.nativeEvent.text,\n      });\n    } else {\n      AsyncStorage.setItem(\"City\", e.nativeEvent.text);\n      this.setState({\n        City: e.nativeEvent.text,\n      });\n    }\n  }\n\n  select(value) {\n    AsyncStorage.setItem(\"Level\", value);\n    this.setState({\n      Level: value,\n    });\n  }\n\n  play() {\n    if (\n      this.state.uuid == null ||\n      this.state.uuid == \"null\" ||\n      this.state.uuid == \"\"\n    ) {\n      this.setState({ Show: true });\n    } else if (\n      this.state.Name == null ||\n      this.state.Name == \"null\" ||\n      this.state.Name == \"\" ||\n      this.state.City == null ||\n      this.state.City == \"null\" ||\n      this.state.City == \"\"\n    ) {\n      this.model();\n    } else {\n      var Level = this.state.Level;\n      var Name = this.state.Name;\n      var City = this.state.City;\n      this.props.navigation.replace(\"PlayNow\");\n      // this.props.navigator.push({\n      //   name: 'Play Now',\n      //   component: Play,\n      //   title: 'MaxWord',\n      //   passProps: { Level: Level, Name: Name, City: City }\n      // });\n    }\n  }\n  home() {\n    this.props.navigation.navigate(\"Main\");\n    // var Home = require('./Home');\n    // this.props.navigator.replacePreviousAndPop({\n    //   component: Home,\n    //   title: 'MaxWord',\n    // })\n  }\n  model(id) {\n    this.refs.modal3.open();\n  }\n  onOk() {\n    this.refs.modal3.close();\n  }\n\n  gameDay() {\n    var name = this.state.Name;\n    var gameDate = moment().format(\"YYYY-MM-DD\");\n    if (\n      this.state.uuid == null ||\n      this.state.uuid == \"null\" ||\n      this.state.uuid == \"\"\n    ) {\n      this.setState({ Show: true });\n    } else if (\n      this.state.Name == null ||\n      this.state.Name == \"null\" ||\n      this.state.Name == \"\" ||\n      this.state.City == null ||\n      this.state.City == \"null\" ||\n      this.state.City == \"\"\n    ) {\n      this.model();\n    } else {\n      this.setState({ layer: true });\n      fetch(\"http://www.maxword.net/api/api/gameOfTheDay\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          udId: this.state.uuid,\n          name: name,\n          gameDate: gameDate,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          this.setState({ layer: false });\n          if (responseData.status == \"Success\") {\n            if (responseData.message == \"Game does not exist\") {\n              Alert.alert(\"MaxWord\", \"Game does not exist\", [{ text: \"OK\" }]);\n            } else if (responseData.message == \"Already played\") {\n              Alert.alert(\"MaxWord\", \"Already played\", [{ text: \"OK\" }]);\n            } else {\n              var gameWord = responseData.message.gameWord;\n              this.props.navigator.push({\n                component: gameDay,\n                title: \"MaxWord\",\n                passProps: {\n                  Level: \"gameDay\",\n                  Name: name,\n                  City: this.state.City,\n                  gameWord: gameWord,\n                },\n              });\n            }\n          }\n        });\n    }\n  }\n  render() {\n    const options = [\"Beginner\", \"Intermediate\", \"Advanced\"];\n    return (\n      <Card style={{ flex: 1 }}>\n        <Header\n          showBack\n          onBackPress={() => this.props.navigation.navigate(\"Main\")}\n          title={\"Options\"}\n        />\n        {this.state.Show ? (\n          <View style={{ flex: 1, marginTop: 64 }}>\n            <ScrollView\n              ref=\"scrollView\"\n              automaticallyAdjustContentInsets={false}\n            >\n              <View>\n                <Text\n                  allowFontScaling={false}\n                  style={{\n                    marginTop: 20,\n                    marginLeft: 20,\n                    marginRight: 20,\n                    fontSize: 20,\n                  }}\n                >\n                  To play, simply tap on available letters to form words before\n                  the tiles fill up. If the word is correct, the letters\n                  disappear. A letter can be used more than once, and longer\n                  words score higher; “BANANA” scores higher than “BAN”. After\n                  all the tiles are filled, you have a few seconds to submit a\n                  word or the game ends. There are three levels of play to\n                  choose from. Name and City is requested for the leaderboard.\n                </Text>\n                <View>\n                  <Text\n                    allowFontScaling={false}\n                    style={{\n                      textAlign: \"center\",\n                      marginTop: 15,\n                      fontSize: 17,\n                      fontWeight: \"bold\",\n                      color: \"black\",\n                    }}\n                  >\n                    Enter your name :\n                  </Text>\n                </View>\n                {console.log(this.state.Name, \"options\")}\n                <TextInput\n                  allowFontScaling={false}\n                  style={styles.textInput}\n                  placeholder=\"Name\"\n                  value={this.state.Name}\n                  returnKeyType=\"next\"\n                  onFocus={this.inputFocused.bind(this, \"Name\")}\n                  onSubmitEditing={(event) => {\n                    this.refs.SecondInput.focus();\n                  }}\n                  onChange={this.handleChange.bind(this, \"Name\")}\n                />\n                <View>\n                  <Text\n                    allowFontScaling={false}\n                    style={{\n                      textAlign: \"center\",\n                      marginTop: 15,\n                      fontSize: 17,\n                      fontWeight: \"bold\",\n                      color: \"black\",\n                    }}\n                  >\n                    Enter your city :\n                  </Text>\n                </View>\n                <TextInput\n                  ref=\"SecondInput\"\n                  allowFontScaling={false}\n                  style={styles.textInput}\n                  placeholder=\"City\"\n                  value={this.state.City}\n                  returnKeyType=\"done\"\n                  onFocus={this.inputFocused.bind(this, \"City\")}\n                  onSubmitEditing={(event) => {\n                    this.close();\n                  }}\n                  onChange={this.handleChange.bind(this, \"City\")}\n                />\n                <TouchableOpacity\n                  onPress={this.close.bind(this)}\n                  style={{\n                    height: 40,\n                    marginTop: 30,\n                    marginLeft: windowSize.width / 4,\n                    marginRight: windowSize.width / 4,\n                    backgroundColor: \"#27ae61\",\n                    marginBottom: 30,\n                  }}\n                >\n                  <Text\n                    allowFontScaling={false}\n                    style={{\n                      textAlign: \"center\",\n                      fontSize: 25,\n                      marginTop: 6,\n                      color: \"white\",\n                    }}\n                  >\n                    OK\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </ScrollView>\n          </View>\n        ) : (\n          <View style={styles.container}>\n            <View style={styles.body}>\n              <Card style={{ height: 60, width: windowSize.width }}>\n                <View style={{ flex: 1, flexDirection: \"row\" }}>\n                  <View style={{ width: \"50%\" }}>\n                    <View\n                      style={{\n                        flex: 1,\n                        justifyContent: \"center\",\n                        textAlign: \"center\",\n                        paddingLeft: \"60%\",\n                      }}\n                    >\n                      <Text\n                        allowFontScaling={false}\n                        style={{\n                          fontSize: textFont,\n                          marginLeft: 10,\n                          fontWeight: \"bold\",\n                        }}\n                      >\n                        Enter Your Name:\n                      </Text>\n                    </View>\n                  </View>\n                  <View style={{ width: windowSize.width / 6 }}>\n                    <View style={{ flex: 1 }}>\n                      <TextInput\n                        style={{\n                          height: 60,\n                          width: windowSize.width / 6,\n                          marginLeft: 10,\n                          fontSize: textFont,\n                          justifyContent: \"center\",\n                          color: \"black\",\n                        }}\n                        placeholder=\"Name\"\n                        value={this.state.Name}\n                        returnKeyType=\"next\"\n                        onSubmitEditing={(event) => {\n                          this.refs.SecondInput.focus();\n                        }}\n                        onChange={this.handleChange.bind(this, \"Name\")}\n                      />\n                    </View>\n                  </View>\n                </View>\n              </Card>\n              {/*<Card.Content style={{ height: 1, backgroundColor: 'black', marginLeft: \"45%\", marginRight: \"30%\" }}></Card.Content>*/}\n              <View style={{ height: 60, width: windowSize.width }}>\n                <View style={{ flex: 1, flexDirection: \"row\" }}>\n                  <View style={{ width: \"50%\" }}>\n                    <View\n                      style={{\n                        flex: 1,\n                        justifyContent: \"center\",\n                        paddingLeft: \"60%\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <Text\n                        allowFontScaling={false}\n                        style={{\n                          fontSize: textFont,\n                          marginLeft: 10,\n                          fontWeight: \"bold\",\n                        }}\n                      >\n                        Enter Your City:\n                      </Text>\n                    </View>\n                  </View>\n                  <View style={{ width: windowSize.width / 6 }}>\n                    <View style={{ flex: 1 }}>\n                      <TextInput\n                        ref=\"SecondInput\"\n                        style={{\n                          height: 60,\n                          width: windowSize.width / 6,\n                          marginLeft: 10,\n                          fontSize: textFont,\n                          justifyContent: \"center\",\n                          color: \"black\",\n                        }}\n                        returnKeyType=\"done\"\n                        placeholder=\"City\"\n                        value={this.state.City}\n                        onSubmitEditing={(event) => {\n                          Keyboard.dismiss;\n                        }}\n                        onChange={this.handleChange.bind(this, \"City\")}\n                      />\n                    </View>\n                  </View>\n                </View>\n              </View>\n\n              <View>\n                <Text\n                  allowFontScaling={false}\n                  style={[styles.levelText, { marginBottom: 20 }]}\n                >\n                  Choose level:\n                </Text>\n                \n                <View style={{ height: 80 }}>\n                  <View style={styles.row1}>\n                    <View style={styles.row1_column1}>\n                      <TouchableOpacity\n                        style={[styles.blue_column,styles.shadowProp]}\n                        onPress={this.select.bind(this, \"Beginner\")}\n                      >\n                        <View\n                          style={{\n                            \n                            height: 40,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            allowFontScaling={false}\n                            style={{ fontSize: FONT,justifyContent:\"center\",textAlign:'center' }}\n                          >\n                            Beginner\n                          </Text>\n                        </View>\n                        <View\n                          style={{\n                            \n                            height: 40,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {this.state.Level == \"Beginner\" ? (\n                            <Image\n                              style={{ height: 30, width: 30 }}\n                              source={require(\"../../assets/check.png\")}\n                            />\n                          ) : (\n                            <View></View>\n                          )}\n                        </View>\n                      </TouchableOpacity>\n                    </View>\n\n                    <View style={styles.row1_column2}>\n                      <TouchableOpacity\n                        style={[styles.green_column,styles.shadowProp]}\n                        onPress={this.select.bind(this, \"Intermediate\")}\n                      >\n                        <View\n                          style={{\n                            \n                            height: 40,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            allowFontScaling={false}\n                            style={{ fontSize: FONT ,justifyContent:\"center\",textAlign:'center'}}\n                          >\n                            Intermediate\n                          </Text>\n                        </View>\n                        <View\n                          style={{\n                           \n                            height: 40,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {this.state.Level == \"Intermediate\" ? (\n                            <Image\n                              style={{ height: 30, width: 30 }}\n                              source={require(\"../../assets/check.png\")}\n                            />\n                          ) : (\n                            <View></View>\n                          )}\n                        </View>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                  <View style={styles.row2}>\n                    <View style={styles.row2_column1}>\n                      <TouchableOpacity\n                        style={[styles.blue_column,styles.shadowProp]}\n                        onPress={this.select.bind(this, \"Advanced\")}\n                      >\n                        <View\n                          style={{\n                            \n                            height: 40,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            allowFontScaling={false}\n                            style={{ fontSize: FONT ,justifyContent:\"center\",textAlign:'center'}}\n                          >\n                            Advanced\n                          </Text>\n                        </View>\n                        <View\n                          style={{\n                           \n                            height: 40,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {this.state.Level == \"Advanced\" ? (\n                            <Image\n                              style={{ height: 30, width: 30 }}\n                              source={require(\"../../assets/check.png\")}\n                            />\n                          ) : (\n                            <View></View>\n                          )}\n                        </View>\n                      </TouchableOpacity>\n                    </View>\n                    <View style={styles.row2_column2}>\n                      <TouchableOpacity\n                        style={[styles.green_column,styles.shadowProp]}\n                        onPress={this.select.bind(this, \"Pro\")}\n                      >\n                        <View\n                          style={{\n                            \n                            height: 40,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            allowFontScaling={false}\n                            style={{ fontSize: FONT,justifyContent:\"center\",textAlign:'center' }}\n                          >\n                            Pro\n                          </Text>\n                        </View>\n                        <View\n                          style={{\n                           \n                            height: 40,\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {this.state.Level == \"Pro\" ? (\n                            <Image\n                              style={{ height: 30, width: 30 }}\n                              source={require(\"../../assets/check.png\")}\n                            />\n                          ) : (\n                            <View></View>\n                          )}\n                        </View>\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n            <View style={{ height: height, width: windowSize.width }}>\n              <View\n                style={{\n                  flex: 1,\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                  textAlign:'center',\n                }}\n              >\n                <TouchableOpacity\n                  onPress={this.play.bind(this)}\n                  style={[styles.shadowProp,{\n                    marginRight:'15%',\n                    marginLeft:'5%',\n                    height: height,\n                    backgroundColor: \"#27ae61\",\n                    width:\"15%\",\n                    borderRadius:15\n                  }]}\n                >\n                  <View style={{ flex: 1, justifyContent: \"center\" }}>\n                    <Text\n                      allowFontScaling={false}\n                      style={{\n                        textAlign: \"center\",\n                        color: \"white\",\n                        fontWeight: \"bold\",\n                        fontSize: FONT,\n                      }}\n                    >\n                      Play Now\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={this.home.bind(this)}\n                  style={[styles.shadowProp,{\n                    width:\"15%\",\n                    height: height,\n                    backgroundColor: \"#34475d\",\n                    borderRadius:15,\n                    marginRight:'5%',\n                    marginleft:'15%',\n                  }]}\n                >\n                  <View style={{ flex: 1, justifyContent: \"center\" }}>\n                    <Text\n                      allowFontScaling={false}\n                      style={{\n                        textAlign: \"center\",\n                        color: \"white\",\n                        fontWeight: \"bold\",\n                        fontSize: FONT,\n                      }}\n                    >\n                      Home\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              </View>\n            </View>\n\n            {/* <View style={{marginTop:3}}>\n            <AdMobBanner\n              bannerSize={this.state.bannerSize}\n              testDeviceID=\"EMULATOR\"\n              adUnitID=\"ca-app-pub-7238183882077023/7178259794\"/>\n          </View> */}\n            <Modal\n              style={[styles.modal, styles.modal3]}\n              position={\"center\"}\n              ref={\"modal3\"}\n              backdropPressToClose={false}\n            >\n              <View style={{ flex: 1, width: windowSize.width - 50 }}>\n                <View\n                  style={{\n                    flex: 0.7,\n                    justifyContent: \"center\",\n                    alignSelf: \"center\",\n                  }}\n                >\n                  <View>\n                    {this.state.Name == null ||\n                    this.state.Name == \"null\" ||\n                    (this.state.Name == \"\" && this.state.City == null) ||\n                    this.state.City == \"null\" ||\n                    this.state.City == \"\" ? (\n                      <Text\n                        allowFontScaling={false}\n                        style={{ textAlign: \"center\", fontSize: 17 }}\n                      >\n                        Please Enter Name and City\n                      </Text>\n                    ) : this.state.Name == null ||\n                      this.state.Name == \"null\" ||\n                      this.state.Name == \"\" ? (\n                      <Text\n                        allowFontScaling={false}\n                        style={{ textAlign: \"center\", fontSize: 17 }}\n                      >\n                        Please Enter Name\n                      </Text>\n                    ) : this.state.City == null ||\n                      this.state.City == \"null\" ||\n                      this.state.City == \"\" ? (\n                      <Text\n                        allowFontScaling={false}\n                        style={{ textAlign: \"center\", fontSize: 17 }}\n                      >\n                        Please Enter City\n                      </Text>\n                    ) : (\n                      <View></View>\n                    )}\n                  </View>\n                </View>\n                <View\n                  style={{\n                    flex: 0.3,\n                    backgroundColor: \"#013369\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <TouchableOpacity onPress={this.onOk.bind(this)}>\n                    <View\n                      style={{ justifyContent: \"center\", alignSelf: \"center\" }}\n                    >\n                      <Text\n                        allowFontScaling={false}\n                        style={{ color: \"white\", textAlign: \"center\" }}\n                      >\n                        OK\n                      </Text>\n                    </View>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </Modal>\n          </View>\n        )}\n      </Card>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAybA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,oBAAhC;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,0BAA7C;;;AACA,IAAIC,UAAU,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAjB;;AAEA,sBAAkBD,UAAU,CAACC,GAAX,CAAe,QAAf,CAAlB;AAAA,IAAQC,KAAR,mBAAQA,KAAR;;AACA,IAAIC,IAAI,GAAG,EAAX;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,MAAM,GAAG,EAAb;;AACA,IAAIP,UAAU,CAACG,KAAX,IAAoB,GAAxB,EAA6B;EAC1BC,IAAI,GAAG,EAAR,EAAcC,MAAM,GAAG,EAAvB,EAA6BC,QAAQ,GAAG,EAAxC;EACAC,MAAM,GAAG,GAAT;AACD,CAHD,MAGO,IAAIP,UAAU,CAACG,KAAX,IAAoB,GAAxB,EAA6B;EAClCG,QAAQ,EAAE;;EACVC,MAAM,GAAG,EAAT;AACD;;IACoBC,O;;;;;EACnB,mBAAc;IAAA;;IAAA;;IACZ;IACA,MAAKC,KAAL,GAAa;MACXC,KAAK,EAAE,UADI;MAEXC,IAAI,EAAE,EAFK;MAGXC,IAAI,EAAE,EAHK;MAIXC,IAAI,EAAE,EAJK;MAKXC,IAAI,EAAE,KALK;MAMXC,KAAK,EAAE;IANI,CAAb;IAQA,MAAKC,IAAL,GAAY1B,KAAK,CAAC2B,SAAN,EAAZ;IAVY;EAWb;;;;WAED,iBAAQ;MAAA;;MACN,IAAIC,IAAI,GAAG,IAAX;;MACA,IACE,KAAKT,KAAL,CAAWE,IAAX,IAAmB,IAAnB,IACA,KAAKF,KAAL,CAAWE,IAAX,IAAmB,MADnB,IAEA,KAAKF,KAAL,CAAWE,IAAX,IAAmB,EAHrB,EAIE;QACAQ,KAAK,CAACC,KAAN,CAAY,SAAZ,EAAuB,mBAAvB,EAA4C,CAAC;UAAEC,IAAI,EAAE;QAAR,CAAD,CAA5C;MACD,CAND,MAMO,IACL,KAAKZ,KAAL,CAAWG,IAAX,IAAmB,IAAnB,IACA,KAAKH,KAAL,CAAWG,IAAX,IAAmB,MADnB,IAEA,KAAKH,KAAL,CAAWG,IAAX,IAAmB,EAHd,EAIL;QACAO,KAAK,CAACC,KAAN,CAAY,SAAZ,EAAuB,mBAAvB,EAA4C,CAAC;UAAEC,IAAI,EAAE;QAAR,CAAD,CAA5C;MACD,CANM,MAMA;QACLxB,YAAY,CAACyB,OAAb,CAAqB,MAArB,EAA6BxB,WAAW,EAAxC;QACA,KAAKyB,QAAL,CACE;UACEV,IAAI,EAAEf,WAAW,EADnB;UAEEgB,IAAI,EAAE;QAFR,CADF,EAKE,YAAM;UACJ,IAAIJ,KAAK,GAAGQ,IAAI,CAACT,KAAL,CAAWC,KAAvB;UACA,IAAIC,IAAI,GAAGO,IAAI,CAACT,KAAL,CAAWE,IAAtB;UACA,IAAIC,IAAI,GAAGM,IAAI,CAACT,KAAL,CAAWG,IAAtB;;UAOA,MAAI,CAACY,KAAL,CAAWC,UAAX,CAAsBC,OAAtB,CAA8B,SAA9B,EAAyC;YACvChB,KAAK,EAAEA,KADgC;YAEvCC,IAAI,EAAEA,IAFiC;YAGvCC,IAAI,EAAEA;UAHiC,CAAzC;QAKD,CApBH;MAsBD;IACF;;;WAED,qCAA4B;MAAA;;MAC1Bf,YAAY,CAAC8B,OAAb,CAAqB,MAArB,EAA6BC,IAA7B,CAAkC,UAACC,KAAD,EAAW;QAC3C,MAAI,CAACN,QAAL,CAAc;UAAEZ,IAAI,EAAEkB;QAAR,CAAd;MACD,CAFD;MAGAhC,YAAY,CAAC8B,OAAb,CAAqB,MAArB,EAA6BC,IAA7B,CAAkC,UAACC,KAAD,EAAW;QAC3C,MAAI,CAACN,QAAL,CAAc;UAAEX,IAAI,EAAEiB;QAAR,CAAd;MACD,CAFD;MAGAhC,YAAY,CAAC8B,OAAb,CAAqB,OAArB,EAA8BC,IAA9B,CAAmC,UAACC,KAAD,EAAW;QAC5C,MAAI,CAACN,QAAL,CAAc;UAAEb,KAAK,EAAEmB;QAAT,CAAd;MACD,CAFD;MAGAhC,YAAY,CAAC8B,OAAb,CAAqB,MAArB,EAA6BC,IAA7B,CAAkC,UAACC,KAAD,EAAW;QAC3C,MAAI,CAACN,QAAL,CAAc;UACZV,IAAI,EAAEgB;QADM,CAAd;MAGD,CAJD;IAKD;;;WAED,sBAAaC,OAAb,EAAsB;MACpB,IAAIA,OAAO,IAAI,MAAf,EAAuB;QACrB,IAAIC,eAAe,GAAG,KAAKf,IAAL,CAAUgB,UAAV,CAAqBC,kBAArB,EAAtB;QACAF,eAAe,CAACG,QAAhB,CAAyB;UAAEC,CAAC,EAAEnC,UAAU,CAACO,MAAX,GAAoB;QAAzB,CAAzB;MACD,CAHD,MAGO;QACL,IAAIwB,gBAAe,GAAG,KAAKf,IAAL,CAAUgB,UAAV,CAAqBC,kBAArB,EAAtB;;QACAF,gBAAe,CAACG,QAAhB,CAAyB;UAAEC,CAAC,EAAEnC,UAAU,CAACO,MAAX,GAAoB;QAAzB,CAAzB;MACD;IACF;;;WAED,sBAAa6B,IAAb,EAAmBC,CAAnB,EAAsB;MACpB,IAAID,IAAI,IAAI,MAAZ,EAAoB;QAClBvC,YAAY,CAACyB,OAAb,CAAqB,MAArB,EAA6Be,CAAC,CAACC,WAAF,CAAcjB,IAA3C;QACA,KAAKE,QAAL,CAAc;UACZZ,IAAI,EAAE0B,CAAC,CAACC,WAAF,CAAcjB;QADR,CAAd;MAGD,CALD,MAKO;QACLxB,YAAY,CAACyB,OAAb,CAAqB,MAArB,EAA6Be,CAAC,CAACC,WAAF,CAAcjB,IAA3C;QACA,KAAKE,QAAL,CAAc;UACZX,IAAI,EAAEyB,CAAC,CAACC,WAAF,CAAcjB;QADR,CAAd;MAGD;IACF;;;WAED,gBAAOQ,KAAP,EAAc;MACZhC,YAAY,CAACyB,OAAb,CAAqB,OAArB,EAA8BO,KAA9B;MACA,KAAKN,QAAL,CAAc;QACZb,KAAK,EAAEmB;MADK,CAAd;IAGD;;;WAED,gBAAO;MACL,IACE,KAAKpB,KAAL,CAAWI,IAAX,IAAmB,IAAnB,IACA,KAAKJ,KAAL,CAAWI,IAAX,IAAmB,MADnB,IAEA,KAAKJ,KAAL,CAAWI,IAAX,IAAmB,EAHrB,EAIE;QACA,KAAKU,QAAL,CAAc;UAAET,IAAI,EAAE;QAAR,CAAd;MACD,CAND,MAMO,IACL,KAAKL,KAAL,CAAWE,IAAX,IAAmB,IAAnB,IACA,KAAKF,KAAL,CAAWE,IAAX,IAAmB,MADnB,IAEA,KAAKF,KAAL,CAAWE,IAAX,IAAmB,EAFnB,IAGA,KAAKF,KAAL,CAAWG,IAAX,IAAmB,IAHnB,IAIA,KAAKH,KAAL,CAAWG,IAAX,IAAmB,MAJnB,IAKA,KAAKH,KAAL,CAAWG,IAAX,IAAmB,EANd,EAOL;QACA,KAAK2B,KAAL;MACD,CATM,MASA;QACL,IAAI7B,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;QACA,IAAIC,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;QACA,IAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAtB;QACA,KAAKY,KAAL,CAAWC,UAAX,CAAsBC,OAAtB,CAA8B,SAA9B;MAOD;IACF;;;WACD,gBAAO;MACL,KAAKF,KAAL,CAAWC,UAAX,CAAsBe,QAAtB,CAA+B,MAA/B;IAMD;;;WACD,eAAMC,EAAN,EAAU;MACR,KAAKzB,IAAL,CAAU0B,MAAV,CAAiBC,IAAjB;IACD;;;WACD,gBAAO;MACL,KAAK3B,IAAL,CAAU0B,MAAV,CAAiBE,KAAjB;IACD;;;;;;;;;;;;;MAED,YAAU;MAAA;;MACR,IAAIR,IAAI,GAAG,KAAK3B,KAAL,CAAWE,IAAtB;MACA,IAAIkC,QAAQ,GAAGC,MAAM,GAAGC,MAAT,CAAgB,YAAhB,CAAf;;MACA,IACE,KAAKtC,KAAL,CAAWI,IAAX,IAAmB,IAAnB,IACA,KAAKJ,KAAL,CAAWI,IAAX,IAAmB,MADnB,IAEA,KAAKJ,KAAL,CAAWI,IAAX,IAAmB,EAHrB,EAIE;QACA,KAAKU,QAAL,CAAc;UAAET,IAAI,EAAE;QAAR,CAAd;MACD,CAND,MAMO,IACL,KAAKL,KAAL,CAAWE,IAAX,IAAmB,IAAnB,IACA,KAAKF,KAAL,CAAWE,IAAX,IAAmB,MADnB,IAEA,KAAKF,KAAL,CAAWE,IAAX,IAAmB,EAFnB,IAGA,KAAKF,KAAL,CAAWG,IAAX,IAAmB,IAHnB,IAIA,KAAKH,KAAL,CAAWG,IAAX,IAAmB,MAJnB,IAKA,KAAKH,KAAL,CAAWG,IAAX,IAAmB,EANd,EAOL;QACA,KAAK2B,KAAL;MACD,CATM,MASA;QACL,KAAKhB,QAAL,CAAc;UAAER,KAAK,EAAE;QAAT,CAAd;QACAiC,KAAK,CAAC,6CAAD,EAAgD;UACnDC,MAAM,EAAE,MAD2C;UAEnDC,OAAO,EAAE;YACPC,MAAM,EAAE,kBADD;YAEP,gBAAgB;UAFT,CAF0C;UAMnDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YACnBC,IAAI,EAAE,KAAK9C,KAAL,CAAWI,IADE;YAEnBuB,IAAI,EAAEA,IAFa;YAGnBS,QAAQ,EAAEA;UAHS,CAAf;QAN6C,CAAhD,CAAL,CAYGjB,IAZH,CAYQ,UAAC4B,QAAD;UAAA,OAAcA,QAAQ,CAACC,IAAT,EAAd;QAAA,CAZR,EAaG7B,IAbH,CAaQ,UAAC8B,YAAD,EAAkB;UACtB,MAAI,CAACnC,QAAL,CAAc;YAAER,KAAK,EAAE;UAAT,CAAd;;UACA,IAAI2C,YAAY,CAACC,MAAb,IAAuB,SAA3B,EAAsC;YACpC,IAAID,YAAY,CAACE,OAAb,IAAwB,qBAA5B,EAAmD;cACjDzC,KAAK,CAACC,KAAN,CAAY,SAAZ,EAAuB,qBAAvB,EAA8C,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAA9C;YACD,CAFD,MAEO,IAAIqC,YAAY,CAACE,OAAb,IAAwB,gBAA5B,EAA8C;cACnDzC,KAAK,CAACC,KAAN,CAAY,SAAZ,EAAuB,gBAAvB,EAAyC,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAzC;YACD,CAFM,MAEA;cACL,IAAIwC,QAAQ,GAAGH,YAAY,CAACE,OAAb,CAAqBC,QAApC;;cACA,MAAI,CAACrC,KAAL,CAAWsC,SAAX,CAAqBC,IAArB,CAA0B;gBACxBC,SAAS,EAAEC,OADa;gBAExBC,KAAK,EAAE,SAFiB;gBAGxBC,SAAS,EAAE;kBACTzD,KAAK,EAAE,SADE;kBAETC,IAAI,EAAEyB,IAFG;kBAGTxB,IAAI,EAAE,MAAI,CAACH,KAAL,CAAWG,IAHR;kBAITiD,QAAQ,EAAEA;gBAJD;cAHa,CAA1B;YAUD;UACF;QACF,CAlCH;MAmCD;IACF,C;;;WACD,kBAAS;MAAA;;MACP,IAAMO,OAAO,GAAG,CAAC,UAAD,EAAa,cAAb,EAA6B,UAA7B,CAAhB;MACA,OACE,MAAC,IAAD;QAAM,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAR,CAAb;QAAA,WACE,KAAC,MAAD;UACE,QAAQ,MADV;UAEE,WAAW,EAAE;YAAA,OAAM,MAAI,CAAC7C,KAAL,CAAWC,UAAX,CAAsBe,QAAtB,CAA+B,MAA/B,CAAN;UAAA,CAFf;UAGE,KAAK,EAAE;QAHT,EADF,EAMG,KAAK/B,KAAL,CAAWK,IAAX,GACC,KAAC,IAAD;UAAM,KAAK,EAAE;YAAEuD,IAAI,EAAE,CAAR;YAAWC,SAAS,EAAE;UAAtB,CAAb;UAAA,UACE,KAAC,UAAD;YACE,GAAG,EAAC,YADN;YAEE,gCAAgC,EAAE,KAFpC;YAAA,UAIE,MAAC,IAAD;cAAA,WACE,KAAC,IAAD;gBACE,gBAAgB,EAAE,KADpB;gBAEE,KAAK,EAAE;kBACLA,SAAS,EAAE,EADN;kBAELC,UAAU,EAAE,EAFP;kBAGLC,WAAW,EAAE,EAHR;kBAILC,QAAQ,EAAE;gBAJL,CAFT;gBAAA;cAAA,EADF,EAkBE,KAAC,IAAD;gBAAA,UACE,KAAC,IAAD;kBACE,gBAAgB,EAAE,KADpB;kBAEE,KAAK,EAAE;oBACLC,SAAS,EAAE,QADN;oBAELJ,SAAS,EAAE,EAFN;oBAGLG,QAAQ,EAAE,EAHL;oBAILE,UAAU,EAAE,MAJP;oBAKLC,KAAK,EAAE;kBALF,CAFT;kBAAA;gBAAA;cADF,EAlBF,EAgCGC,OAAO,CAACC,GAAR,CAAY,KAAKrE,KAAL,CAAWE,IAAvB,EAA6B,SAA7B,CAhCH,EAiCE,KAAC,SAAD;gBACE,gBAAgB,EAAE,KADpB;gBAEE,KAAK,EAAEf,MAAM,CAACmF,SAFhB;gBAGE,WAAW,EAAC,MAHd;gBAIE,KAAK,EAAE,KAAKtE,KAAL,CAAWE,IAJpB;gBAKE,aAAa,EAAC,MALhB;gBAME,OAAO,EAAE,KAAKqE,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B,CANX;gBAOE,eAAe,EAAE,yBAACC,KAAD,EAAW;kBAC1B,MAAI,CAAClE,IAAL,CAAUmE,WAAV,CAAsBC,KAAtB;gBACD,CATH;gBAUE,QAAQ,EAAE,KAAKC,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B;cAVZ,EAjCF,EA6CE,KAAC,IAAD;gBAAA,UACE,KAAC,IAAD;kBACE,gBAAgB,EAAE,KADpB;kBAEE,KAAK,EAAE;oBACLP,SAAS,EAAE,QADN;oBAELJ,SAAS,EAAE,EAFN;oBAGLG,QAAQ,EAAE,EAHL;oBAILE,UAAU,EAAE,MAJP;oBAKLC,KAAK,EAAE;kBALF,CAFT;kBAAA;gBAAA;cADF,EA7CF,EA2DE,KAAC,SAAD;gBACE,GAAG,EAAC,aADN;gBAEE,gBAAgB,EAAE,KAFpB;gBAGE,KAAK,EAAEhF,MAAM,CAACmF,SAHhB;gBAIE,WAAW,EAAC,MAJd;gBAKE,KAAK,EAAE,KAAKtE,KAAL,CAAWG,IALpB;gBAME,aAAa,EAAC,MANhB;gBAOE,OAAO,EAAE,KAAKoE,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B,CAPX;gBAQE,eAAe,EAAE,yBAACC,KAAD,EAAW;kBAC1B,MAAI,CAACtC,KAAL;gBACD,CAVH;gBAWE,QAAQ,EAAE,KAAKyC,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B;cAXZ,EA3DF,EAwEE,KAAC,gBAAD;gBACE,OAAO,EAAE,KAAKrC,KAAL,CAAWqC,IAAX,CAAgB,IAAhB,CADX;gBAEE,KAAK,EAAE;kBACL1E,MAAM,EAAE,EADH;kBAEL+D,SAAS,EAAE,EAFN;kBAGLC,UAAU,EAAEvE,UAAU,CAACG,KAAX,GAAmB,CAH1B;kBAILqE,WAAW,EAAExE,UAAU,CAACG,KAAX,GAAmB,CAJ3B;kBAKLmF,eAAe,EAAE,SALZ;kBAMLC,YAAY,EAAE;gBANT,CAFT;gBAAA,UAWE,KAAC,IAAD;kBACE,gBAAgB,EAAE,KADpB;kBAEE,KAAK,EAAE;oBACLb,SAAS,EAAE,QADN;oBAELD,QAAQ,EAAE,EAFL;oBAGLH,SAAS,EAAE,CAHN;oBAILM,KAAK,EAAE;kBAJF,CAFT;kBAAA;gBAAA;cAXF,EAxEF;YAAA;UAJF;QADF,EADD,GAyGC,MAAC,IAAD;UAAM,KAAK,EAAEhF,MAAM,CAAC4F,SAApB;UAAA,WACE,MAAC,IAAD;YAAM,KAAK,EAAE5F,MAAM,CAACwD,IAApB;YAAA,WACE,KAAC,IAAD;cAAM,KAAK,EAAE;gBAAE7C,MAAM,EAAE,EAAV;gBAAcJ,KAAK,EAAEH,UAAU,CAACG;cAAhC,CAAb;cAAA,UACE,MAAC,IAAD;gBAAM,KAAK,EAAE;kBAAEkE,IAAI,EAAE,CAAR;kBAAWoB,aAAa,EAAE;gBAA1B,CAAb;gBAAA,WACE,KAAC,IAAD;kBAAM,KAAK,EAAE;oBAAEtF,KAAK,EAAE;kBAAT,CAAb;kBAAA,UACE,KAAC,IAAD;oBACE,KAAK,EAAE;sBACLkE,IAAI,EAAE,CADD;sBAELqB,cAAc,EAAE,QAFX;sBAGLhB,SAAS,EAAE,QAHN;sBAILiB,WAAW,EAAE;oBAJR,CADT;oBAAA,UAQE,KAAC,IAAD;sBACE,gBAAgB,EAAE,KADpB;sBAEE,KAAK,EAAE;wBACLlB,QAAQ,EAAEnE,QADL;wBAELiE,UAAU,EAAE,EAFP;wBAGLI,UAAU,EAAE;sBAHP,CAFT;sBAAA;oBAAA;kBARF;gBADF,EADF,EAsBE,KAAC,IAAD;kBAAM,KAAK,EAAE;oBAAExE,KAAK,EAAEH,UAAU,CAACG,KAAX,GAAmB;kBAA5B,CAAb;kBAAA,UACE,KAAC,IAAD;oBAAM,KAAK,EAAE;sBAAEkE,IAAI,EAAE;oBAAR,CAAb;oBAAA,UACE,KAAC,SAAD;sBACE,KAAK,EAAE;wBACL9D,MAAM,EAAE,EADH;wBAELJ,KAAK,EAAEH,UAAU,CAACG,KAAX,GAAmB,CAFrB;wBAGLoE,UAAU,EAAE,EAHP;wBAILE,QAAQ,EAAEnE,QAJL;wBAKLoF,cAAc,EAAE,QALX;wBAMLd,KAAK,EAAE;sBANF,CADT;sBASE,WAAW,EAAC,MATd;sBAUE,KAAK,EAAE,KAAKnE,KAAL,CAAWE,IAVpB;sBAWE,aAAa,EAAC,MAXhB;sBAYE,eAAe,EAAE,yBAACuE,KAAD,EAAW;wBAC1B,MAAI,CAAClE,IAAL,CAAUmE,WAAV,CAAsBC,KAAtB;sBACD,CAdH;sBAeE,QAAQ,EAAE,KAAKC,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B;oBAfZ;kBADF;gBADF,EAtBF;cAAA;YADF,EADF,EAgDE,KAAC,IAAD;cAAM,KAAK,EAAE;gBAAE1E,MAAM,EAAE,EAAV;gBAAcJ,KAAK,EAAEH,UAAU,CAACG;cAAhC,CAAb;cAAA,UACE,MAAC,IAAD;gBAAM,KAAK,EAAE;kBAAEkE,IAAI,EAAE,CAAR;kBAAWoB,aAAa,EAAE;gBAA1B,CAAb;gBAAA,WACE,KAAC,IAAD;kBAAM,KAAK,EAAE;oBAAEtF,KAAK,EAAE;kBAAT,CAAb;kBAAA,UACE,KAAC,IAAD;oBACE,KAAK,EAAE;sBACLkE,IAAI,EAAE,CADD;sBAELqB,cAAc,EAAE,QAFX;sBAGLC,WAAW,EAAE,KAHR;sBAILjB,SAAS,EAAE;oBAJN,CADT;oBAAA,UAQE,KAAC,IAAD;sBACE,gBAAgB,EAAE,KADpB;sBAEE,KAAK,EAAE;wBACLD,QAAQ,EAAEnE,QADL;wBAELiE,UAAU,EAAE,EAFP;wBAGLI,UAAU,EAAE;sBAHP,CAFT;sBAAA;oBAAA;kBARF;gBADF,EADF,EAsBE,KAAC,IAAD;kBAAM,KAAK,EAAE;oBAAExE,KAAK,EAAEH,UAAU,CAACG,KAAX,GAAmB;kBAA5B,CAAb;kBAAA,UACE,KAAC,IAAD;oBAAM,KAAK,EAAE;sBAAEkE,IAAI,EAAE;oBAAR,CAAb;oBAAA,UACE,KAAC,SAAD;sBACE,GAAG,EAAC,aADN;sBAEE,KAAK,EAAE;wBACL9D,MAAM,EAAE,EADH;wBAELJ,KAAK,EAAEH,UAAU,CAACG,KAAX,GAAmB,CAFrB;wBAGLoE,UAAU,EAAE,EAHP;wBAILE,QAAQ,EAAEnE,QAJL;wBAKLoF,cAAc,EAAE,QALX;wBAMLd,KAAK,EAAE;sBANF,CAFT;sBAUE,aAAa,EAAC,MAVhB;sBAWE,WAAW,EAAC,MAXd;sBAYE,KAAK,EAAE,KAAKnE,KAAL,CAAWG,IAZpB;sBAaE,eAAe,EAAE,yBAACsE,KAAD,EAAW;wBAC1BU,QAAQ,CAACC,OAAT;sBACD,CAfH;sBAgBE,QAAQ,EAAE,KAAKR,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B;oBAhBZ;kBADF;gBADF,EAtBF;cAAA;YADF,EAhDF,EAgGE,MAAC,IAAD;cAAA,WACE,KAAC,IAAD;gBACE,gBAAgB,EAAE,KADpB;gBAEE,KAAK,EAAE,CAACrF,MAAM,CAACkG,SAAR,EAAmB;kBAAEP,YAAY,EAAE;gBAAhB,CAAnB,CAFT;gBAAA;cAAA,EADF,EAQE,MAAC,IAAD;gBAAM,KAAK,EAAE;kBAAEhF,MAAM,EAAE;gBAAV,CAAb;gBAAA,WACE,MAAC,IAAD;kBAAM,KAAK,EAAEX,MAAM,CAACmG,IAApB;kBAAA,WACE,KAAC,IAAD;oBAAM,KAAK,EAAEnG,MAAM,CAACoG,YAApB;oBAAA,UACE,MAAC,gBAAD;sBACE,KAAK,EAAE,CAACpG,MAAM,CAACqG,WAAR,EAAoBrG,MAAM,CAACsG,UAA3B,CADT;sBAEE,OAAO,EAAE,KAAKC,MAAL,CAAYlB,IAAZ,CAAiB,IAAjB,EAAuB,UAAvB,CAFX;sBAAA,WAIE,KAAC,IAAD;wBACE,KAAK,EAAE;0BAEL1E,MAAM,EAAE,EAFH;0BAGLmF,cAAc,EAAE,QAHX;0BAILU,UAAU,EAAE;wBAJP,CADT;wBAAA,UAQE,KAAC,IAAD;0BACE,gBAAgB,EAAE,KADpB;0BAEE,KAAK,EAAE;4BAAE3B,QAAQ,EAAErE,IAAZ;4BAAiBsF,cAAc,EAAC,QAAhC;4BAAyChB,SAAS,EAAC;0BAAnD,CAFT;0BAAA;wBAAA;sBARF,EAJF,EAmBE,KAAC,IAAD;wBACE,KAAK,EAAE;0BAELnE,MAAM,EAAE,EAFH;0BAGLmF,cAAc,EAAE,QAHX;0BAILU,UAAU,EAAE;wBAJP,CADT;wBAAA,UAQG,KAAK3F,KAAL,CAAWC,KAAX,IAAoB,UAApB,GACC,KAAC,KAAD;0BACE,KAAK,EAAE;4BAAEH,MAAM,EAAE,EAAV;4BAAcJ,KAAK,EAAE;0BAArB,CADT;0BAEE,MAAM,EAAEkG,OAAO;wBAFjB,EADD,GAMC,KAAC,IAAD;sBAdJ,EAnBF;oBAAA;kBADF,EADF,EAyCE,KAAC,IAAD;oBAAM,KAAK,EAAEzG,MAAM,CAAC0G,YAApB;oBAAA,UACE,MAAC,gBAAD;sBACE,KAAK,EAAE,CAAC1G,MAAM,CAAC2G,YAAR,EAAqB3G,MAAM,CAACsG,UAA5B,CADT;sBAEE,OAAO,EAAE,KAAKC,MAAL,CAAYlB,IAAZ,CAAiB,IAAjB,EAAuB,cAAvB,CAFX;sBAAA,WAIE,KAAC,IAAD;wBACE,KAAK,EAAE;0BAEL1E,MAAM,EAAE,EAFH;0BAGLmF,cAAc,EAAE,QAHX;0BAILU,UAAU,EAAE;wBAJP,CADT;wBAAA,UAQE,KAAC,IAAD;0BACE,gBAAgB,EAAE,KADpB;0BAEE,KAAK,EAAE;4BAAE3B,QAAQ,EAAErE,IAAZ;4BAAkBsF,cAAc,EAAC,QAAjC;4BAA0ChB,SAAS,EAAC;0BAApD,CAFT;0BAAA;wBAAA;sBARF,EAJF,EAmBE,KAAC,IAAD;wBACE,KAAK,EAAE;0BAELnE,MAAM,EAAE,EAFH;0BAGLmF,cAAc,EAAE,QAHX;0BAILU,UAAU,EAAE;wBAJP,CADT;wBAAA,UAQG,KAAK3F,KAAL,CAAWC,KAAX,IAAoB,cAApB,GACC,KAAC,KAAD;0BACE,KAAK,EAAE;4BAAEH,MAAM,EAAE,EAAV;4BAAcJ,KAAK,EAAE;0BAArB,CADT;0BAEE,MAAM,EAAEkG,OAAO;wBAFjB,EADD,GAMC,KAAC,IAAD;sBAdJ,EAnBF;oBAAA;kBADF,EAzCF;gBAAA,EADF,EAkFE,MAAC,IAAD;kBAAM,KAAK,EAAEzG,MAAM,CAAC4G,IAApB;kBAAA,WACE,KAAC,IAAD;oBAAM,KAAK,EAAE5G,MAAM,CAAC6G,YAApB;oBAAA,UACE,MAAC,gBAAD;sBACE,KAAK,EAAE,CAAC7G,MAAM,CAACqG,WAAR,EAAoBrG,MAAM,CAACsG,UAA3B,CADT;sBAEE,OAAO,EAAE,KAAKC,MAAL,CAAYlB,IAAZ,CAAiB,IAAjB,EAAuB,UAAvB,CAFX;sBAAA,WAIE,KAAC,IAAD;wBACE,KAAK,EAAE;0BAEL1E,MAAM,EAAE,EAFH;0BAGLmF,cAAc,EAAE,QAHX;0BAILU,UAAU,EAAE;wBAJP,CADT;wBAAA,UAQE,KAAC,IAAD;0BACE,gBAAgB,EAAE,KADpB;0BAEE,KAAK,EAAE;4BAAE3B,QAAQ,EAAErE,IAAZ;4BAAkBsF,cAAc,EAAC,QAAjC;4BAA0ChB,SAAS,EAAC;0BAApD,CAFT;0BAAA;wBAAA;sBARF,EAJF,EAmBE,KAAC,IAAD;wBACE,KAAK,EAAE;0BAELnE,MAAM,EAAE,EAFH;0BAGLmF,cAAc,EAAE,QAHX;0BAILU,UAAU,EAAE;wBAJP,CADT;wBAAA,UAQG,KAAK3F,KAAL,CAAWC,KAAX,IAAoB,UAApB,GACC,KAAC,KAAD;0BACE,KAAK,EAAE;4BAAEH,MAAM,EAAE,EAAV;4BAAcJ,KAAK,EAAE;0BAArB,CADT;0BAEE,MAAM,EAAEkG,OAAO;wBAFjB,EADD,GAMC,KAAC,IAAD;sBAdJ,EAnBF;oBAAA;kBADF,EADF,EAwCE,KAAC,IAAD;oBAAM,KAAK,EAAEzG,MAAM,CAAC8G,YAApB;oBAAA,UACE,MAAC,gBAAD;sBACE,KAAK,EAAE,CAAC9G,MAAM,CAAC2G,YAAR,EAAqB3G,MAAM,CAACsG,UAA5B,CADT;sBAEE,OAAO,EAAE,KAAKC,MAAL,CAAYlB,IAAZ,CAAiB,IAAjB,EAAuB,KAAvB,CAFX;sBAAA,WAIE,KAAC,IAAD;wBACE,KAAK,EAAE;0BAEL1E,MAAM,EAAE,EAFH;0BAGLmF,cAAc,EAAE,QAHX;0BAILU,UAAU,EAAE;wBAJP,CADT;wBAAA,UAQE,KAAC,IAAD;0BACE,gBAAgB,EAAE,KADpB;0BAEE,KAAK,EAAE;4BAAE3B,QAAQ,EAAErE,IAAZ;4BAAiBsF,cAAc,EAAC,QAAhC;4BAAyChB,SAAS,EAAC;0BAAnD,CAFT;0BAAA;wBAAA;sBARF,EAJF,EAmBE,KAAC,IAAD;wBACE,KAAK,EAAE;0BAELnE,MAAM,EAAE,EAFH;0BAGLmF,cAAc,EAAE,QAHX;0BAILU,UAAU,EAAE;wBAJP,CADT;wBAAA,UAQG,KAAK3F,KAAL,CAAWC,KAAX,IAAoB,KAApB,GACC,KAAC,KAAD;0BACE,KAAK,EAAE;4BAAEH,MAAM,EAAE,EAAV;4BAAcJ,KAAK,EAAE;0BAArB,CADT;0BAEE,MAAM,EAAEkG,OAAO;wBAFjB,EADD,GAMC,KAAC,IAAD;sBAdJ,EAnBF;oBAAA;kBADF,EAxCF;gBAAA,EAlFF;cAAA,EARF;YAAA,EAhGF;UAAA,EADF,EA8QE,KAAC,IAAD;YAAM,KAAK,EAAE;cAAE9F,MAAM,EAAEA,MAAV;cAAkBJ,KAAK,EAAEH,UAAU,CAACG;YAApC,CAAb;YAAA,UACE,MAAC,IAAD;cACE,KAAK,EAAE;gBACLkE,IAAI,EAAE,CADD;gBAELoB,aAAa,EAAE,KAFV;gBAGLC,cAAc,EAAE,QAHX;gBAILhB,SAAS,EAAC;cAJL,CADT;cAAA,WAQE,KAAC,gBAAD;gBACE,OAAO,EAAE,KAAKiC,IAAL,CAAU1B,IAAV,CAAe,IAAf,CADX;gBAEE,KAAK,EAAE,CAACrF,MAAM,CAACsG,UAAR,EAAmB;kBACxB1B,WAAW,EAAC,KADY;kBAExBD,UAAU,EAAC,IAFa;kBAGxBhE,MAAM,EAAEA,MAHgB;kBAIxB+E,eAAe,EAAE,SAJO;kBAKxBnF,KAAK,EAAC,KALkB;kBAMxByG,YAAY,EAAC;gBANW,CAAnB,CAFT;gBAAA,UAWE,KAAC,IAAD;kBAAM,KAAK,EAAE;oBAAEvC,IAAI,EAAE,CAAR;oBAAWqB,cAAc,EAAE;kBAA3B,CAAb;kBAAA,UACE,KAAC,IAAD;oBACE,gBAAgB,EAAE,KADpB;oBAEE,KAAK,EAAE;sBACLhB,SAAS,EAAE,QADN;sBAELE,KAAK,EAAE,OAFF;sBAGLD,UAAU,EAAE,MAHP;sBAILF,QAAQ,EAAErE;oBAJL,CAFT;oBAAA;kBAAA;gBADF;cAXF,EARF,EAiCE,KAAC,gBAAD;gBACE,OAAO,EAAE,KAAKyG,IAAL,CAAU5B,IAAV,CAAe,IAAf,CADX;gBAEE,KAAK,EAAE,CAACrF,MAAM,CAACsG,UAAR,EAAmB;kBACxB/F,KAAK,EAAC,KADkB;kBAExBI,MAAM,EAAEA,MAFgB;kBAGxB+E,eAAe,EAAE,SAHO;kBAIxBsB,YAAY,EAAC,EAJW;kBAKxBpC,WAAW,EAAC,IALY;kBAMxBsC,UAAU,EAAC;gBANa,CAAnB,CAFT;gBAAA,UAWE,KAAC,IAAD;kBAAM,KAAK,EAAE;oBAAEzC,IAAI,EAAE,CAAR;oBAAWqB,cAAc,EAAE;kBAA3B,CAAb;kBAAA,UACE,KAAC,IAAD;oBACE,gBAAgB,EAAE,KADpB;oBAEE,KAAK,EAAE;sBACLhB,SAAS,EAAE,QADN;sBAELE,KAAK,EAAE,OAFF;sBAGLD,UAAU,EAAE,MAHP;sBAILF,QAAQ,EAAErE;oBAJL,CAFT;oBAAA;kBAAA;gBADF;cAXF,EAjCF;YAAA;UADF,EA9QF,EAkVE,KAAC,KAAD;YACE,KAAK,EAAE,CAACR,MAAM,CAACmH,KAAR,EAAenH,MAAM,CAAC8C,MAAtB,CADT;YAEE,QAAQ,EAAE,QAFZ;YAGE,GAAG,EAAE,QAHP;YAIE,oBAAoB,EAAE,KAJxB;YAAA,UAME,MAAC,IAAD;cAAM,KAAK,EAAE;gBAAE2B,IAAI,EAAE,CAAR;gBAAWlE,KAAK,EAAEH,UAAU,CAACG,KAAX,GAAmB;cAArC,CAAb;cAAA,WACE,KAAC,IAAD;gBACE,KAAK,EAAE;kBACLkE,IAAI,EAAE,GADD;kBAELqB,cAAc,EAAE,QAFX;kBAGLsB,SAAS,EAAE;gBAHN,CADT;gBAAA,UAOE,KAAC,IAAD;kBAAA,UACG,KAAKvG,KAAL,CAAWE,IAAX,IAAmB,IAAnB,IACD,KAAKF,KAAL,CAAWE,IAAX,IAAmB,MADlB,IAEA,KAAKF,KAAL,CAAWE,IAAX,IAAmB,EAAnB,IAAyB,KAAKF,KAAL,CAAWG,IAAX,IAAmB,IAF5C,IAGD,KAAKH,KAAL,CAAWG,IAAX,IAAmB,MAHlB,IAID,KAAKH,KAAL,CAAWG,IAAX,IAAmB,EAJlB,GAKC,KAAC,IAAD;oBACE,gBAAgB,EAAE,KADpB;oBAEE,KAAK,EAAE;sBAAE8D,SAAS,EAAE,QAAb;sBAAuBD,QAAQ,EAAE;oBAAjC,CAFT;oBAAA;kBAAA,EALD,GAWG,KAAKhE,KAAL,CAAWE,IAAX,IAAmB,IAAnB,IACF,KAAKF,KAAL,CAAWE,IAAX,IAAmB,MADjB,IAEF,KAAKF,KAAL,CAAWE,IAAX,IAAmB,EAFjB,GAGF,KAAC,IAAD;oBACE,gBAAgB,EAAE,KADpB;oBAEE,KAAK,EAAE;sBAAE+D,SAAS,EAAE,QAAb;sBAAuBD,QAAQ,EAAE;oBAAjC,CAFT;oBAAA;kBAAA,EAHE,GASA,KAAKhE,KAAL,CAAWG,IAAX,IAAmB,IAAnB,IACF,KAAKH,KAAL,CAAWG,IAAX,IAAmB,MADjB,IAEF,KAAKH,KAAL,CAAWG,IAAX,IAAmB,EAFjB,GAGF,KAAC,IAAD;oBACE,gBAAgB,EAAE,KADpB;oBAEE,KAAK,EAAE;sBAAE8D,SAAS,EAAE,QAAb;sBAAuBD,QAAQ,EAAE;oBAAjC,CAFT;oBAAA;kBAAA,EAHE,GAUF,KAAC,IAAD;gBA/BJ;cAPF,EADF,EA2CE,KAAC,IAAD;gBACE,KAAK,EAAE;kBACLJ,IAAI,EAAE,GADD;kBAELiB,eAAe,EAAE,SAFZ;kBAGLI,cAAc,EAAE;gBAHX,CADT;gBAAA,UAOE,KAAC,gBAAD;kBAAkB,OAAO,EAAE,KAAKuB,IAAL,CAAUhC,IAAV,CAAe,IAAf,CAA3B;kBAAA,UACE,KAAC,IAAD;oBACE,KAAK,EAAE;sBAAES,cAAc,EAAE,QAAlB;sBAA4BsB,SAAS,EAAE;oBAAvC,CADT;oBAAA,UAGE,KAAC,IAAD;sBACE,gBAAgB,EAAE,KADpB;sBAEE,KAAK,EAAE;wBAAEpC,KAAK,EAAE,OAAT;wBAAkBF,SAAS,EAAE;sBAA7B,CAFT;sBAAA;oBAAA;kBAHF;gBADF;cAPF,EA3CF;YAAA;UANF,EAlVF;QAAA,EA/GJ;MAAA,EADF;IA6gBD;;;;EA3tBkCnF,S;;SAAhBiB,O"},"metadata":{},"sourceType":"module"}