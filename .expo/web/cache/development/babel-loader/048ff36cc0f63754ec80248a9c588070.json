{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useCallback, useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useOnEvent, useOnMount } from \"./internal/asyncHookWrappers\";\nimport devicesWithNotch from \"./internal/devicesWithNotch\";\nimport RNDeviceInfo from \"./internal/nativeInterface\";\nimport { getSupportedPlatformInfoAsync, getSupportedPlatformInfoFunctions, getSupportedPlatformInfoSync } from \"./internal/supported-platform-info\";\nexport var getUniqueId = function getUniqueId() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'uniqueId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.uniqueId;\n    }\n  });\n};\nvar uniqueId;\nexport function syncUniqueId() {\n  return _regeneratorRuntime.async(function syncUniqueId$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(RNDeviceInfo.syncUniqueId());\n\n        case 3:\n          uniqueId = _context.sent;\n          _context.next = 7;\n          break;\n\n        case 6:\n          uniqueId = getUniqueId();\n\n        case 7:\n          return _context.abrupt(\"return\", uniqueId);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar _getSupportedPlatform = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getInstanceId();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getInstanceIdSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform2 = _slicedToArray(_getSupportedPlatform, 2),\n    getInstanceId = _getSupportedPlatform2[0],\n    getInstanceIdSync = _getSupportedPlatform2[1];\n\nexport { getInstanceId, getInstanceIdSync };\n\nvar _getSupportedPlatform3 = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getSerialNumber();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSerialNumberSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform4 = _slicedToArray(_getSupportedPlatform3, 2),\n    getSerialNumber = _getSupportedPlatform4[0],\n    getSerialNumberSync = _getSupportedPlatform4[1];\n\nexport { getSerialNumber, getSerialNumberSync };\n\nvar _getSupportedPlatform5 = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getAndroidId();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getAndroidIdSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform6 = _slicedToArray(_getSupportedPlatform5, 2),\n    getAndroidId = _getSupportedPlatform6[0],\n    getAndroidIdSync = _getSupportedPlatform6[1];\n\nexport { getAndroidId, getAndroidIdSync };\n\nvar _getSupportedPlatform7 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getIpAddress();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getIpAddressSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform8 = _slicedToArray(_getSupportedPlatform7, 2),\n    getIpAddress = _getSupportedPlatform8[0],\n    getIpAddressSync = _getSupportedPlatform8[1];\n\nexport { getIpAddress, getIpAddressSync };\n\nvar _getSupportedPlatform9 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.isCameraPresent();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isCameraPresentSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform10 = _slicedToArray(_getSupportedPlatform9, 2),\n    isCameraPresent = _getSupportedPlatform10[0],\n    isCameraPresentSync = _getSupportedPlatform10[1];\n\nexport { isCameraPresent, isCameraPresentSync };\nexport function getMacAddress() {\n  return _regeneratorRuntime.async(function getMacAddress$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context2.next = 4;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", RNDeviceInfo.getMacAddress());\n\n        case 4:\n          if (!(Platform.OS === 'ios')) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", '02:00:00:00:00:00');\n\n        case 6:\n          return _context2.abrupt(\"return\", 'unknown');\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n\n  return 'unknown';\n}\nexport var getDeviceId = function getDeviceId() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: function getter() {\n      return RNDeviceInfo.deviceId;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\n\nvar _getSupportedPlatform11 = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer();\n  },\n  syncGetter: function syncGetter() {\n    return Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform12 = _slicedToArray(_getSupportedPlatform11, 2),\n    getManufacturer = _getSupportedPlatform12[0],\n    getManufacturerSync = _getSupportedPlatform12[1];\n\nexport { getManufacturer, getManufacturerSync };\nexport var getModel = function getModel() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.model;\n    }\n  });\n};\nexport var getBrand = function getBrand() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.brand;\n    }\n  });\n};\nexport var getSystemName = function getSystemName() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: function getter() {\n      return Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown'\n      });\n    }\n  });\n};\nexport var getSystemVersion = function getSystemVersion() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.systemVersion;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion'\n  });\n};\n\nvar _getSupportedPlatform13 = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getBuildId();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBuildIdSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform14 = _slicedToArray(_getSupportedPlatform13, 2),\n    getBuildId = _getSupportedPlatform14[0],\n    getBuildIdSync = _getSupportedPlatform14[1];\n\nexport { getBuildId, getBuildIdSync };\n\nvar _getSupportedPlatform15 = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getApiLevel();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getApiLevelSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform16 = _slicedToArray(_getSupportedPlatform15, 2),\n    getApiLevel = _getSupportedPlatform16[0],\n    getApiLevelSync = _getSupportedPlatform16[1];\n\nexport { getApiLevel, getApiLevelSync };\nexport var getBundleId = function getBundleId() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.bundleId;\n    }\n  });\n};\n\nvar _getSupportedPlatform17 = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: function getter() {\n    return RNDeviceInfo.getInstallerPackageName();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getInstallerPackageNameSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform18 = _slicedToArray(_getSupportedPlatform17, 2),\n    getInstallerPackageName = _getSupportedPlatform18[0],\n    getInstallerPackageNameSync = _getSupportedPlatform18[1];\n\nexport { getInstallerPackageName, getInstallerPackageNameSync };\nexport var getApplicationName = function getApplicationName() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.appName;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\nexport var getBuildNumber = function getBuildNumber() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.buildNumber;\n    },\n    defaultValue: 'unknown'\n  });\n};\nexport var getVersion = function getVersion() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.appVersion;\n    }\n  });\n};\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nvar _getSupportedPlatform19 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getDeviceName();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getDeviceNameSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform20 = _slicedToArray(_getSupportedPlatform19, 2),\n    getDeviceName = _getSupportedPlatform20[0],\n    getDeviceNameSync = _getSupportedPlatform20[1];\n\nexport { getDeviceName, getDeviceNameSync };\n\nvar _getSupportedPlatform21 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getUsedMemory();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getUsedMemorySync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform22 = _slicedToArray(_getSupportedPlatform21, 2),\n    getUsedMemory = _getSupportedPlatform22[0],\n    getUsedMemorySync = _getSupportedPlatform22[1];\n\nexport { getUsedMemory, getUsedMemorySync };\nexport var getUserAgent = function getUserAgent() {\n  return getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUserAgent();\n    }\n  });\n};\nexport var getUserAgentSync = function getUserAgentSync() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUserAgentSync();\n    }\n  });\n};\n\nvar _getSupportedPlatform23 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getFontScale();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getFontScaleSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform24 = _slicedToArray(_getSupportedPlatform23, 2),\n    getFontScale = _getSupportedPlatform24[0],\n    getFontScaleSync = _getSupportedPlatform24[1];\n\nexport { getFontScale, getFontScaleSync };\n\nvar _getSupportedPlatform25 = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getBootloader();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBootloaderSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform26 = _slicedToArray(_getSupportedPlatform25, 2),\n    getBootloader = _getSupportedPlatform26[0],\n    getBootloaderSync = _getSupportedPlatform26[1];\n\nexport { getBootloader, getBootloaderSync };\n\nvar _getSupportedPlatform27 = getSupportedPlatformInfoFunctions({\n  getter: function getter() {\n    return RNDeviceInfo.getDevice();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getDeviceSync();\n  },\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android']\n}),\n    _getSupportedPlatform28 = _slicedToArray(_getSupportedPlatform27, 2),\n    getDevice = _getSupportedPlatform28[0],\n    getDeviceSync = _getSupportedPlatform28[1];\n\nexport { getDevice, getDeviceSync };\n\nvar _getSupportedPlatform29 = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getDisplay();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getDisplaySync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform30 = _slicedToArray(_getSupportedPlatform29, 2),\n    getDisplay = _getSupportedPlatform30[0],\n    getDisplaySync = _getSupportedPlatform30[1];\n\nexport { getDisplay, getDisplaySync };\n\nvar _getSupportedPlatform31 = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getFingerprint();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getFingerprintSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform32 = _slicedToArray(_getSupportedPlatform31, 2),\n    getFingerprint = _getSupportedPlatform32[0],\n    getFingerprintSync = _getSupportedPlatform32[1];\n\nexport { getFingerprint, getFingerprintSync };\n\nvar _getSupportedPlatform33 = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getHardware();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getHardwareSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform34 = _slicedToArray(_getSupportedPlatform33, 2),\n    getHardware = _getSupportedPlatform34[0],\n    getHardwareSync = _getSupportedPlatform34[1];\n\nexport { getHardware, getHardwareSync };\n\nvar _getSupportedPlatform35 = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getHost();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getHostSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform36 = _slicedToArray(_getSupportedPlatform35, 2),\n    getHost = _getSupportedPlatform36[0],\n    getHostSync = _getSupportedPlatform36[1];\n\nexport { getHost, getHostSync };\n\nvar _getSupportedPlatform37 = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getProduct();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getProductSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform38 = _slicedToArray(_getSupportedPlatform37, 2),\n    getProduct = _getSupportedPlatform38[0],\n    getProductSync = _getSupportedPlatform38[1];\n\nexport { getProduct, getProductSync };\n\nvar _getSupportedPlatform39 = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getTags();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getTagsSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform40 = _slicedToArray(_getSupportedPlatform39, 2),\n    getTags = _getSupportedPlatform40[0],\n    getTagsSync = _getSupportedPlatform40[1];\n\nexport { getTags, getTagsSync };\n\nvar _getSupportedPlatform41 = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getType();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getTypeSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform42 = _slicedToArray(_getSupportedPlatform41, 2),\n    getType = _getSupportedPlatform42[0],\n    getTypeSync = _getSupportedPlatform42[1];\n\nexport { getType, getTypeSync };\n\nvar _getSupportedPlatform43 = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getBaseOs();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBaseOsSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform44 = _slicedToArray(_getSupportedPlatform43, 2),\n    getBaseOs = _getSupportedPlatform44[0],\n    getBaseOsSync = _getSupportedPlatform44[1];\n\nexport { getBaseOs, getBaseOsSync };\n\nvar _getSupportedPlatform45 = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getPreviewSdkInt();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getPreviewSdkIntSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform46 = _slicedToArray(_getSupportedPlatform45, 2),\n    getPreviewSdkInt = _getSupportedPlatform46[0],\n    getPreviewSdkIntSync = _getSupportedPlatform46[1];\n\nexport { getPreviewSdkInt, getPreviewSdkIntSync };\n\nvar _getSupportedPlatform47 = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getSecurityPatch();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSecurityPatchSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform48 = _slicedToArray(_getSupportedPlatform47, 2),\n    getSecurityPatch = _getSupportedPlatform48[0],\n    getSecurityPatchSync = _getSupportedPlatform48[1];\n\nexport { getSecurityPatch, getSecurityPatchSync };\n\nvar _getSupportedPlatform49 = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getCodename();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getCodenameSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform50 = _slicedToArray(_getSupportedPlatform49, 2),\n    getCodename = _getSupportedPlatform50[0],\n    getCodenameSync = _getSupportedPlatform50[1];\n\nexport { getCodename, getCodenameSync };\n\nvar _getSupportedPlatform51 = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getIncremental();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getIncrementalSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform52 = _slicedToArray(_getSupportedPlatform51, 2),\n    getIncremental = _getSupportedPlatform52[0],\n    getIncrementalSync = _getSupportedPlatform52[1];\n\nexport { getIncremental, getIncrementalSync };\n\nvar _getSupportedPlatform53 = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.isEmulator();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isEmulatorSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform54 = _slicedToArray(_getSupportedPlatform53, 2),\n    isEmulator = _getSupportedPlatform54[0],\n    isEmulatorSync = _getSupportedPlatform54[1];\n\nexport { isEmulator, isEmulatorSync };\nexport var isTablet = function isTablet() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: function getter() {\n      return RNDeviceInfo.isTablet;\n    }\n  });\n};\n\nvar _getSupportedPlatform55 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.isPinOrFingerprintSet();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isPinOrFingerprintSetSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform56 = _slicedToArray(_getSupportedPlatform55, 2),\n    isPinOrFingerprintSet = _getSupportedPlatform56[0],\n    isPinOrFingerprintSetSync = _getSupportedPlatform56[1];\n\nexport { isPinOrFingerprintSet, isPinOrFingerprintSetSync };\nvar notch;\nexport function hasNotch() {\n  if (notch === undefined) {\n    var _brand = getBrand();\n\n    var _model = getModel();\n\n    notch = devicesWithNotch.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n\n  return notch;\n}\n\nvar _getSupportedPlatform57 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.hasGms();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.hasGmsSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform58 = _slicedToArray(_getSupportedPlatform57, 2),\n    hasGms = _getSupportedPlatform58[0],\n    hasGmsSync = _getSupportedPlatform58[1];\n\nexport { hasGms, hasGmsSync };\n\nvar _getSupportedPlatform59 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.hasHms();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.hasHmsSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform60 = _slicedToArray(_getSupportedPlatform59, 2),\n    hasHms = _getSupportedPlatform60[0],\n    hasHmsSync = _getSupportedPlatform60[1];\n\nexport { hasHms, hasHmsSync };\n\nvar _getSupportedPlatform61 = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getFirstInstallTime();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getFirstInstallTimeSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform62 = _slicedToArray(_getSupportedPlatform61, 2),\n    getFirstInstallTime = _getSupportedPlatform62[0],\n    getFirstInstallTimeSync = _getSupportedPlatform62[1];\n\nexport { getFirstInstallTime, getFirstInstallTimeSync };\n\nvar _getSupportedPlatform63 = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getInstallReferrer();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getInstallReferrerSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform64 = _slicedToArray(_getSupportedPlatform63, 2),\n    getInstallReferrer = _getSupportedPlatform64[0],\n    getInstallReferrerSync = _getSupportedPlatform64[1];\n\nexport { getInstallReferrer, getInstallReferrerSync };\n\nvar _getSupportedPlatform65 = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getLastUpdateTime();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getLastUpdateTimeSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform66 = _slicedToArray(_getSupportedPlatform65, 2),\n    getLastUpdateTime = _getSupportedPlatform66[0],\n    getLastUpdateTimeSync = _getSupportedPlatform66[1];\n\nexport { getLastUpdateTime, getLastUpdateTimeSync };\n\nvar _getSupportedPlatform67 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getPhoneNumber();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getPhoneNumberSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform68 = _slicedToArray(_getSupportedPlatform67, 2),\n    getPhoneNumber = _getSupportedPlatform68[0],\n    getPhoneNumberSync = _getSupportedPlatform68[1];\n\nexport { getPhoneNumber, getPhoneNumberSync };\n\nvar _getSupportedPlatform69 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: function getter() {\n    return RNDeviceInfo.getCarrier();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getCarrierSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform70 = _slicedToArray(_getSupportedPlatform69, 2),\n    getCarrier = _getSupportedPlatform70[0],\n    getCarrierSync = _getSupportedPlatform70[1];\n\nexport { getCarrier, getCarrierSync };\n\nvar _getSupportedPlatform71 = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getTotalMemory();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getTotalMemorySync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform72 = _slicedToArray(_getSupportedPlatform71, 2),\n    getTotalMemory = _getSupportedPlatform72[0],\n    getTotalMemorySync = _getSupportedPlatform72[1];\n\nexport { getTotalMemory, getTotalMemorySync };\n\nvar _getSupportedPlatform73 = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getMaxMemory();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getMaxMemorySync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform74 = _slicedToArray(_getSupportedPlatform73, 2),\n    getMaxMemory = _getSupportedPlatform74[0],\n    getMaxMemorySync = _getSupportedPlatform74[1];\n\nexport { getMaxMemory, getMaxMemorySync };\n\nvar _getSupportedPlatform75 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getTotalDiskCapacity();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getTotalDiskCapacitySync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform76 = _slicedToArray(_getSupportedPlatform75, 2),\n    getTotalDiskCapacity = _getSupportedPlatform76[0],\n    getTotalDiskCapacitySync = _getSupportedPlatform76[1];\n\nexport { getTotalDiskCapacity, getTotalDiskCapacitySync };\nexport function getTotalDiskCapacityOld() {\n  return _regeneratorRuntime.async(function getTotalDiskCapacityOld$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context3.next = 2;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", RNDeviceInfo.getTotalDiskCapacityOld());\n\n        case 2:\n          if (!(Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web')) {\n            _context3.next = 4;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", getTotalDiskCapacity());\n\n        case 4:\n          return _context3.abrupt(\"return\", -1);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nvar _getSupportedPlatform77 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getFreeDiskStorage();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getFreeDiskStorageSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform78 = _slicedToArray(_getSupportedPlatform77, 2),\n    getFreeDiskStorage = _getSupportedPlatform78[0],\n    getFreeDiskStorageSync = _getSupportedPlatform78[1];\n\nexport { getFreeDiskStorage, getFreeDiskStorageSync };\nexport function getFreeDiskStorageOld() {\n  return _regeneratorRuntime.async(function getFreeDiskStorageOld$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context4.next = 2;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", RNDeviceInfo.getFreeDiskStorageOld());\n\n        case 2:\n          if (!(Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web')) {\n            _context4.next = 4;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", getFreeDiskStorage());\n\n        case 4:\n          return _context4.abrupt(\"return\", -1);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nvar _getSupportedPlatform79 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getBatteryLevel();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBatteryLevelSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform80 = _slicedToArray(_getSupportedPlatform79, 2),\n    getBatteryLevel = _getSupportedPlatform80[0],\n    getBatteryLevelSync = _getSupportedPlatform80[1];\n\nexport { getBatteryLevel, getBatteryLevelSync };\n\nvar _getSupportedPlatform81 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getPowerState();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getPowerStateSync();\n  },\n  defaultValue: {}\n}),\n    _getSupportedPlatform82 = _slicedToArray(_getSupportedPlatform81, 2),\n    getPowerState = _getSupportedPlatform82[0],\n    getPowerStateSync = _getSupportedPlatform82[1];\n\nexport { getPowerState, getPowerStateSync };\n\nvar _getSupportedPlatform83 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.isBatteryCharging();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isBatteryChargingSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform84 = _slicedToArray(_getSupportedPlatform83, 2),\n    isBatteryCharging = _getSupportedPlatform84[0],\n    isBatteryChargingSync = _getSupportedPlatform84[1];\n\nexport { isBatteryCharging, isBatteryChargingSync };\nexport function isLandscape() {\n  return _regeneratorRuntime.async(function isLandscape$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", Promise.resolve(isLandscapeSync()));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isLandscapeSync() {\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  return width >= height;\n}\n\nvar _getSupportedPlatform85 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.isAirplaneMode();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isAirplaneModeSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform86 = _slicedToArray(_getSupportedPlatform85, 2),\n    isAirplaneMode = _getSupportedPlatform86[0],\n    isAirplaneModeSync = _getSupportedPlatform86[1];\n\nexport { isAirplaneMode, isAirplaneModeSync };\nexport var getDeviceType = function getDeviceType() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.deviceType;\n    }\n  });\n};\nexport var getDeviceTypeSync = function getDeviceTypeSync() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.deviceType;\n    }\n  });\n};\n\nvar _getSupportedPlatform87 = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getSupportedAbis();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSupportedAbisSync();\n  },\n  defaultValue: []\n}),\n    _getSupportedPlatform88 = _slicedToArray(_getSupportedPlatform87, 2),\n    supportedAbis = _getSupportedPlatform88[0],\n    supportedAbisSync = _getSupportedPlatform88[1];\n\nexport { supportedAbis, supportedAbisSync };\n\nvar _getSupportedPlatform89 = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getSupported32BitAbis();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSupported32BitAbisSync();\n  },\n  defaultValue: []\n}),\n    _getSupportedPlatform90 = _slicedToArray(_getSupportedPlatform89, 2),\n    supported32BitAbis = _getSupportedPlatform90[0],\n    supported32BitAbisSync = _getSupportedPlatform90[1];\n\nexport { supported32BitAbis, supported32BitAbisSync };\n\nvar _getSupportedPlatform91 = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getSupported64BitAbis();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSupported64BitAbisSync();\n  },\n  defaultValue: []\n}),\n    _getSupportedPlatform92 = _slicedToArray(_getSupportedPlatform91, 2),\n    supported64BitAbis = _getSupportedPlatform92[0],\n    supported64BitAbisSync = _getSupportedPlatform92[1];\n\nexport { supported64BitAbis, supported64BitAbisSync };\nexport function hasSystemFeature(feature) {\n  return _regeneratorRuntime.async(function hasSystemFeature$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context6.next = 2;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", RNDeviceInfo.hasSystemFeature(feature));\n\n        case 2:\n          return _context6.abrupt(\"return\", false);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function hasSystemFeatureSync(feature) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n\n  return false;\n}\nexport function isLowBatteryLevel(level) {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n\n  return level < 0.2;\n}\n\nvar _getSupportedPlatform93 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getSystemAvailableFeatures();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSystemAvailableFeaturesSync();\n  },\n  defaultValue: []\n}),\n    _getSupportedPlatform94 = _slicedToArray(_getSupportedPlatform93, 2),\n    getSystemAvailableFeatures = _getSupportedPlatform94[0],\n    getSystemAvailableFeaturesSync = _getSupportedPlatform94[1];\n\nexport { getSystemAvailableFeatures, getSystemAvailableFeaturesSync };\n\nvar _getSupportedPlatform95 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.isLocationEnabled();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isLocationEnabledSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform96 = _slicedToArray(_getSupportedPlatform95, 2),\n    isLocationEnabled = _getSupportedPlatform96[0],\n    isLocationEnabledSync = _getSupportedPlatform96[1];\n\nexport { isLocationEnabled, isLocationEnabledSync };\n\nvar _getSupportedPlatform97 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: function getter() {\n    return RNDeviceInfo.isHeadphonesConnected();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isHeadphonesConnectedSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform98 = _slicedToArray(_getSupportedPlatform97, 2),\n    isHeadphonesConnected = _getSupportedPlatform98[0],\n    isHeadphonesConnectedSync = _getSupportedPlatform98[1];\n\nexport { isHeadphonesConnected, isHeadphonesConnectedSync };\n\nvar _getSupportedPlatform99 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: function getter() {\n    return RNDeviceInfo.isMouseConnected();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isMouseConnectedSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform100 = _slicedToArray(_getSupportedPlatform99, 2),\n    isMouseConnected = _getSupportedPlatform100[0],\n    isMouseConnectedSync = _getSupportedPlatform100[1];\n\nexport { isMouseConnected, isMouseConnectedSync };\n\nvar _getSupportedPlatform101 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: function getter() {\n    return RNDeviceInfo.isKeyboardConnected();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isKeyboardConnectedSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform102 = _slicedToArray(_getSupportedPlatform101, 2),\n    isKeyboardConnected = _getSupportedPlatform102[0],\n    isKeyboardConnectedSync = _getSupportedPlatform102[1];\n\nexport { isKeyboardConnected, isKeyboardConnectedSync };\nexport var isTabletMode = function isTabletMode() {\n  return getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isTabletMode();\n    },\n    defaultValue: false\n  });\n};\n\nvar _getSupportedPlatform103 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: function getter() {\n    return RNDeviceInfo.getAvailableLocationProviders();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getAvailableLocationProvidersSync();\n  },\n  defaultValue: {}\n}),\n    _getSupportedPlatform104 = _slicedToArray(_getSupportedPlatform103, 2),\n    getAvailableLocationProviders = _getSupportedPlatform104[0],\n    getAvailableLocationProvidersSync = _getSupportedPlatform104[1];\n\nexport { getAvailableLocationProviders, getAvailableLocationProvidersSync };\n\nvar _getSupportedPlatform105 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: function getter() {\n    return RNDeviceInfo.getBrightness();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBrightnessSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform106 = _slicedToArray(_getSupportedPlatform105, 2),\n    getBrightness = _getSupportedPlatform106[0],\n    getBrightnessSync = _getSupportedPlatform106[1];\n\nexport { getBrightness, getBrightnessSync };\nexport function getDeviceToken() {\n  return _regeneratorRuntime.async(function getDeviceToken$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!(Platform.OS === 'ios')) {\n            _context7.next = 2;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", RNDeviceInfo.getDeviceToken());\n\n        case 2:\n          return _context7.abrupt(\"return\", 'unknown');\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      batteryLevel = _useState2[0],\n      setBatteryLevel = _useState2[1];\n\n  useEffect(function () {\n    var setInitialValue = function _callee() {\n      var initialValue;\n      return _regeneratorRuntime.async(function _callee$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(getBatteryLevel());\n\n            case 2:\n              initialValue = _context8.sent;\n              setBatteryLevel(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(level) {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevel;\n}\nexport function useBatteryLevelIsLow() {\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      batteryLevelIsLow = _useState4[0],\n      setBatteryLevelIsLow = _useState4[1];\n\n  useEffect(function () {\n    var setInitialValue = function _callee2() {\n      var initialValue;\n      return _regeneratorRuntime.async(function _callee2$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _regeneratorRuntime.awrap(getBatteryLevel());\n\n            case 2:\n              initialValue = _context9.sent;\n              isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    setInitialValue();\n\n    var onChange = function onChange(level) {\n      setBatteryLevelIsLow(level);\n    };\n\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevelIsLow;\n}\nexport function usePowerState() {\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      powerState = _useState6[0],\n      setPowerState = _useState6[1];\n\n  useEffect(function () {\n    var setInitialValue = function _callee3() {\n      var initialValue;\n      return _regeneratorRuntime.async(function _callee3$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _regeneratorRuntime.awrap(getPowerState());\n\n            case 2:\n              initialValue = _context10.sent;\n              setPowerState(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(state) {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_powerStateDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return powerState;\n}\nexport function useIsHeadphonesConnected() {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\nexport function useFirstInstallTime() {\n  return useOnMount(getFirstInstallTime, -1);\n}\nexport function useDeviceName() {\n  return useOnMount(getDeviceName, 'unknown');\n}\nexport function useHasSystemFeature(feature) {\n  var asyncGetter = useCallback(function () {\n    return hasSystemFeature(feature);\n  }, [feature]);\n  return useOnMount(asyncGetter, false);\n}\nexport function useIsEmulator() {\n  return useOnMount(isEmulator, false);\n}\nexport function useManufacturer() {\n  return useOnMount(getManufacturer, 'unknown');\n}\nexport function useBrightness() {\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      brightness = _useState8[0],\n      setBrightness = _useState8[1];\n\n  useEffect(function () {\n    var setInitialValue = function _callee4() {\n      var initialValue;\n      return _regeneratorRuntime.async(function _callee4$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _regeneratorRuntime.awrap(getBrightness());\n\n            case 2:\n              initialValue = _context11.sent;\n              setBrightness(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(value) {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_brightnessDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return brightness;\n}\nvar deviceInfoModule = {\n  getAndroidId: getAndroidId,\n  getAndroidIdSync: getAndroidIdSync,\n  getApiLevel: getApiLevel,\n  getApiLevelSync: getApiLevelSync,\n  getApplicationName: getApplicationName,\n  getAvailableLocationProviders: getAvailableLocationProviders,\n  getAvailableLocationProvidersSync: getAvailableLocationProvidersSync,\n  getBaseOs: getBaseOs,\n  getBaseOsSync: getBaseOsSync,\n  getBatteryLevel: getBatteryLevel,\n  getBatteryLevelSync: getBatteryLevelSync,\n  getBootloader: getBootloader,\n  getBootloaderSync: getBootloaderSync,\n  getBrand: getBrand,\n  getBuildId: getBuildId,\n  getBuildIdSync: getBuildIdSync,\n  getBuildNumber: getBuildNumber,\n  getBundleId: getBundleId,\n  getCarrier: getCarrier,\n  getCarrierSync: getCarrierSync,\n  getCodename: getCodename,\n  getCodenameSync: getCodenameSync,\n  getDevice: getDevice,\n  getDeviceId: getDeviceId,\n  getDeviceName: getDeviceName,\n  getDeviceNameSync: getDeviceNameSync,\n  getDeviceSync: getDeviceSync,\n  getDeviceToken: getDeviceToken,\n  getDeviceType: getDeviceType,\n  getDisplay: getDisplay,\n  getDisplaySync: getDisplaySync,\n  getFingerprint: getFingerprint,\n  getFingerprintSync: getFingerprintSync,\n  getFirstInstallTime: getFirstInstallTime,\n  getFirstInstallTimeSync: getFirstInstallTimeSync,\n  getFontScale: getFontScale,\n  getFontScaleSync: getFontScaleSync,\n  getFreeDiskStorage: getFreeDiskStorage,\n  getFreeDiskStorageOld: getFreeDiskStorageOld,\n  getFreeDiskStorageSync: getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync: getFreeDiskStorageOldSync,\n  getHardware: getHardware,\n  getHardwareSync: getHardwareSync,\n  getHost: getHost,\n  getHostSync: getHostSync,\n  getIncremental: getIncremental,\n  getIncrementalSync: getIncrementalSync,\n  getInstallerPackageName: getInstallerPackageName,\n  getInstallerPackageNameSync: getInstallerPackageNameSync,\n  getInstallReferrer: getInstallReferrer,\n  getInstallReferrerSync: getInstallReferrerSync,\n  getInstanceId: getInstanceId,\n  getInstanceIdSync: getInstanceIdSync,\n  getIpAddress: getIpAddress,\n  getIpAddressSync: getIpAddressSync,\n  getLastUpdateTime: getLastUpdateTime,\n  getLastUpdateTimeSync: getLastUpdateTimeSync,\n  getMacAddress: getMacAddress,\n  getMacAddressSync: getMacAddressSync,\n  getManufacturer: getManufacturer,\n  getManufacturerSync: getManufacturerSync,\n  getMaxMemory: getMaxMemory,\n  getMaxMemorySync: getMaxMemorySync,\n  getModel: getModel,\n  getPhoneNumber: getPhoneNumber,\n  getPhoneNumberSync: getPhoneNumberSync,\n  getPowerState: getPowerState,\n  getPowerStateSync: getPowerStateSync,\n  getPreviewSdkInt: getPreviewSdkInt,\n  getPreviewSdkIntSync: getPreviewSdkIntSync,\n  getProduct: getProduct,\n  getProductSync: getProductSync,\n  getReadableVersion: getReadableVersion,\n  getSecurityPatch: getSecurityPatch,\n  getSecurityPatchSync: getSecurityPatchSync,\n  getSerialNumber: getSerialNumber,\n  getSerialNumberSync: getSerialNumberSync,\n  getSystemAvailableFeatures: getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync: getSystemAvailableFeaturesSync,\n  getSystemName: getSystemName,\n  getSystemVersion: getSystemVersion,\n  getTags: getTags,\n  getTagsSync: getTagsSync,\n  getTotalDiskCapacity: getTotalDiskCapacity,\n  getTotalDiskCapacityOld: getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync: getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync: getTotalDiskCapacityOldSync,\n  getTotalMemory: getTotalMemory,\n  getTotalMemorySync: getTotalMemorySync,\n  getType: getType,\n  getTypeSync: getTypeSync,\n  getUniqueId: getUniqueId,\n  getUsedMemory: getUsedMemory,\n  getUsedMemorySync: getUsedMemorySync,\n  getUserAgent: getUserAgent,\n  getUserAgentSync: getUserAgentSync,\n  getVersion: getVersion,\n  getBrightness: getBrightness,\n  getBrightnessSync: getBrightnessSync,\n  hasGms: hasGms,\n  hasGmsSync: hasGmsSync,\n  hasHms: hasHms,\n  hasHmsSync: hasHmsSync,\n  hasNotch: hasNotch,\n  hasSystemFeature: hasSystemFeature,\n  hasSystemFeatureSync: hasSystemFeatureSync,\n  isAirplaneMode: isAirplaneMode,\n  isAirplaneModeSync: isAirplaneModeSync,\n  isBatteryCharging: isBatteryCharging,\n  isBatteryChargingSync: isBatteryChargingSync,\n  isCameraPresent: isCameraPresent,\n  isCameraPresentSync: isCameraPresentSync,\n  isEmulator: isEmulator,\n  isEmulatorSync: isEmulatorSync,\n  isHeadphonesConnected: isHeadphonesConnected,\n  isHeadphonesConnectedSync: isHeadphonesConnectedSync,\n  isLandscape: isLandscape,\n  isLandscapeSync: isLandscapeSync,\n  isLocationEnabled: isLocationEnabled,\n  isLocationEnabledSync: isLocationEnabledSync,\n  isPinOrFingerprintSet: isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync: isPinOrFingerprintSetSync,\n  isMouseConnected: isMouseConnected,\n  isMouseConnectedSync: isMouseConnectedSync,\n  isKeyboardConnected: isKeyboardConnected,\n  isKeyboardConnectedSync: isKeyboardConnectedSync,\n  isTabletMode: isTabletMode,\n  isTablet: isTablet,\n  supported32BitAbis: supported32BitAbis,\n  supported32BitAbisSync: supported32BitAbisSync,\n  supported64BitAbis: supported64BitAbis,\n  supported64BitAbisSync: supported64BitAbisSync,\n  supportedAbis: supportedAbis,\n  supportedAbisSync: supportedAbisSync,\n  syncUniqueId: syncUniqueId,\n  useBatteryLevel: useBatteryLevel,\n  useBatteryLevelIsLow: useBatteryLevelIsLow,\n  useDeviceName: useDeviceName,\n  useFirstInstallTime: useFirstInstallTime,\n  useHasSystemFeature: useHasSystemFeature,\n  useIsEmulator: useIsEmulator,\n  usePowerState: usePowerState,\n  useManufacturer: useManufacturer,\n  useIsHeadphonesConnected: useIsHeadphonesConnected,\n  useBrightness: useBrightness\n};\nexport default deviceInfoModule;","map":{"version":3,"sources":["index.ts"],"names":["getUniqueId","getSupportedPlatformInfoSync","defaultValue","memoKey","supportedPlatforms","getter","RNDeviceInfo","uniqueId","Platform","getSupportedPlatformInfoFunctions","syncGetter","getDeviceId","Promise","getModel","model","getBrand","brand","getSystemName","ios","android","windows","default","getSystemVersion","getBundleId","bundleId","getApplicationName","getBuildNumber","getVersion","appVersion","getUserAgent","getSupportedPlatformInfoAsync","getUserAgentSync","isTablet","notch","_brand","_model","devicesWithNotch","item","getTotalDiskCapacity","getTotalDiskCapacitySync","getFreeDiskStorage","getFreeDiskStorageSync","isLandscapeSync","width","Dimensions","getDeviceType","deviceType","getDeviceTypeSync","level","isTabletMode","deviceInfoEmitter","NativeModules","useState","useEffect","setInitialValue","initialValue","getBatteryLevel","setBatteryLevel","onChange","subscription","isLowBatteryLevel","setBatteryLevelIsLow","getPowerState","setPowerState","state","useOnEvent","useOnMount","asyncGetter","useCallback","hasSystemFeature","getBrightness","setBrightness","value","deviceInfoModule","getAndroidId","getAndroidIdSync","getApiLevel","getApiLevelSync","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBaseOs","getBaseOsSync","getBatteryLevelSync","getBootloader","getBootloaderSync","getBuildId","getBuildIdSync","getCarrier","getCarrierSync","getCodename","getCodenameSync","getDevice","getDeviceName","getDeviceNameSync","getDeviceSync","getDeviceToken","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getFirstInstallTime","getFirstInstallTimeSync","getFontScale","getFontScaleSync","getFreeDiskStorageOld","getFreeDiskStorageOldSync","getHardware","getHardwareSync","getHost","getHostSync","getIncremental","getIncrementalSync","getInstallerPackageName","getInstallerPackageNameSync","getInstallReferrer","getInstallReferrerSync","getInstanceId","getInstanceIdSync","getIpAddress","getIpAddressSync","getLastUpdateTime","getLastUpdateTimeSync","getMacAddress","getMacAddressSync","getManufacturer","getManufacturerSync","getMaxMemory","getMaxMemorySync","getPhoneNumber","getPhoneNumberSync","getPowerStateSync","getPreviewSdkInt","getPreviewSdkIntSync","getProduct","getProductSync","getReadableVersion","getSecurityPatch","getSecurityPatchSync","getSerialNumber","getSerialNumberSync","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","getTags","getTagsSync","getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","getTotalMemory","getTotalMemorySync","getType","getTypeSync","getUsedMemory","getUsedMemorySync","getBrightnessSync","hasGms","hasGmsSync","hasHms","hasHmsSync","hasNotch","hasSystemFeatureSync","isAirplaneMode","isAirplaneModeSync","isBatteryCharging","isBatteryChargingSync","isCameraPresent","isCameraPresentSync","isEmulator","isEmulatorSync","isHeadphonesConnected","isHeadphonesConnectedSync","isLandscape","isLocationEnabled","isLocationEnabledSync","isPinOrFingerprintSet","isPinOrFingerprintSetSync","isMouseConnected","isMouseConnectedSync","isKeyboardConnected","isKeyboardConnectedSync","supported32BitAbis","supported32BitAbisSync","supported64BitAbis","supported64BitAbisSync","supportedAbis","supportedAbisSync","syncUniqueId","useBatteryLevel","useBatteryLevelIsLow","useDeviceName","useFirstInstallTime","useHasSystemFeature","useIsEmulator","usePowerState","useManufacturer","useIsHeadphonesConnected","useBrightness"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nexport const getUniqueId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'uniqueId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.uniqueId,\n  });\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => RNDeviceInfo.deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => RNDeviceInfo.model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => RNDeviceInfo.isTablet,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState(),\n  syncGetter: () => RNDeviceInfo.getPowerStateSync(),\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders(),\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync(),\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst deviceInfoModule: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default deviceInfoModule;\n"]},"metadata":{},"sourceType":"module"}