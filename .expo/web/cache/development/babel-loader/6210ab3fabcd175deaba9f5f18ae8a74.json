{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    SCREEN_HEIGHT = _Dimensions$get.height,\n    SCREEN_WIDTH = _Dimensions$get.width;\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: 'white'\n  },\n  transparent: {\n    zIndex: 2,\n    backgroundColor: 'rgba(0,0,0,0)'\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});\n\nvar ModalBox = function (_React$PureComponent) {\n  _inherits(ModalBox, _React$PureComponent);\n\n  var _super = _createSuper(ModalBox);\n\n  function ModalBox(props) {\n    var _this;\n\n    _classCallCheck(this, ModalBox);\n\n    _this = _super.call(this, props);\n    _this.onBackPress = _this.onBackPress.bind(_assertThisInitialized(_this));\n    _this.handleOpenning = _this.handleOpenning.bind(_assertThisInitialized(_this));\n    _this.onKeyboardHide = _this.onKeyboardHide.bind(_assertThisInitialized(_this));\n    _this.onKeyboardChange = _this.onKeyboardChange.bind(_assertThisInitialized(_this));\n    _this.animateBackdropOpen = _this.animateBackdropOpen.bind(_assertThisInitialized(_this));\n    _this.animateBackdropClose = _this.animateBackdropClose.bind(_assertThisInitialized(_this));\n    _this.stopAnimateOpen = _this.stopAnimateOpen.bind(_assertThisInitialized(_this));\n    _this.animateOpen = _this.animateOpen.bind(_assertThisInitialized(_this));\n    _this.stopAnimateClose = _this.stopAnimateClose.bind(_assertThisInitialized(_this));\n    _this.animateClose = _this.animateClose.bind(_assertThisInitialized(_this));\n    _this.calculateModalPosition = _this.calculateModalPosition.bind(_assertThisInitialized(_this));\n    _this.createPanResponder = _this.createPanResponder.bind(_assertThisInitialized(_this));\n    _this.onViewLayout = _this.onViewLayout.bind(_assertThisInitialized(_this));\n    _this.onContainerLayout = _this.onContainerLayout.bind(_assertThisInitialized(_this));\n    _this.renderBackdrop = _this.renderBackdrop.bind(_assertThisInitialized(_this));\n    _this.renderContent = _this.renderContent.bind(_assertThisInitialized(_this));\n    _this.open = _this.open.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    var position = props.startOpen ? new Animated.Value(0) : new Animated.Value(props.entry === 'top' ? -SCREEN_HEIGHT : SCREEN_HEIGHT);\n    _this.state = {\n      position: position,\n      backdropOpacity: new Animated.Value(0),\n      isOpen: props.startOpen,\n      isAnimateClose: false,\n      isAnimateOpen: false,\n      swipeToClose: false,\n      height: SCREEN_HEIGHT,\n      width: SCREEN_WIDTH,\n      containerHeight: SCREEN_HEIGHT,\n      containerWidth: SCREEN_WIDTH,\n      isInitialized: false,\n      keyboardOffset: 0,\n      pan: _this.createPanResponder(position)\n    };\n\n    if (Platform.OS === 'ios') {\n      _this.subscriptions = [Keyboard.addListener('keyboardWillChangeFrame', _this.onKeyboardChange), Keyboard.addListener('keyboardDidHide', _this.onKeyboardHide)];\n    }\n\n    return _this;\n  }\n\n  _createClass(ModalBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleOpenning();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.isOpen != prevProps.isOpen) {\n        this.handleOpenning();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.subscriptions) this.subscriptions.forEach(function (sub) {\n        return sub.remove();\n      });\n      if (this.props.backButtonClose && Platform.OS === 'android') BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n    }\n  }, {\n    key: \"onBackPress\",\n    value: function onBackPress() {\n      this.close();\n      return true;\n    }\n  }, {\n    key: \"handleOpenning\",\n    value: function handleOpenning() {\n      if (typeof this.props.isOpen == 'undefined') return;\n      if (this.props.isOpen) this.open();else this.close();\n    }\n  }, {\n    key: \"onKeyboardHide\",\n    value: function onKeyboardHide(evt) {\n      this.setState({\n        keyboardOffset: 0\n      });\n    }\n  }, {\n    key: \"onKeyboardChange\",\n    value: function onKeyboardChange(evt) {\n      var _this2 = this;\n\n      if (!evt) return;\n      if (!this.state.isOpen) return;\n      var keyboardFrame = evt.endCoordinates;\n      var keyboardHeight = this.state.containerHeight - keyboardFrame.screenY;\n      this.setState({\n        keyboardOffset: keyboardHeight\n      }, function () {\n        _this2.animateOpen();\n      });\n    }\n  }, {\n    key: \"animateBackdropOpen\",\n    value: function animateBackdropOpen() {\n      var _this3 = this;\n\n      if (this.state.isAnimateBackdrop && this.state.animBackdrop) {\n        this.state.animBackdrop.stop();\n      }\n\n      this.setState({\n        isAnimateBackdrop: true\n      });\n      var animBackdrop = Animated.timing(this.state.backdropOpacity, {\n        toValue: 1,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: this.props.useNativeDriver\n      }).start(function () {\n        _this3.setState({\n          isAnimateBackdrop: false,\n          animBackdrop: animBackdrop\n        });\n      });\n    }\n  }, {\n    key: \"animateBackdropClose\",\n    value: function animateBackdropClose() {\n      var _this4 = this;\n\n      if (this.state.isAnimateBackdrop && this.state.animBackdrop) {\n        this.state.animBackdrop.stop();\n      }\n\n      this.setState({\n        isAnimateBackdrop: true\n      });\n      var animBackdrop = Animated.timing(this.state.backdropOpacity, {\n        toValue: 0,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: this.props.useNativeDriver\n      }).start(function () {\n        _this4.setState({\n          isAnimateBackdrop: false,\n          animBackdrop: animBackdrop\n        });\n      });\n    }\n  }, {\n    key: \"stopAnimateOpen\",\n    value: function stopAnimateOpen() {\n      if (this.state.isAnimateOpen) {\n        if (this.state.animOpen) this.state.animOpen.stop();\n        this.setState({\n          isAnimateOpen: false\n        });\n      }\n    }\n  }, {\n    key: \"animateOpen\",\n    value: function animateOpen() {\n      var _this5 = this;\n\n      this.stopAnimateClose();\n      if (this.props.backdrop) this.animateBackdropOpen();\n      this.setState({\n        isAnimateOpen: true,\n        isOpen: true\n      }, function () {\n        requestAnimationFrame(function () {\n          var positionDest = _this5.calculateModalPosition(_this5.state.containerHeight - _this5.state.keyboardOffset, _this5.state.containerWidth);\n\n          if (_this5.state.keyboardOffset && positionDest < _this5.props.keyboardTopOffset) {\n            positionDest = _this5.props.keyboardTopOffset;\n          }\n\n          var animOpen = Animated.timing(_this5.state.position, {\n            toValue: positionDest,\n            duration: _this5.props.animationDuration,\n            easing: _this5.props.easing,\n            useNativeDriver: _this5.props.useNativeDriver\n          }).start(function () {\n            _this5.setState({\n              isAnimateOpen: false,\n              animOpen: animOpen,\n              positionDest: positionDest\n            });\n\n            if (_this5.props.onOpened) _this5.props.onOpened();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"stopAnimateClose\",\n    value: function stopAnimateClose() {\n      if (this.state.isAnimateClose) {\n        if (this.state.animClose) this.state.animClose.stop();\n        this.setState({\n          isAnimateClose: false\n        });\n      }\n    }\n  }, {\n    key: \"animateClose\",\n    value: function animateClose() {\n      var _this6 = this;\n\n      this.stopAnimateOpen();\n      if (this.props.backdrop) this.animateBackdropClose();\n      this.setState({\n        isAnimateClose: true,\n        isOpen: false\n      }, function () {\n        var animClose = Animated.timing(_this6.state.position, {\n          toValue: _this6.props.entry === 'top' ? -_this6.state.containerHeight : _this6.state.containerHeight,\n          duration: _this6.props.animationDuration,\n          easing: _this6.props.easing,\n          useNativeDriver: _this6.props.useNativeDriver\n        }).start(function () {\n          _this6.setState({\n            isAnimateClose: false,\n            animClose: animClose\n          }, function () {\n            _this6.state.position.setValue(_this6.props.entry === 'top' ? -_this6.state.containerHeight : _this6.state.containerHeight);\n          });\n\n          if (_this6.props.onClosed) _this6.props.onClosed();\n        });\n      });\n    }\n  }, {\n    key: \"calculateModalPosition\",\n    value: function calculateModalPosition(containerHeight, containerWidth) {\n      var position = 0;\n\n      if (this.props.position == 'bottom') {\n        position = containerHeight - this.state.height;\n      } else if (this.props.position == 'center') {\n        position = containerHeight / 2 - this.state.height / 2;\n      }\n\n      if (position < 0) position = 0;\n      return position;\n    }\n  }, {\n    key: \"createPanResponder\",\n    value: function createPanResponder(position) {\n      var _this7 = this;\n\n      var closingState = false;\n      var inSwipeArea = false;\n\n      var onPanStart = function onPanStart(evt, state) {\n        if (!_this7.props.swipeToClose || _this7.props.isDisabled || _this7.props.swipeArea && evt.nativeEvent.pageY - _this7.state.positionDest > _this7.props.swipeArea) {\n          inSwipeArea = false;\n          return false;\n        }\n\n        inSwipeArea = true;\n        return true;\n      };\n\n      var animEvt = Animated.event([null, {\n        customY: position\n      }], {\n        useNativeDriver: false\n      });\n\n      var onPanMove = function onPanMove(evt, state) {\n        var newClosingState = _this7.props.entry === 'top' ? -state.dy > _this7.props.swipeThreshold : state.dy > _this7.props.swipeThreshold;\n        if (_this7.props.entry === 'top' ? state.dy > 0 : state.dy < 0) return;\n        if (newClosingState != closingState && _this7.props.onClosingState) _this7.props.onClosingState(newClosingState);\n        closingState = newClosingState;\n        state.customY = state.dy + _this7.state.positionDest;\n        animEvt(evt, state);\n      };\n\n      var onPanRelease = function onPanRelease(evt, state) {\n        if (!inSwipeArea) return;\n        inSwipeArea = false;\n\n        if (_this7.props.entry === 'top' ? -state.dy > _this7.props.swipeThreshold : state.dy > _this7.props.swipeThreshold) {\n          _this7.close();\n        } else if (!_this7.state.isOpen) {\n          _this7.animateOpen();\n        }\n      };\n\n      return PanResponder.create({\n        onStartShouldSetPanResponder: onPanStart,\n        onPanResponderMove: onPanMove,\n        onPanResponderRelease: onPanRelease,\n        onPanResponderTerminate: onPanRelease\n      });\n    }\n  }, {\n    key: \"onViewLayout\",\n    value: function onViewLayout(evt) {\n      var height = evt.nativeEvent.layout.height;\n      var width = evt.nativeEvent.layout.width;\n      var newState = {};\n      if (height !== this.state.height) newState.height = height;\n      if (width !== this.state.width) newState.width = width;\n      this.setState(newState);\n      if (this.onViewLayoutCalculated) this.onViewLayoutCalculated();\n    }\n  }, {\n    key: \"onContainerLayout\",\n    value: function onContainerLayout(evt) {\n      var height = evt.nativeEvent.layout.height;\n      var width = evt.nativeEvent.layout.width;\n\n      if (height == this.state.containerHeight && width == this.state.containerWidth) {\n        this.setState({\n          isInitialized: true\n        });\n        return;\n      }\n\n      if (this.state.isOpen || this.state.isAnimateOpen) {\n        this.animateOpen();\n      }\n\n      if (this.props.onLayout) this.props.onLayout(evt);\n      this.setState({\n        isInitialized: true,\n        containerHeight: height,\n        containerWidth: width\n      });\n    }\n  }, {\n    key: \"renderBackdrop\",\n    value: function renderBackdrop() {\n      var backdrop = null;\n\n      if (this.props.backdrop) {\n        backdrop = _jsx(TouchableWithoutFeedback, {\n          onPress: this.props.backdropPressToClose ? this.close : null,\n          children: _jsxs(Animated.View, {\n            importantForAccessibility: \"no\",\n            style: [styles.absolute, {\n              opacity: this.state.backdropOpacity\n            }],\n            children: [_jsx(View, {\n              style: [styles.absolute, {\n                backgroundColor: this.props.backdropColor,\n                opacity: this.props.backdropOpacity\n              }]\n            }), this.props.backdropContent || []]\n          })\n        });\n      }\n\n      return backdrop;\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var size = {\n        height: this.state.containerHeight,\n        width: this.state.containerWidth\n      };\n      var offsetX = (this.state.containerWidth - this.state.width) / 2;\n      return _jsx(Animated.View, _objectSpread(_objectSpread({\n        onLayout: this.onViewLayout,\n        style: [styles.wrapper, size, this.props.style, {\n          transform: [{\n            translateY: this.state.position\n          }, {\n            translateX: offsetX\n          }]\n        }]\n      }, this.state.pan.panHandlers), {}, {\n        children: this.props.children\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var visible = this.state.isOpen || this.state.isAnimateOpen || this.state.isAnimateClose;\n      if (!visible) return _jsx(View, {});\n\n      var content = _jsx(View, {\n        importantForAccessibility: \"yes\",\n        accessibilityViewIsModal: true,\n        style: [styles.transparent, styles.absolute],\n        pointerEvents: 'box-none',\n        children: _jsxs(View, {\n          style: {\n            flex: 1\n          },\n          pointerEvents: 'box-none',\n          onLayout: this.onContainerLayout,\n          children: [visible && this.renderBackdrop(), visible && this.renderContent()]\n        })\n      });\n\n      if (!this.props.coverScreen) return content;\n      return _jsx(Modal, {\n        onRequestClose: function onRequestClose() {\n          if (_this8.props.backButtonClose) {\n            _this8.close();\n          }\n        },\n        supportedOrientations: ['landscape', 'portrait', 'portrait-upside-down'],\n        transparent: true,\n        visible: visible,\n        hardwareAccelerated: true,\n        children: content\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this9 = this;\n\n      if (this.props.isDisabled) return;\n\n      if (!this.state.isAnimateOpen && (!this.state.isOpen || this.state.isAnimateClose)) {\n        this.onViewLayoutCalculated = function () {\n          _this9.animateOpen();\n\n          if (_this9.props.backButtonClose && Platform.OS === 'android') BackHandler.addEventListener('hardwareBackPress', _this9.onBackPress);\n          _this9.onViewLayoutCalculated = null;\n        };\n\n        this.setState({\n          isAnimateOpen: true\n        });\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.props.isDisabled) return;\n\n      if (!this.state.isAnimateClose && (this.state.isOpen || this.state.isAnimateOpen)) {\n        this.animateClose();\n        if (this.props.backButtonClose && Platform.OS === 'android') BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n      }\n    }\n  }]);\n\n  return ModalBox;\n}(React.PureComponent);\n\nModalBox.propTypes = {\n  isOpen: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  startOpen: PropTypes.bool,\n  backdropPressToClose: PropTypes.bool,\n  swipeToClose: PropTypes.bool,\n  swipeThreshold: PropTypes.number,\n  swipeArea: PropTypes.number,\n  position: PropTypes.string,\n  entry: PropTypes.string,\n  backdrop: PropTypes.bool,\n  backdropOpacity: PropTypes.number,\n  backdropColor: PropTypes.string,\n  backdropContent: PropTypes.element,\n  animationDuration: PropTypes.number,\n  backButtonClose: PropTypes.bool,\n  easing: PropTypes.func,\n  coverScreen: PropTypes.bool,\n  keyboardTopOffset: PropTypes.number,\n  onClosed: PropTypes.func,\n  onOpened: PropTypes.func,\n  onClosingState: PropTypes.func\n};\nModalBox.defaultProps = {\n  startOpen: false,\n  backdropPressToClose: true,\n  swipeToClose: true,\n  swipeThreshold: 50,\n  position: 'center',\n  backdrop: true,\n  backdropOpacity: 0.5,\n  backdropColor: 'black',\n  backdropContent: null,\n  animationDuration: 400,\n  backButtonClose: false,\n  easing: Easing.elastic(0.8),\n  coverScreen: false,\n  keyboardTopOffset: Platform.OS == 'ios' ? 22 : 0,\n  useNativeDriver: true\n};\nexport { ModalBox as default };","map":{"version":3,"names":["React","PropTypes","Dimensions","get","SCREEN_HEIGHT","height","SCREEN_WIDTH","width","styles","StyleSheet","create","wrapper","backgroundColor","transparent","zIndex","absolute","position","top","bottom","left","right","ModalBox","props","onBackPress","bind","handleOpenning","onKeyboardHide","onKeyboardChange","animateBackdropOpen","animateBackdropClose","stopAnimateOpen","animateOpen","stopAnimateClose","animateClose","calculateModalPosition","createPanResponder","onViewLayout","onContainerLayout","renderBackdrop","renderContent","open","close","startOpen","Animated","Value","entry","state","backdropOpacity","isOpen","isAnimateClose","isAnimateOpen","swipeToClose","containerHeight","containerWidth","isInitialized","keyboardOffset","pan","Platform","OS","subscriptions","Keyboard","addListener","prevProps","forEach","sub","remove","backButtonClose","BackHandler","removeEventListener","evt","setState","keyboardFrame","endCoordinates","keyboardHeight","screenY","isAnimateBackdrop","animBackdrop","stop","timing","toValue","duration","animationDuration","easing","useNativeDriver","start","animOpen","backdrop","requestAnimationFrame","positionDest","keyboardTopOffset","onOpened","animClose","setValue","onClosed","closingState","inSwipeArea","onPanStart","isDisabled","swipeArea","nativeEvent","pageY","animEvt","event","customY","onPanMove","newClosingState","dy","swipeThreshold","onClosingState","onPanRelease","PanResponder","onStartShouldSetPanResponder","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","layout","newState","onViewLayoutCalculated","onLayout","backdropPressToClose","opacity","backdropColor","backdropContent","size","offsetX","style","transform","translateY","translateX","panHandlers","children","visible","content","flex","coverScreen","addEventListener","PureComponent","propTypes","bool","number","string","element","func","defaultProps","Easing","elastic"],"sources":["/Users/ecorfytechnologies/jagadish/GitHub/maxwordu/node_modules/react-native-modalbox/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  PanResponder,\n  Animated,\n  TouchableWithoutFeedback,\n  Dimensions,\n  Easing,\n  BackHandler,\n  Platform,\n  Modal,\n  Keyboard\n} from 'react-native';\n\nconst {height: SCREEN_HEIGHT, width: SCREEN_WIDTH} = Dimensions.get('window');\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: 'white'\n  },\n  transparent: {\n    zIndex: 2,\n    backgroundColor: 'rgba(0,0,0,0)'\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});\n\nexport default class ModalBox extends React.PureComponent {\n  static propTypes = {\n    isOpen: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    startOpen: PropTypes.bool,\n    backdropPressToClose: PropTypes.bool,\n    swipeToClose: PropTypes.bool,\n    swipeThreshold: PropTypes.number,\n    swipeArea: PropTypes.number,\n    position: PropTypes.string,\n    entry: PropTypes.string,\n    backdrop: PropTypes.bool,\n    backdropOpacity: PropTypes.number,\n    backdropColor: PropTypes.string,\n    backdropContent: PropTypes.element,\n    animationDuration: PropTypes.number,\n    backButtonClose: PropTypes.bool,\n    easing: PropTypes.func,\n    coverScreen: PropTypes.bool,\n    keyboardTopOffset: PropTypes.number,\n    onClosed: PropTypes.func,\n    onOpened: PropTypes.func,\n    onClosingState: PropTypes.func\n  };\n\n  static defaultProps = {\n    startOpen: false,\n    backdropPressToClose: true,\n    swipeToClose: true,\n    swipeThreshold: 50,\n    position: 'center',\n    backdrop: true,\n    backdropOpacity: 0.5,\n    backdropColor: 'black',\n    backdropContent: null,\n    animationDuration: 400,\n    backButtonClose: false,\n    easing: Easing.elastic(0.8),\n    coverScreen: false,\n    keyboardTopOffset: Platform.OS == 'ios' ? 22 : 0,\n    useNativeDriver: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onBackPress = this.onBackPress.bind(this);\n    this.handleOpenning = this.handleOpenning.bind(this);\n    this.onKeyboardHide = this.onKeyboardHide.bind(this);\n    this.onKeyboardChange = this.onKeyboardChange.bind(this);\n    this.animateBackdropOpen = this.animateBackdropOpen.bind(this);\n    this.animateBackdropClose = this.animateBackdropClose.bind(this);\n    this.stopAnimateOpen = this.stopAnimateOpen.bind(this);\n    this.animateOpen = this.animateOpen.bind(this);\n    this.stopAnimateClose = this.stopAnimateClose.bind(this);\n    this.animateClose = this.animateClose.bind(this);\n    this.calculateModalPosition = this.calculateModalPosition.bind(this);\n    this.createPanResponder = this.createPanResponder.bind(this);\n    this.onViewLayout = this.onViewLayout.bind(this);\n    this.onContainerLayout = this.onContainerLayout.bind(this);\n    this.renderBackdrop = this.renderBackdrop.bind(this);\n    this.renderContent = this.renderContent.bind(this);\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n\n    const position = props.startOpen\n      ? new Animated.Value(0)\n      : new Animated.Value(\n          props.entry === 'top' ? -SCREEN_HEIGHT : SCREEN_HEIGHT\n        );\n    this.state = {\n      position,\n      backdropOpacity: new Animated.Value(0),\n      isOpen: props.startOpen,\n      isAnimateClose: false,\n      isAnimateOpen: false,\n      swipeToClose: false,\n      height: SCREEN_HEIGHT,\n      width: SCREEN_WIDTH,\n      containerHeight: SCREEN_HEIGHT,\n      containerWidth: SCREEN_WIDTH,\n      isInitialized: false,\n      keyboardOffset: 0,\n      pan: this.createPanResponder(position)\n    };\n\n    // Needed for iOS because the keyboard covers the screen\n    if (Platform.OS === 'ios') {\n      this.subscriptions = [\n        Keyboard.addListener('keyboardWillChangeFrame', this.onKeyboardChange),\n        Keyboard.addListener('keyboardDidHide', this.onKeyboardHide)\n      ];\n    }\n  }\n\n  componentDidMount() {\n    this.handleOpenning();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isOpen != prevProps.isOpen) {\n      this.handleOpenning();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.subscriptions) this.subscriptions.forEach(sub => sub.remove());\n    if (this.props.backButtonClose && Platform.OS === 'android')\n      BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n  }\n\n  onBackPress() {\n    this.close();\n    return true;\n  }\n\n  handleOpenning() {\n    if (typeof this.props.isOpen == 'undefined') return;\n    if (this.props.isOpen) this.open();\n    else this.close();\n  }\n\n  /****************** ANIMATIONS **********************/\n\n  /*\n   * The keyboard is hidden (IOS only)\n   */\n  onKeyboardHide(evt) {\n    this.setState({keyboardOffset: 0});\n  }\n\n  /*\n   * The keyboard frame changed, used to detect when the keyboard open, faster than keyboardDidShow (IOS only)\n   */\n  onKeyboardChange(evt) {\n    if (!evt) return;\n    if (!this.state.isOpen) return;\n    const keyboardFrame = evt.endCoordinates;\n    const keyboardHeight = this.state.containerHeight - keyboardFrame.screenY;\n\n    this.setState({keyboardOffset: keyboardHeight}, () => {\n      this.animateOpen();\n    });\n  }\n\n  /*\n   * Open animation for the backdrop, will fade in\n   */\n  animateBackdropOpen() {\n    if (this.state.isAnimateBackdrop && this.state.animBackdrop) {\n      this.state.animBackdrop.stop();\n    }\n    this.setState({isAnimateBackdrop: true});\n\n    let animBackdrop = Animated.timing(this.state.backdropOpacity, {\n      toValue: 1,\n      duration: this.props.animationDuration,\n      easing: this.props.easing,\n      useNativeDriver: this.props.useNativeDriver\n    }).start(() => {\n      this.setState({\n        isAnimateBackdrop: false,\n        animBackdrop\n      });\n    });\n  }\n\n  /*\n   * Close animation for the backdrop, will fade out\n   */\n  animateBackdropClose() {\n    if (this.state.isAnimateBackdrop && this.state.animBackdrop) {\n      this.state.animBackdrop.stop();\n    }\n    this.setState({isAnimateBackdrop: true});\n\n    let animBackdrop = Animated.timing(this.state.backdropOpacity, {\n      toValue: 0,\n      duration: this.props.animationDuration,\n      easing: this.props.easing,\n      useNativeDriver: this.props.useNativeDriver\n    }).start(() => {\n      this.setState({\n        isAnimateBackdrop: false,\n        animBackdrop\n      });\n    });\n  }\n\n  /*\n   * Stop opening animation\n   */\n  stopAnimateOpen() {\n    if (this.state.isAnimateOpen) {\n      if (this.state.animOpen) this.state.animOpen.stop();\n      this.setState({isAnimateOpen: false});\n    }\n  }\n\n  /*\n   * Open animation for the modal, will move up\n   */\n  animateOpen() {\n    this.stopAnimateClose();\n\n    // Backdrop fadeIn\n    if (this.props.backdrop) this.animateBackdropOpen();\n\n    this.setState(\n      {\n        isAnimateOpen: true,\n        isOpen: true\n      },\n      () => {\n        requestAnimationFrame(() => {\n          // Detecting modal position\n          let positionDest = this.calculateModalPosition(\n            this.state.containerHeight - this.state.keyboardOffset,\n            this.state.containerWidth\n          );\n          if (\n            this.state.keyboardOffset &&\n            positionDest < this.props.keyboardTopOffset\n          ) {\n            positionDest = this.props.keyboardTopOffset;\n          }\n          let animOpen = Animated.timing(this.state.position, {\n            toValue: positionDest,\n            duration: this.props.animationDuration,\n            easing: this.props.easing,\n            useNativeDriver: this.props.useNativeDriver\n          }).start(() => {\n            this.setState({\n              isAnimateOpen: false,\n              animOpen,\n              positionDest\n            });\n            if (this.props.onOpened) this.props.onOpened();\n          });\n        });\n      }\n    );\n  }\n\n  /*\n   * Stop closing animation\n   */\n  stopAnimateClose() {\n    if (this.state.isAnimateClose) {\n      if (this.state.animClose) this.state.animClose.stop();\n      this.setState({isAnimateClose: false});\n    }\n  }\n\n  /*\n   * Close animation for the modal, will move down\n   */\n  animateClose() {\n    this.stopAnimateOpen();\n\n    // Backdrop fadeout\n    if (this.props.backdrop) this.animateBackdropClose();\n\n    this.setState(\n      {\n        isAnimateClose: true,\n        isOpen: false\n      },\n      () => {\n        let animClose = Animated.timing(this.state.position, {\n          toValue:\n            this.props.entry === 'top'\n              ? -this.state.containerHeight\n              : this.state.containerHeight,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: this.props.useNativeDriver\n        }).start(() => {\n          // Keyboard.dismiss();   // make this optional. Easily user defined in .onClosed() callback\n          this.setState({\n            isAnimateClose: false,\n            animClose\n          }, () => {\n            /* Set the state to the starting position of the modal, preventing from animating where the swipe stopped */\n            this.state.position.setValue(this.props.entry === 'top' ? -this.state.containerHeight : this.state.containerHeight);\n          });\n          if (this.props.onClosed) this.props.onClosed();\n        });\n      }\n    );\n  }\n\n  /*\n   * Calculate when should be placed the modal\n   */\n  calculateModalPosition(containerHeight, containerWidth) {\n    let position = 0;\n\n    if (this.props.position == 'bottom') {\n      position = containerHeight - this.state.height;\n    } else if (this.props.position == 'center') {\n      position = containerHeight / 2 - this.state.height / 2;\n    }\n    // Checking if the position >= 0\n    if (position < 0) position = 0;\n    return position;\n  }\n\n  /*\n   * Create the pan responder to detect gesture\n   * Only used if swipeToClose is enabled\n   */\n  createPanResponder(position) {\n    let closingState = false;\n    let inSwipeArea = false;\n\n    const onPanStart = (evt, state) => {\n      if (\n        !this.props.swipeToClose ||\n        this.props.isDisabled ||\n        (this.props.swipeArea &&\n          evt.nativeEvent.pageY - this.state.positionDest >\n            this.props.swipeArea)\n      ) {\n        inSwipeArea = false;\n        return false;\n      }\n      inSwipeArea = true;\n      return true;\n    };\n\n    const animEvt = Animated.event([null, {customY: position}], {useNativeDriver: false});\n\n    const onPanMove = (evt, state) => {\n      const newClosingState =\n        this.props.entry === 'top'\n          ? -state.dy > this.props.swipeThreshold\n          : state.dy > this.props.swipeThreshold;\n      if (this.props.entry === 'top' ? state.dy > 0 : state.dy < 0) return;\n      if (newClosingState != closingState && this.props.onClosingState)\n        this.props.onClosingState(newClosingState);\n      closingState = newClosingState;\n      state.customY = state.dy + this.state.positionDest;\n\n      animEvt(evt, state);\n    };\n\n    const onPanRelease = (evt, state) => {\n      if (!inSwipeArea) return;\n      inSwipeArea = false;\n      if (\n        this.props.entry === 'top'\n          ? -state.dy > this.props.swipeThreshold\n          : state.dy > this.props.swipeThreshold\n      ) {\n        this.close();\n      } else if (!this.state.isOpen) {\n        this.animateOpen();\n      }\n    };\n\n    return PanResponder.create({\n      onStartShouldSetPanResponder: onPanStart,\n      onPanResponderMove: onPanMove,\n      onPanResponderRelease: onPanRelease,\n      onPanResponderTerminate: onPanRelease\n    });\n  }\n\n  /*\n   * Event called when the modal view layout is calculated\n   */\n  onViewLayout(evt) {\n    const height = evt.nativeEvent.layout.height;\n    const width = evt.nativeEvent.layout.width;\n\n    // If the dimensions are still the same we're done\n    let newState = {};\n    if (height !== this.state.height) newState.height = height;\n    if (width !== this.state.width) newState.width = width;\n    this.setState(newState);\n\n    if (this.onViewLayoutCalculated) this.onViewLayoutCalculated();\n  }\n\n  /*\n   * Event called when the container view layout is calculated\n   */\n  onContainerLayout(evt) {\n    const height = evt.nativeEvent.layout.height;\n    const width = evt.nativeEvent.layout.width;\n\n    // If the container size is still the same we're done\n    if (\n      height == this.state.containerHeight &&\n      width == this.state.containerWidth\n    ) {\n      this.setState({isInitialized: true});\n      return;\n    }\n\n    if (this.state.isOpen || this.state.isAnimateOpen) {\n      this.animateOpen();\n    }\n\n    if (this.props.onLayout) this.props.onLayout(evt);\n    this.setState({\n      isInitialized: true,\n      containerHeight: height,\n      containerWidth: width\n    });\n  }\n\n  /*\n   * Render the backdrop element\n   */\n  renderBackdrop() {\n    let backdrop = null;\n\n    if (this.props.backdrop) {\n      backdrop = (\n        <TouchableWithoutFeedback\n          onPress={this.props.backdropPressToClose ? this.close : null}>\n          <Animated.View\n            importantForAccessibility=\"no\"\n            style={[styles.absolute, {opacity: this.state.backdropOpacity}]}>\n            <View\n              style={[\n                styles.absolute,\n                {\n                  backgroundColor: this.props.backdropColor,\n                  opacity: this.props.backdropOpacity\n                }\n              ]}\n            />\n            {this.props.backdropContent || []}\n          </Animated.View>\n        </TouchableWithoutFeedback>\n      );\n    }\n\n    return backdrop;\n  }\n\n  renderContent() {\n    const size = {\n      height: this.state.containerHeight,\n      width: this.state.containerWidth\n    };\n    const offsetX = (this.state.containerWidth - this.state.width) / 2;\n\n    return (\n      <Animated.View\n        onLayout={this.onViewLayout}\n        style={[\n          styles.wrapper,\n          size,\n          this.props.style,\n          {\n            transform: [\n              {translateY: this.state.position},\n              {translateX: offsetX}\n            ]\n          }\n        ]}\n        {...this.state.pan.panHandlers}>\n        {this.props.children}\n      </Animated.View>\n    );\n  }\n\n  /*\n   * Render the component\n   */\n  render() {\n    const visible =\n      this.state.isOpen ||\n      this.state.isAnimateOpen ||\n      this.state.isAnimateClose;\n\n    if (!visible) return <View />;\n\n    const content = (\n      <View\n        importantForAccessibility=\"yes\"\n        accessibilityViewIsModal={true}\n        style={[styles.transparent, styles.absolute]}\n        pointerEvents={'box-none'}>\n        <View\n          style={{flex: 1}}\n          pointerEvents={'box-none'}\n          onLayout={this.onContainerLayout}>\n          {visible && this.renderBackdrop()}\n          {visible && this.renderContent()}\n        </View>\n      </View>\n    );\n\n    if (!this.props.coverScreen) return content;\n\n    return (\n      <Modal\n        onRequestClose={() => {\n          if (this.props.backButtonClose) {\n            this.close();\n          }\n        }}\n        supportedOrientations={[\n          'landscape',\n          'portrait',\n          'portrait-upside-down'\n        ]}\n        transparent\n        visible={visible}\n        hardwareAccelerated={true}>\n        {content}\n      </Modal>\n    );\n  }\n\n  /****************** PUBLIC METHODS **********************/\n\n  open() {\n    if (this.props.isDisabled) return;\n    if (\n      !this.state.isAnimateOpen &&\n      (!this.state.isOpen || this.state.isAnimateClose)\n    ) {\n      this.onViewLayoutCalculated = () => {\n        this.animateOpen();\n        if (this.props.backButtonClose && Platform.OS === 'android')\n          BackHandler.addEventListener('hardwareBackPress', this.onBackPress);\n        this.onViewLayoutCalculated = null;\n      };\n      this.setState({isAnimateOpen: true});\n    }\n  }\n\n  close() {\n    if (this.props.isDisabled) return;\n    if (\n      !this.state.isAnimateClose &&\n      (this.state.isOpen || this.state.isAnimateOpen)\n    ) {\n      this.animateClose();\n      if (this.props.backButtonClose && Platform.OS === 'android')\n        BackHandler.removeEventListener('hardwareBackPress', this.onBackPress);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}