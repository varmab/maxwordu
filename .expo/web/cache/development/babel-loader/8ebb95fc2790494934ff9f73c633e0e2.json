{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useCallback, useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useOnEvent, useOnMount } from \"./internal/asyncHookWrappers\";\nimport devicesWithNotch from \"./internal/devicesWithNotch\";\nimport RNDeviceInfo from \"./internal/nativeInterface\";\nimport { getSupportedPlatformInfoAsync, getSupportedPlatformInfoFunctions, getSupportedPlatformInfoSync } from \"./internal/supported-platform-info\";\nexport var getUniqueId = function getUniqueId() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'uniqueId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.uniqueId;\n    }\n  });\n};\nvar uniqueId;\nexport function syncUniqueId() {\n  return _regeneratorRuntime.async(function syncUniqueId$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(RNDeviceInfo.syncUniqueId());\n\n        case 3:\n          uniqueId = _context.sent;\n          _context.next = 7;\n          break;\n\n        case 6:\n          uniqueId = getUniqueId();\n\n        case 7:\n          return _context.abrupt(\"return\", uniqueId);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar _getSupportedPlatform = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getInstanceId();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getInstanceIdSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform2 = _slicedToArray(_getSupportedPlatform, 2),\n    getInstanceId = _getSupportedPlatform2[0],\n    getInstanceIdSync = _getSupportedPlatform2[1];\n\nexport { getInstanceId, getInstanceIdSync };\n\nvar _getSupportedPlatform3 = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getSerialNumber();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSerialNumberSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform4 = _slicedToArray(_getSupportedPlatform3, 2),\n    getSerialNumber = _getSupportedPlatform4[0],\n    getSerialNumberSync = _getSupportedPlatform4[1];\n\nexport { getSerialNumber, getSerialNumberSync };\n\nvar _getSupportedPlatform5 = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getAndroidId();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getAndroidIdSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform6 = _slicedToArray(_getSupportedPlatform5, 2),\n    getAndroidId = _getSupportedPlatform6[0],\n    getAndroidIdSync = _getSupportedPlatform6[1];\n\nexport { getAndroidId, getAndroidIdSync };\n\nvar _getSupportedPlatform7 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getIpAddress();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getIpAddressSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform8 = _slicedToArray(_getSupportedPlatform7, 2),\n    getIpAddress = _getSupportedPlatform8[0],\n    getIpAddressSync = _getSupportedPlatform8[1];\n\nexport { getIpAddress, getIpAddressSync };\n\nvar _getSupportedPlatform9 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.isCameraPresent();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isCameraPresentSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform10 = _slicedToArray(_getSupportedPlatform9, 2),\n    isCameraPresent = _getSupportedPlatform10[0],\n    isCameraPresentSync = _getSupportedPlatform10[1];\n\nexport { isCameraPresent, isCameraPresentSync };\nexport function getMacAddress() {\n  return _regeneratorRuntime.async(function getMacAddress$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context2.next = 4;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", RNDeviceInfo.getMacAddress());\n\n        case 4:\n          if (!(Platform.OS === 'ios')) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", '02:00:00:00:00:00');\n\n        case 6:\n          return _context2.abrupt(\"return\", 'unknown');\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n\n  return 'unknown';\n}\nexport var getDeviceId = function getDeviceId() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: function getter() {\n      return RNDeviceInfo.deviceId;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\n\nvar _getSupportedPlatform11 = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer();\n  },\n  syncGetter: function syncGetter() {\n    return Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform12 = _slicedToArray(_getSupportedPlatform11, 2),\n    getManufacturer = _getSupportedPlatform12[0],\n    getManufacturerSync = _getSupportedPlatform12[1];\n\nexport { getManufacturer, getManufacturerSync };\nexport var getModel = function getModel() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.model;\n    }\n  });\n};\nexport var getBrand = function getBrand() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.brand;\n    }\n  });\n};\nexport var getSystemName = function getSystemName() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: function getter() {\n      return Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown'\n      });\n    }\n  });\n};\nexport var getSystemVersion = function getSystemVersion() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.systemVersion;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion'\n  });\n};\n\nvar _getSupportedPlatform13 = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getBuildId();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBuildIdSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform14 = _slicedToArray(_getSupportedPlatform13, 2),\n    getBuildId = _getSupportedPlatform14[0],\n    getBuildIdSync = _getSupportedPlatform14[1];\n\nexport { getBuildId, getBuildIdSync };\n\nvar _getSupportedPlatform15 = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getApiLevel();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getApiLevelSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform16 = _slicedToArray(_getSupportedPlatform15, 2),\n    getApiLevel = _getSupportedPlatform16[0],\n    getApiLevelSync = _getSupportedPlatform16[1];\n\nexport { getApiLevel, getApiLevelSync };\nexport var getBundleId = function getBundleId() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.bundleId;\n    }\n  });\n};\n\nvar _getSupportedPlatform17 = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: function getter() {\n    return RNDeviceInfo.getInstallerPackageName();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getInstallerPackageNameSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform18 = _slicedToArray(_getSupportedPlatform17, 2),\n    getInstallerPackageName = _getSupportedPlatform18[0],\n    getInstallerPackageNameSync = _getSupportedPlatform18[1];\n\nexport { getInstallerPackageName, getInstallerPackageNameSync };\nexport var getApplicationName = function getApplicationName() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.appName;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\nexport var getBuildNumber = function getBuildNumber() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.buildNumber;\n    },\n    defaultValue: 'unknown'\n  });\n};\nexport var getVersion = function getVersion() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.appVersion;\n    }\n  });\n};\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nvar _getSupportedPlatform19 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getDeviceName();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getDeviceNameSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform20 = _slicedToArray(_getSupportedPlatform19, 2),\n    getDeviceName = _getSupportedPlatform20[0],\n    getDeviceNameSync = _getSupportedPlatform20[1];\n\nexport { getDeviceName, getDeviceNameSync };\n\nvar _getSupportedPlatform21 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getUsedMemory();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getUsedMemorySync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform22 = _slicedToArray(_getSupportedPlatform21, 2),\n    getUsedMemory = _getSupportedPlatform22[0],\n    getUsedMemorySync = _getSupportedPlatform22[1];\n\nexport { getUsedMemory, getUsedMemorySync };\nexport var getUserAgent = function getUserAgent() {\n  return getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUserAgent();\n    }\n  });\n};\nexport var getUserAgentSync = function getUserAgentSync() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUserAgentSync();\n    }\n  });\n};\n\nvar _getSupportedPlatform23 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getFontScale();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getFontScaleSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform24 = _slicedToArray(_getSupportedPlatform23, 2),\n    getFontScale = _getSupportedPlatform24[0],\n    getFontScaleSync = _getSupportedPlatform24[1];\n\nexport { getFontScale, getFontScaleSync };\n\nvar _getSupportedPlatform25 = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getBootloader();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBootloaderSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform26 = _slicedToArray(_getSupportedPlatform25, 2),\n    getBootloader = _getSupportedPlatform26[0],\n    getBootloaderSync = _getSupportedPlatform26[1];\n\nexport { getBootloader, getBootloaderSync };\n\nvar _getSupportedPlatform27 = getSupportedPlatformInfoFunctions({\n  getter: function getter() {\n    return RNDeviceInfo.getDevice();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getDeviceSync();\n  },\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android']\n}),\n    _getSupportedPlatform28 = _slicedToArray(_getSupportedPlatform27, 2),\n    getDevice = _getSupportedPlatform28[0],\n    getDeviceSync = _getSupportedPlatform28[1];\n\nexport { getDevice, getDeviceSync };\n\nvar _getSupportedPlatform29 = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getDisplay();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getDisplaySync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform30 = _slicedToArray(_getSupportedPlatform29, 2),\n    getDisplay = _getSupportedPlatform30[0],\n    getDisplaySync = _getSupportedPlatform30[1];\n\nexport { getDisplay, getDisplaySync };\n\nvar _getSupportedPlatform31 = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getFingerprint();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getFingerprintSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform32 = _slicedToArray(_getSupportedPlatform31, 2),\n    getFingerprint = _getSupportedPlatform32[0],\n    getFingerprintSync = _getSupportedPlatform32[1];\n\nexport { getFingerprint, getFingerprintSync };\n\nvar _getSupportedPlatform33 = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getHardware();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getHardwareSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform34 = _slicedToArray(_getSupportedPlatform33, 2),\n    getHardware = _getSupportedPlatform34[0],\n    getHardwareSync = _getSupportedPlatform34[1];\n\nexport { getHardware, getHardwareSync };\n\nvar _getSupportedPlatform35 = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getHost();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getHostSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform36 = _slicedToArray(_getSupportedPlatform35, 2),\n    getHost = _getSupportedPlatform36[0],\n    getHostSync = _getSupportedPlatform36[1];\n\nexport { getHost, getHostSync };\n\nvar _getSupportedPlatform37 = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getProduct();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getProductSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform38 = _slicedToArray(_getSupportedPlatform37, 2),\n    getProduct = _getSupportedPlatform38[0],\n    getProductSync = _getSupportedPlatform38[1];\n\nexport { getProduct, getProductSync };\n\nvar _getSupportedPlatform39 = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getTags();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getTagsSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform40 = _slicedToArray(_getSupportedPlatform39, 2),\n    getTags = _getSupportedPlatform40[0],\n    getTagsSync = _getSupportedPlatform40[1];\n\nexport { getTags, getTagsSync };\n\nvar _getSupportedPlatform41 = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getType();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getTypeSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform42 = _slicedToArray(_getSupportedPlatform41, 2),\n    getType = _getSupportedPlatform42[0],\n    getTypeSync = _getSupportedPlatform42[1];\n\nexport { getType, getTypeSync };\n\nvar _getSupportedPlatform43 = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getBaseOs();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBaseOsSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform44 = _slicedToArray(_getSupportedPlatform43, 2),\n    getBaseOs = _getSupportedPlatform44[0],\n    getBaseOsSync = _getSupportedPlatform44[1];\n\nexport { getBaseOs, getBaseOsSync };\n\nvar _getSupportedPlatform45 = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getPreviewSdkInt();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getPreviewSdkIntSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform46 = _slicedToArray(_getSupportedPlatform45, 2),\n    getPreviewSdkInt = _getSupportedPlatform46[0],\n    getPreviewSdkIntSync = _getSupportedPlatform46[1];\n\nexport { getPreviewSdkInt, getPreviewSdkIntSync };\n\nvar _getSupportedPlatform47 = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getSecurityPatch();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSecurityPatchSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform48 = _slicedToArray(_getSupportedPlatform47, 2),\n    getSecurityPatch = _getSupportedPlatform48[0],\n    getSecurityPatchSync = _getSupportedPlatform48[1];\n\nexport { getSecurityPatch, getSecurityPatchSync };\n\nvar _getSupportedPlatform49 = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getCodename();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getCodenameSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform50 = _slicedToArray(_getSupportedPlatform49, 2),\n    getCodename = _getSupportedPlatform50[0],\n    getCodenameSync = _getSupportedPlatform50[1];\n\nexport { getCodename, getCodenameSync };\n\nvar _getSupportedPlatform51 = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getIncremental();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getIncrementalSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform52 = _slicedToArray(_getSupportedPlatform51, 2),\n    getIncremental = _getSupportedPlatform52[0],\n    getIncrementalSync = _getSupportedPlatform52[1];\n\nexport { getIncremental, getIncrementalSync };\n\nvar _getSupportedPlatform53 = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.isEmulator();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isEmulatorSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform54 = _slicedToArray(_getSupportedPlatform53, 2),\n    isEmulator = _getSupportedPlatform54[0],\n    isEmulatorSync = _getSupportedPlatform54[1];\n\nexport { isEmulator, isEmulatorSync };\nexport var isTablet = function isTablet() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: function getter() {\n      return RNDeviceInfo.isTablet;\n    }\n  });\n};\n\nvar _getSupportedPlatform55 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.isPinOrFingerprintSet();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isPinOrFingerprintSetSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform56 = _slicedToArray(_getSupportedPlatform55, 2),\n    isPinOrFingerprintSet = _getSupportedPlatform56[0],\n    isPinOrFingerprintSetSync = _getSupportedPlatform56[1];\n\nexport { isPinOrFingerprintSet, isPinOrFingerprintSetSync };\nvar notch;\nexport function hasNotch() {\n  if (notch === undefined) {\n    var _brand = getBrand();\n\n    var _model = getModel();\n\n    notch = devicesWithNotch.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n\n  return notch;\n}\n\nvar _getSupportedPlatform57 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.hasGms();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.hasGmsSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform58 = _slicedToArray(_getSupportedPlatform57, 2),\n    hasGms = _getSupportedPlatform58[0],\n    hasGmsSync = _getSupportedPlatform58[1];\n\nexport { hasGms, hasGmsSync };\n\nvar _getSupportedPlatform59 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.hasHms();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.hasHmsSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform60 = _slicedToArray(_getSupportedPlatform59, 2),\n    hasHms = _getSupportedPlatform60[0],\n    hasHmsSync = _getSupportedPlatform60[1];\n\nexport { hasHms, hasHmsSync };\n\nvar _getSupportedPlatform61 = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getFirstInstallTime();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getFirstInstallTimeSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform62 = _slicedToArray(_getSupportedPlatform61, 2),\n    getFirstInstallTime = _getSupportedPlatform62[0],\n    getFirstInstallTimeSync = _getSupportedPlatform62[1];\n\nexport { getFirstInstallTime, getFirstInstallTimeSync };\n\nvar _getSupportedPlatform63 = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getInstallReferrer();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getInstallReferrerSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform64 = _slicedToArray(_getSupportedPlatform63, 2),\n    getInstallReferrer = _getSupportedPlatform64[0],\n    getInstallReferrerSync = _getSupportedPlatform64[1];\n\nexport { getInstallReferrer, getInstallReferrerSync };\n\nvar _getSupportedPlatform65 = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getLastUpdateTime();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getLastUpdateTimeSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform66 = _slicedToArray(_getSupportedPlatform65, 2),\n    getLastUpdateTime = _getSupportedPlatform66[0],\n    getLastUpdateTimeSync = _getSupportedPlatform66[1];\n\nexport { getLastUpdateTime, getLastUpdateTimeSync };\n\nvar _getSupportedPlatform67 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getPhoneNumber();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getPhoneNumberSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform68 = _slicedToArray(_getSupportedPlatform67, 2),\n    getPhoneNumber = _getSupportedPlatform68[0],\n    getPhoneNumberSync = _getSupportedPlatform68[1];\n\nexport { getPhoneNumber, getPhoneNumberSync };\n\nvar _getSupportedPlatform69 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: function getter() {\n    return RNDeviceInfo.getCarrier();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getCarrierSync();\n  },\n  defaultValue: 'unknown'\n}),\n    _getSupportedPlatform70 = _slicedToArray(_getSupportedPlatform69, 2),\n    getCarrier = _getSupportedPlatform70[0],\n    getCarrierSync = _getSupportedPlatform70[1];\n\nexport { getCarrier, getCarrierSync };\n\nvar _getSupportedPlatform71 = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getTotalMemory();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getTotalMemorySync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform72 = _slicedToArray(_getSupportedPlatform71, 2),\n    getTotalMemory = _getSupportedPlatform72[0],\n    getTotalMemorySync = _getSupportedPlatform72[1];\n\nexport { getTotalMemory, getTotalMemorySync };\n\nvar _getSupportedPlatform73 = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getMaxMemory();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getMaxMemorySync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform74 = _slicedToArray(_getSupportedPlatform73, 2),\n    getMaxMemory = _getSupportedPlatform74[0],\n    getMaxMemorySync = _getSupportedPlatform74[1];\n\nexport { getMaxMemory, getMaxMemorySync };\n\nvar _getSupportedPlatform75 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getTotalDiskCapacity();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getTotalDiskCapacitySync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform76 = _slicedToArray(_getSupportedPlatform75, 2),\n    getTotalDiskCapacity = _getSupportedPlatform76[0],\n    getTotalDiskCapacitySync = _getSupportedPlatform76[1];\n\nexport { getTotalDiskCapacity, getTotalDiskCapacitySync };\nexport function getTotalDiskCapacityOld() {\n  return _regeneratorRuntime.async(function getTotalDiskCapacityOld$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context3.next = 2;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", RNDeviceInfo.getTotalDiskCapacityOld());\n\n        case 2:\n          if (!(Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web')) {\n            _context3.next = 4;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", getTotalDiskCapacity());\n\n        case 4:\n          return _context3.abrupt(\"return\", -1);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nvar _getSupportedPlatform77 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getFreeDiskStorage();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getFreeDiskStorageSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform78 = _slicedToArray(_getSupportedPlatform77, 2),\n    getFreeDiskStorage = _getSupportedPlatform78[0],\n    getFreeDiskStorageSync = _getSupportedPlatform78[1];\n\nexport { getFreeDiskStorage, getFreeDiskStorageSync };\nexport function getFreeDiskStorageOld() {\n  return _regeneratorRuntime.async(function getFreeDiskStorageOld$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context4.next = 2;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", RNDeviceInfo.getFreeDiskStorageOld());\n\n        case 2:\n          if (!(Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web')) {\n            _context4.next = 4;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", getFreeDiskStorage());\n\n        case 4:\n          return _context4.abrupt(\"return\", -1);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nvar _getSupportedPlatform79 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getBatteryLevel();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBatteryLevelSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform80 = _slicedToArray(_getSupportedPlatform79, 2),\n    getBatteryLevel = _getSupportedPlatform80[0],\n    getBatteryLevelSync = _getSupportedPlatform80[1];\n\nexport { getBatteryLevel, getBatteryLevelSync };\n\nvar _getSupportedPlatform81 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.getPowerState();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getPowerStateSync();\n  },\n  defaultValue: {}\n}),\n    _getSupportedPlatform82 = _slicedToArray(_getSupportedPlatform81, 2),\n    getPowerState = _getSupportedPlatform82[0],\n    getPowerStateSync = _getSupportedPlatform82[1];\n\nexport { getPowerState, getPowerStateSync };\n\nvar _getSupportedPlatform83 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.isBatteryCharging();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isBatteryChargingSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform84 = _slicedToArray(_getSupportedPlatform83, 2),\n    isBatteryCharging = _getSupportedPlatform84[0],\n    isBatteryChargingSync = _getSupportedPlatform84[1];\n\nexport { isBatteryCharging, isBatteryChargingSync };\nexport function isLandscape() {\n  return _regeneratorRuntime.async(function isLandscape$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", Promise.resolve(isLandscapeSync()));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isLandscapeSync() {\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  return width >= height;\n}\n\nvar _getSupportedPlatform85 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.isAirplaneMode();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isAirplaneModeSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform86 = _slicedToArray(_getSupportedPlatform85, 2),\n    isAirplaneMode = _getSupportedPlatform86[0],\n    isAirplaneModeSync = _getSupportedPlatform86[1];\n\nexport { isAirplaneMode, isAirplaneModeSync };\nexport var getDeviceType = function getDeviceType() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.deviceType;\n    }\n  });\n};\nexport var getDeviceTypeSync = function getDeviceTypeSync() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.deviceType;\n    }\n  });\n};\n\nvar _getSupportedPlatform87 = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: function getter() {\n    return RNDeviceInfo.getSupportedAbis();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSupportedAbisSync();\n  },\n  defaultValue: []\n}),\n    _getSupportedPlatform88 = _slicedToArray(_getSupportedPlatform87, 2),\n    supportedAbis = _getSupportedPlatform88[0],\n    supportedAbisSync = _getSupportedPlatform88[1];\n\nexport { supportedAbis, supportedAbisSync };\n\nvar _getSupportedPlatform89 = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getSupported32BitAbis();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSupported32BitAbisSync();\n  },\n  defaultValue: []\n}),\n    _getSupportedPlatform90 = _slicedToArray(_getSupportedPlatform89, 2),\n    supported32BitAbis = _getSupportedPlatform90[0],\n    supported32BitAbisSync = _getSupportedPlatform90[1];\n\nexport { supported32BitAbis, supported32BitAbisSync };\n\nvar _getSupportedPlatform91 = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getSupported64BitAbis();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSupported64BitAbisSync();\n  },\n  defaultValue: []\n}),\n    _getSupportedPlatform92 = _slicedToArray(_getSupportedPlatform91, 2),\n    supported64BitAbis = _getSupportedPlatform92[0],\n    supported64BitAbisSync = _getSupportedPlatform92[1];\n\nexport { supported64BitAbis, supported64BitAbisSync };\nexport function hasSystemFeature(feature) {\n  return _regeneratorRuntime.async(function hasSystemFeature$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context6.next = 2;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", RNDeviceInfo.hasSystemFeature(feature));\n\n        case 2:\n          return _context6.abrupt(\"return\", false);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function hasSystemFeatureSync(feature) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n\n  return false;\n}\nexport function isLowBatteryLevel(level) {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n\n  return level < 0.2;\n}\n\nvar _getSupportedPlatform93 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: function getter() {\n    return RNDeviceInfo.getSystemAvailableFeatures();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getSystemAvailableFeaturesSync();\n  },\n  defaultValue: []\n}),\n    _getSupportedPlatform94 = _slicedToArray(_getSupportedPlatform93, 2),\n    getSystemAvailableFeatures = _getSupportedPlatform94[0],\n    getSystemAvailableFeaturesSync = _getSupportedPlatform94[1];\n\nexport { getSystemAvailableFeatures, getSystemAvailableFeaturesSync };\n\nvar _getSupportedPlatform95 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: function getter() {\n    return RNDeviceInfo.isLocationEnabled();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isLocationEnabledSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform96 = _slicedToArray(_getSupportedPlatform95, 2),\n    isLocationEnabled = _getSupportedPlatform96[0],\n    isLocationEnabledSync = _getSupportedPlatform96[1];\n\nexport { isLocationEnabled, isLocationEnabledSync };\n\nvar _getSupportedPlatform97 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: function getter() {\n    return RNDeviceInfo.isHeadphonesConnected();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isHeadphonesConnectedSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform98 = _slicedToArray(_getSupportedPlatform97, 2),\n    isHeadphonesConnected = _getSupportedPlatform98[0],\n    isHeadphonesConnectedSync = _getSupportedPlatform98[1];\n\nexport { isHeadphonesConnected, isHeadphonesConnectedSync };\n\nvar _getSupportedPlatform99 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: function getter() {\n    return RNDeviceInfo.isMouseConnected();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isMouseConnectedSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform100 = _slicedToArray(_getSupportedPlatform99, 2),\n    isMouseConnected = _getSupportedPlatform100[0],\n    isMouseConnectedSync = _getSupportedPlatform100[1];\n\nexport { isMouseConnected, isMouseConnectedSync };\n\nvar _getSupportedPlatform101 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: function getter() {\n    return RNDeviceInfo.isKeyboardConnected();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.isKeyboardConnectedSync();\n  },\n  defaultValue: false\n}),\n    _getSupportedPlatform102 = _slicedToArray(_getSupportedPlatform101, 2),\n    isKeyboardConnected = _getSupportedPlatform102[0],\n    isKeyboardConnectedSync = _getSupportedPlatform102[1];\n\nexport { isKeyboardConnected, isKeyboardConnectedSync };\nexport var isTabletMode = function isTabletMode() {\n  return getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isTabletMode();\n    },\n    defaultValue: false\n  });\n};\n\nvar _getSupportedPlatform103 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: function getter() {\n    return RNDeviceInfo.getAvailableLocationProviders();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getAvailableLocationProvidersSync();\n  },\n  defaultValue: {}\n}),\n    _getSupportedPlatform104 = _slicedToArray(_getSupportedPlatform103, 2),\n    getAvailableLocationProviders = _getSupportedPlatform104[0],\n    getAvailableLocationProvidersSync = _getSupportedPlatform104[1];\n\nexport { getAvailableLocationProviders, getAvailableLocationProvidersSync };\n\nvar _getSupportedPlatform105 = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: function getter() {\n    return RNDeviceInfo.getBrightness();\n  },\n  syncGetter: function syncGetter() {\n    return RNDeviceInfo.getBrightnessSync();\n  },\n  defaultValue: -1\n}),\n    _getSupportedPlatform106 = _slicedToArray(_getSupportedPlatform105, 2),\n    getBrightness = _getSupportedPlatform106[0],\n    getBrightnessSync = _getSupportedPlatform106[1];\n\nexport { getBrightness, getBrightnessSync };\nexport function getDeviceToken() {\n  return _regeneratorRuntime.async(function getDeviceToken$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!(Platform.OS === 'ios')) {\n            _context7.next = 2;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", RNDeviceInfo.getDeviceToken());\n\n        case 2:\n          return _context7.abrupt(\"return\", 'unknown');\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      batteryLevel = _useState2[0],\n      setBatteryLevel = _useState2[1];\n\n  useEffect(function () {\n    var setInitialValue = function _callee() {\n      var initialValue;\n      return _regeneratorRuntime.async(function _callee$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(getBatteryLevel());\n\n            case 2:\n              initialValue = _context8.sent;\n              setBatteryLevel(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(level) {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevel;\n}\nexport function useBatteryLevelIsLow() {\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      batteryLevelIsLow = _useState4[0],\n      setBatteryLevelIsLow = _useState4[1];\n\n  useEffect(function () {\n    var setInitialValue = function _callee2() {\n      var initialValue;\n      return _regeneratorRuntime.async(function _callee2$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _regeneratorRuntime.awrap(getBatteryLevel());\n\n            case 2:\n              initialValue = _context9.sent;\n              isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    setInitialValue();\n\n    var onChange = function onChange(level) {\n      setBatteryLevelIsLow(level);\n    };\n\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevelIsLow;\n}\nexport function usePowerState() {\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      powerState = _useState6[0],\n      setPowerState = _useState6[1];\n\n  useEffect(function () {\n    var setInitialValue = function _callee3() {\n      var initialValue;\n      return _regeneratorRuntime.async(function _callee3$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _regeneratorRuntime.awrap(getPowerState());\n\n            case 2:\n              initialValue = _context10.sent;\n              setPowerState(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(state) {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_powerStateDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return powerState;\n}\nexport function useIsHeadphonesConnected() {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\nexport function useFirstInstallTime() {\n  return useOnMount(getFirstInstallTime, -1);\n}\nexport function useDeviceName() {\n  return useOnMount(getDeviceName, 'unknown');\n}\nexport function useHasSystemFeature(feature) {\n  var asyncGetter = useCallback(function () {\n    return hasSystemFeature(feature);\n  }, [feature]);\n  return useOnMount(asyncGetter, false);\n}\nexport function useIsEmulator() {\n  return useOnMount(isEmulator, false);\n}\nexport function useManufacturer() {\n  return useOnMount(getManufacturer, 'unknown');\n}\nexport function useBrightness() {\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      brightness = _useState8[0],\n      setBrightness = _useState8[1];\n\n  useEffect(function () {\n    var setInitialValue = function _callee4() {\n      var initialValue;\n      return _regeneratorRuntime.async(function _callee4$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _regeneratorRuntime.awrap(getBrightness());\n\n            case 2:\n              initialValue = _context11.sent;\n              setBrightness(initialValue);\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var onChange = function onChange(value) {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_brightnessDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return brightness;\n}\nvar deviceInfoModule = {\n  getAndroidId: getAndroidId,\n  getAndroidIdSync: getAndroidIdSync,\n  getApiLevel: getApiLevel,\n  getApiLevelSync: getApiLevelSync,\n  getApplicationName: getApplicationName,\n  getAvailableLocationProviders: getAvailableLocationProviders,\n  getAvailableLocationProvidersSync: getAvailableLocationProvidersSync,\n  getBaseOs: getBaseOs,\n  getBaseOsSync: getBaseOsSync,\n  getBatteryLevel: getBatteryLevel,\n  getBatteryLevelSync: getBatteryLevelSync,\n  getBootloader: getBootloader,\n  getBootloaderSync: getBootloaderSync,\n  getBrand: getBrand,\n  getBuildId: getBuildId,\n  getBuildIdSync: getBuildIdSync,\n  getBuildNumber: getBuildNumber,\n  getBundleId: getBundleId,\n  getCarrier: getCarrier,\n  getCarrierSync: getCarrierSync,\n  getCodename: getCodename,\n  getCodenameSync: getCodenameSync,\n  getDevice: getDevice,\n  getDeviceId: getDeviceId,\n  getDeviceName: getDeviceName,\n  getDeviceNameSync: getDeviceNameSync,\n  getDeviceSync: getDeviceSync,\n  getDeviceToken: getDeviceToken,\n  getDeviceType: getDeviceType,\n  getDisplay: getDisplay,\n  getDisplaySync: getDisplaySync,\n  getFingerprint: getFingerprint,\n  getFingerprintSync: getFingerprintSync,\n  getFirstInstallTime: getFirstInstallTime,\n  getFirstInstallTimeSync: getFirstInstallTimeSync,\n  getFontScale: getFontScale,\n  getFontScaleSync: getFontScaleSync,\n  getFreeDiskStorage: getFreeDiskStorage,\n  getFreeDiskStorageOld: getFreeDiskStorageOld,\n  getFreeDiskStorageSync: getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync: getFreeDiskStorageOldSync,\n  getHardware: getHardware,\n  getHardwareSync: getHardwareSync,\n  getHost: getHost,\n  getHostSync: getHostSync,\n  getIncremental: getIncremental,\n  getIncrementalSync: getIncrementalSync,\n  getInstallerPackageName: getInstallerPackageName,\n  getInstallerPackageNameSync: getInstallerPackageNameSync,\n  getInstallReferrer: getInstallReferrer,\n  getInstallReferrerSync: getInstallReferrerSync,\n  getInstanceId: getInstanceId,\n  getInstanceIdSync: getInstanceIdSync,\n  getIpAddress: getIpAddress,\n  getIpAddressSync: getIpAddressSync,\n  getLastUpdateTime: getLastUpdateTime,\n  getLastUpdateTimeSync: getLastUpdateTimeSync,\n  getMacAddress: getMacAddress,\n  getMacAddressSync: getMacAddressSync,\n  getManufacturer: getManufacturer,\n  getManufacturerSync: getManufacturerSync,\n  getMaxMemory: getMaxMemory,\n  getMaxMemorySync: getMaxMemorySync,\n  getModel: getModel,\n  getPhoneNumber: getPhoneNumber,\n  getPhoneNumberSync: getPhoneNumberSync,\n  getPowerState: getPowerState,\n  getPowerStateSync: getPowerStateSync,\n  getPreviewSdkInt: getPreviewSdkInt,\n  getPreviewSdkIntSync: getPreviewSdkIntSync,\n  getProduct: getProduct,\n  getProductSync: getProductSync,\n  getReadableVersion: getReadableVersion,\n  getSecurityPatch: getSecurityPatch,\n  getSecurityPatchSync: getSecurityPatchSync,\n  getSerialNumber: getSerialNumber,\n  getSerialNumberSync: getSerialNumberSync,\n  getSystemAvailableFeatures: getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync: getSystemAvailableFeaturesSync,\n  getSystemName: getSystemName,\n  getSystemVersion: getSystemVersion,\n  getTags: getTags,\n  getTagsSync: getTagsSync,\n  getTotalDiskCapacity: getTotalDiskCapacity,\n  getTotalDiskCapacityOld: getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync: getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync: getTotalDiskCapacityOldSync,\n  getTotalMemory: getTotalMemory,\n  getTotalMemorySync: getTotalMemorySync,\n  getType: getType,\n  getTypeSync: getTypeSync,\n  getUniqueId: getUniqueId,\n  getUsedMemory: getUsedMemory,\n  getUsedMemorySync: getUsedMemorySync,\n  getUserAgent: getUserAgent,\n  getUserAgentSync: getUserAgentSync,\n  getVersion: getVersion,\n  getBrightness: getBrightness,\n  getBrightnessSync: getBrightnessSync,\n  hasGms: hasGms,\n  hasGmsSync: hasGmsSync,\n  hasHms: hasHms,\n  hasHmsSync: hasHmsSync,\n  hasNotch: hasNotch,\n  hasSystemFeature: hasSystemFeature,\n  hasSystemFeatureSync: hasSystemFeatureSync,\n  isAirplaneMode: isAirplaneMode,\n  isAirplaneModeSync: isAirplaneModeSync,\n  isBatteryCharging: isBatteryCharging,\n  isBatteryChargingSync: isBatteryChargingSync,\n  isCameraPresent: isCameraPresent,\n  isCameraPresentSync: isCameraPresentSync,\n  isEmulator: isEmulator,\n  isEmulatorSync: isEmulatorSync,\n  isHeadphonesConnected: isHeadphonesConnected,\n  isHeadphonesConnectedSync: isHeadphonesConnectedSync,\n  isLandscape: isLandscape,\n  isLandscapeSync: isLandscapeSync,\n  isLocationEnabled: isLocationEnabled,\n  isLocationEnabledSync: isLocationEnabledSync,\n  isPinOrFingerprintSet: isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync: isPinOrFingerprintSetSync,\n  isMouseConnected: isMouseConnected,\n  isMouseConnectedSync: isMouseConnectedSync,\n  isKeyboardConnected: isKeyboardConnected,\n  isKeyboardConnectedSync: isKeyboardConnectedSync,\n  isTabletMode: isTabletMode,\n  isTablet: isTablet,\n  supported32BitAbis: supported32BitAbis,\n  supported32BitAbisSync: supported32BitAbisSync,\n  supported64BitAbis: supported64BitAbis,\n  supported64BitAbisSync: supported64BitAbisSync,\n  supportedAbis: supportedAbis,\n  supportedAbisSync: supportedAbisSync,\n  syncUniqueId: syncUniqueId,\n  useBatteryLevel: useBatteryLevel,\n  useBatteryLevelIsLow: useBatteryLevelIsLow,\n  useDeviceName: useDeviceName,\n  useFirstInstallTime: useFirstInstallTime,\n  useHasSystemFeature: useHasSystemFeature,\n  useIsEmulator: useIsEmulator,\n  usePowerState: usePowerState,\n  useManufacturer: useManufacturer,\n  useIsHeadphonesConnected: useIsHeadphonesConnected,\n  useBrightness: useBrightness\n};\nexport default deviceInfoModule;","map":{"version":3,"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;;;;;AAEA,SAASC,UAAT,EAAqBC,UAArB;AACA,OAAOC,gBAAP;AACA,OAAOC,YAAP;AACA,SACEC,6BADF,EAEEC,iCAFF,EAGEC,4BAHF;AAaA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;EAAA,OACzBD,4BAA4B,CAAC;IAC3BE,YAAY,EAAE,SADa;IAE3BC,OAAO,EAAE,UAFkB;IAG3BC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAHO;IAI3BC,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACS,QAAnB;IAAA;EAJmB,CAAD,CADH;AAAA,CAApB;AAQP,IAAIA,QAAJ;AACA,OAAO,SAAeC,YAAf;EAAA;IAAA;MAAA;QAAA;UAAA,MACDC,QAAQ,CAACC,EAATD,KAAgB,KADf;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAEcX,YAAY,CAACU,YAAbV,EAFd;;QAAA;UAEHS,QAFG;UAAA;UAAA;;QAAA;UAIHA,QAAQ,GAAGL,WAAW,EAAtBK;;QAJG;UAAA,iCAMEA,QANF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AASA,4BAA2CP,iCAAiC,CAAC;EAClFI,OAAO,EAAE,YADyE;EAElFC,kBAAkB,EAAE,CAAC,SAAD,CAF8D;EAGlFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACa,aAAbb,EAAN;EAAA,CAH0E;EAIlFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACe,iBAAbf,EAAN;EAAA,CAJsE;EAKlFK,YAAY,EAAE;AALoE,CAAD,CAA5E;AAAA;AAAA,IAAOQ,aAAP;AAAA,IAAsBE,iBAAtB;;;;AAQA,6BAA+Cb,iCAAiC,CAAC;EACtFI,OAAO,EAAE,cAD6E;EAEtFC,kBAAkB,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFkE;EAGtFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACgB,eAAbhB,EAAN;EAAA,CAH8E;EAItFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACiB,mBAAbjB,EAAN;EAAA,CAJ0E;EAKtFK,YAAY,EAAE;AALwE,CAAD,CAAhF;AAAA;AAAA,IAAOW,eAAP;AAAA,IAAwBC,mBAAxB;;;;AAQA,6BAAyCf,iCAAiC,CAAC;EAChFI,OAAO,EAAE,WADuE;EAEhFC,kBAAkB,EAAE,CAAC,SAAD,CAF4D;EAGhFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACkB,YAAblB,EAAN;EAAA,CAHwE;EAIhFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACmB,gBAAbnB,EAAN;EAAA,CAJoE;EAKhFK,YAAY,EAAE;AALkE,CAAD,CAA1E;AAAA;AAAA,IAAOa,YAAP;AAAA,IAAqBC,gBAArB;;;;AAQA,6BAAyCjB,iCAAiC,CAAC;EAChFK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAD4D;EAEhFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACoB,YAAbpB,EAAN;EAAA,CAFwE;EAGhFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACqB,gBAAbrB,EAAN;EAAA,CAHoE;EAIhFK,YAAY,EAAE;AAJkE,CAAD,CAA1E;AAAA;AAAA,IAAOe,YAAP;AAAA,IAAqBC,gBAArB;;;;AAOA,6BAA+CnB,iCAAiC,CAAC;EACtFK,kBAAkB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,KAAvB,CADkE;EAEtFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACsB,eAAbtB,EAAN;EAAA,CAF8E;EAGtFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACuB,mBAAbvB,EAAN;EAAA,CAH0E;EAItFK,YAAY,EAAE;AAJwE,CAAD,CAAhF;AAAA;AAAA,IAAOiB,eAAP;AAAA,IAAwBC,mBAAxB;;;AAOP,OAAO,SAAeC,aAAf;EAAA;IAAA;MAAA;QAAA;UAAA,MACDb,QAAQ,CAACC,EAATD,KAAgB,SADf;YAAA;YAAA;UAAA;;UAAA,kCAEIX,YAAY,CAACwB,aAAbxB,EAFJ;;QAAA;UAAA,MAGMW,QAAQ,CAACC,EAATD,KAAgB,KAHtB;YAAA;YAAA;UAAA;;UAAA,kCAII,mBAJJ;;QAAA;UAAA,kCAME,SANF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AASP,OAAO,SAASc,iBAAT,GAA6B;EAClC,IAAId,QAAQ,CAACC,EAATD,KAAgB,SAApB,EAA+B;IAC7B,OAAOX,YAAY,CAACyB,iBAAbzB,EAAP;EADF,OAEO,IAAIW,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;IAChC,OAAO,mBAAP;EACD;;EACD,OAAO,SAAP;AACD;AAED,OAAO,IAAMe,WAAW,GAAG,SAAdA,WAAc;EAAA,OACzBvB,4BAA4B,CAAC;IAC3BE,YAAY,EAAE,SADa;IAE3BC,OAAO,EAAE,UAFkB;IAG3BE,MAAM,EAAE;MAAA,OAAMR,YAAY,CAAC2B,QAAnB;IAAA,CAHmB;IAI3BpB,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB;EAJO,CAAD,CADH;AAAA,CAApB;;AAQA,8BAA+CL,iCAAiC,CAAC;EACtFI,OAAO,EAAE,cAD6E;EAEtFC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFkE;EAGtFC,MAAM,EAAE;IAAA,OACNG,QAAQ,CAACC,EAATD,IAAe,KAAfA,GAAuBiB,OAAO,CAACC,OAARD,CAAgB,OAAhBA,CAAvBjB,GAAkDX,YAAY,CAAC8B,qBAAb9B,EAD5C;EAAA,CAH8E;EAKtFc,UAAU,EAAE;IAAA,OAAOH,QAAQ,CAACC,EAATD,IAAe,KAAfA,GAAuB,OAAvBA,GAAiCX,YAAY,CAAC+B,yBAAb/B,EAAxC;EAAA,CAL0E;EAMtFK,YAAY,EAAE;AANwE,CAAD,CAAhF;AAAA;AAAA,IAAO2B,eAAP;AAAA,IAAwBC,mBAAxB;;;AASP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;EAAA,OACtB/B,4BAA4B,CAAC;IAC3BG,OAAO,EAAE,OADkB;IAE3BD,YAAY,EAAE,SAFa;IAG3BE,kBAAkB,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,SAAnB,CAHO;IAI3BC,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACmC,KAAnB;IAAA;EAJmB,CAAD,CADN;AAAA,CAAjB;AAQP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;EAAA,OACtBjC,4BAA4B,CAAC;IAC3BG,OAAO,EAAE,OADkB;IAE3BC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFO;IAG3BF,YAAY,EAAE,SAHa;IAI3BG,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACqC,KAAnB;IAAA;EAJmB,CAAD,CADN;AAAA,CAAjB;AAQP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;EAAA,OAC3BnC,4BAA4B,CAAC;IAC3BE,YAAY,EAAE,SADa;IAE3BE,kBAAkB,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,SAAnB,CAFO;IAG3BD,OAAO,EAAE,YAHkB;IAI3BE,MAAM,EAAE;MAAA,OACNG,QAAQ,CAAC4B,MAAT5B,CAAgB;QACd6B,GAAG,EAAExC,YAAY,CAACyC,UADJ;QAEdC,OAAO,EAAE,SAFK;QAGdC,OAAO,EAAE,SAHK;QAIdC,OAAO,EAAE;MAJK,CAAhBjC,CADM;IAAA;EAJmB,CAAD,CADD;AAAA,CAAtB;AAcP,OAAO,IAAMkC,gBAAgB,GAAG,SAAnBA,gBAAmB;EAAA,OAC9B1C,4BAA4B,CAAC;IAC3BE,YAAY,EAAE,SADa;IAE3BG,MAAM,EAAE;MAAA,OAAMR,YAAY,CAAC8C,aAAnB;IAAA,CAFmB;IAG3BvC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAHO;IAI3BD,OAAO,EAAE;EAJkB,CAAD,CADE;AAAA,CAAzB;;AAQA,8BAAqCJ,iCAAiC,CAAC;EAC5EI,OAAO,EAAE,SADmE;EAE5EC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFwD;EAG5EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC+C,UAAb/C,EAAN;EAAA,CAHoE;EAI5Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACgD,cAAbhD,EAAN;EAAA,CAJgE;EAK5EK,YAAY,EAAE;AAL8D,CAAD,CAAtE;AAAA;AAAA,IAAO0C,UAAP;AAAA,IAAmBC,cAAnB;;;;AAQA,8BAAuC9C,iCAAiC,CAAC;EAC9EI,OAAO,EAAE,UADqE;EAE9EC,kBAAkB,EAAE,CAAC,SAAD,CAF0D;EAG9EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACiD,WAAbjD,EAAN;EAAA,CAHsE;EAI9Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACkD,eAAblD,EAAN;EAAA,CAJkE;EAK9EK,YAAY,EAAE,CAAC;AAL+D,CAAD,CAAxE;AAAA;AAAA,IAAO4C,WAAP;AAAA,IAAoBC,eAApB;;;AAQP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;EAAA,OACzBhD,4BAA4B,CAAC;IAC3BG,OAAO,EAAE,UADkB;IAE3BC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFO;IAG3BF,YAAY,EAAE,SAHa;IAI3BG,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACoD,QAAnB;IAAA;EAJmB,CAAD,CADH;AAAA,CAApB;;AAQA,8BAGHlD,iCAAiC,CAAC;EACpCI,OAAO,EAAE,sBAD2B;EAEpCC,kBAAkB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,KAAvB,CAFgB;EAGpCC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACqD,uBAAbrD,EAAN;EAAA,CAH4B;EAIpCc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACsD,2BAAbtD,EAAN;EAAA,CAJwB;EAKpCK,YAAY,EAAE;AALsB,CAAD,CAH9B;AAAA;AAAA,IACLgD,uBADK;AAAA,IAELC,2BAFK;;;AAWP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;EAAA,OAChCpD,4BAA4B,CAAC;IAC3BG,OAAO,EAAE,SADkB;IAE3BD,YAAY,EAAE,SAFa;IAG3BG,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACwD,OAAnB;IAAA,CAHmB;IAI3BjD,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB;EAJO,CAAD,CADI;AAAA,CAA3B;AAQP,OAAO,IAAMkD,cAAc,GAAG,SAAjBA,cAAiB;EAAA,OAC5BtD,4BAA4B,CAAC;IAC3BG,OAAO,EAAE,aADkB;IAE3BC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFO;IAG3BC,MAAM,EAAE;MAAA,OAAMR,YAAY,CAAC0D,WAAnB;IAAA,CAHmB;IAI3BrD,YAAY,EAAE;EAJa,CAAD,CADA;AAAA,CAAvB;AAQP,OAAO,IAAMsD,UAAU,GAAG,SAAbA,UAAa;EAAA,OACxBxD,4BAA4B,CAAC;IAC3BG,OAAO,EAAE,SADkB;IAE3BD,YAAY,EAAE,SAFa;IAG3BE,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAHO;IAI3BC,MAAM,EAAE;MAAA,OAAMR,YAAY,CAAC4D,UAAnB;IAAA;EAJmB,CAAD,CADJ;AAAA,CAAnB;AAQP,OAAO,SAASC,kBAAT,GAA8B;EACnC,OAAOF,UAAU,KAAK,GAAfA,GAAqBF,cAAc,EAA1C;AACD;;AAEM,8BAA2CvD,iCAAiC,CAAC;EAClFK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAD8D;EAElFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC8D,aAAb9D,EAAN;EAAA,CAF0E;EAGlFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC+D,iBAAb/D,EAAN;EAAA,CAHsE;EAIlFK,YAAY,EAAE;AAJoE,CAAD,CAA5E;AAAA;AAAA,IAAOyD,aAAP;AAAA,IAAsBC,iBAAtB;;;;AAOA,8BAA2C7D,iCAAiC,CAAC;EAClFK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,EAA8B,KAA9B,CAD8D;EAElFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACgE,aAAbhE,EAAN;EAAA,CAF0E;EAGlFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACiE,iBAAbjE,EAAN;EAAA,CAHsE;EAIlFK,YAAY,EAAE,CAAC;AAJmE,CAAD,CAA5E;AAAA;AAAA,IAAO2D,aAAP;AAAA,IAAsBC,iBAAtB;;;AAOP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;EAAA,OAC1BjE,6BAA6B,CAAC;IAC5BK,OAAO,EAAE,WADmB;IAE5BD,YAAY,EAAE,SAFc;IAG5BE,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,KAAnB,CAHQ;IAI5BC,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACkE,YAAblE,EAAN;IAAA;EAJoB,CAAD,CADH;AAAA,CAArB;AAQP,OAAO,IAAMmE,gBAAgB,GAAG,SAAnBA,gBAAmB;EAAA,OAC9BhE,4BAA4B,CAAC;IAC3BG,OAAO,EAAE,WADkB;IAE3BD,YAAY,EAAE,SAFa;IAG3BE,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,CAHO;IAI3BC,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACmE,gBAAbnE,EAAN;IAAA;EAJmB,CAAD,CADE;AAAA,CAAzB;;AAQA,8BAAyCE,iCAAiC,CAAC;EAChFK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAD4D;EAEhFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACoE,YAAbpE,EAAN;EAAA,CAFwE;EAGhFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACqE,gBAAbrE,EAAN;EAAA,CAHoE;EAIhFK,YAAY,EAAE,CAAC;AAJiE,CAAD,CAA1E;AAAA;AAAA,IAAO+D,YAAP;AAAA,IAAqBC,gBAArB;;;;AAOA,8BAA2CnE,iCAAiC,CAAC;EAClFI,OAAO,EAAE,YADyE;EAElFC,kBAAkB,EAAE,CAAC,SAAD,CAF8D;EAGlFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACsE,aAAbtE,EAAN;EAAA,CAH0E;EAIlFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACuE,iBAAbvE,EAAN;EAAA,CAJsE;EAKlFK,YAAY,EAAE;AALoE,CAAD,CAA5E;AAAA;AAAA,IAAOiE,aAAP;AAAA,IAAsBC,iBAAtB;;;;AAQA,8BAAmCrE,iCAAiC,CAAC;EAC1EM,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACwE,SAAbxE,EAAN;EAAA,CADkE;EAE1Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACyE,aAAbzE,EAAN;EAAA,CAF8D;EAG1EK,YAAY,EAAE,SAH4D;EAI1EC,OAAO,EAAE,QAJiE;EAK1EC,kBAAkB,EAAE,CAAC,SAAD;AALsD,CAAD,CAApE;AAAA;AAAA,IAAOiE,SAAP;AAAA,IAAkBC,aAAlB;;;;AAQA,8BAAqCvE,iCAAiC,CAAC;EAC5EI,OAAO,EAAE,SADmE;EAE5EC,kBAAkB,EAAE,CAAC,SAAD,CAFwD;EAG5EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC0E,UAAb1E,EAAN;EAAA,CAHoE;EAI5Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC2E,cAAb3E,EAAN;EAAA,CAJgE;EAK5EK,YAAY,EAAE;AAL8D,CAAD,CAAtE;AAAA;AAAA,IAAOqE,UAAP;AAAA,IAAmBC,cAAnB;;;;AAQA,8BAA6CzE,iCAAiC,CAAC;EACpFI,OAAO,EAAE,aAD2E;EAEpFC,kBAAkB,EAAE,CAAC,SAAD,CAFgE;EAGpFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC4E,cAAb5E,EAAN;EAAA,CAH4E;EAIpFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC6E,kBAAb7E,EAAN;EAAA,CAJwE;EAKpFK,YAAY,EAAE;AALsE,CAAD,CAA9E;AAAA;AAAA,IAAOuE,cAAP;AAAA,IAAuBC,kBAAvB;;;;AAQA,8BAAuC3E,iCAAiC,CAAC;EAC9EI,OAAO,EAAE,UADqE;EAE9EC,kBAAkB,EAAE,CAAC,SAAD,CAF0D;EAG9EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC8E,WAAb9E,EAAN;EAAA,CAHsE;EAI9Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC+E,eAAb/E,EAAN;EAAA,CAJkE;EAK9EK,YAAY,EAAE;AALgE,CAAD,CAAxE;AAAA;AAAA,IAAOyE,WAAP;AAAA,IAAoBC,eAApB;;;;AAQA,8BAA+B7E,iCAAiC,CAAC;EACtEI,OAAO,EAAE,MAD6D;EAEtEC,kBAAkB,EAAE,CAAC,SAAD,CAFkD;EAGtEC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACgF,OAAbhF,EAAN;EAAA,CAH8D;EAItEc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACiF,WAAbjF,EAAN;EAAA,CAJ0D;EAKtEK,YAAY,EAAE;AALwD,CAAD,CAAhE;AAAA;AAAA,IAAO2E,OAAP;AAAA,IAAgBC,WAAhB;;;;AAQA,8BAAqC/E,iCAAiC,CAAC;EAC5EI,OAAO,EAAE,SADmE;EAE5EC,kBAAkB,EAAE,CAAC,SAAD,CAFwD;EAG5EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACkF,UAAblF,EAAN;EAAA,CAHoE;EAI5Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACmF,cAAbnF,EAAN;EAAA,CAJgE;EAK5EK,YAAY,EAAE;AAL8D,CAAD,CAAtE;AAAA;AAAA,IAAO6E,UAAP;AAAA,IAAmBC,cAAnB;;;;AAQA,8BAA+BjF,iCAAiC,CAAC;EACtEI,OAAO,EAAE,MAD6D;EAEtEC,kBAAkB,EAAE,CAAC,SAAD,CAFkD;EAGtEC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACoF,OAAbpF,EAAN;EAAA,CAH8D;EAItEc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACqF,WAAbrF,EAAN;EAAA,CAJ0D;EAKtEK,YAAY,EAAE;AALwD,CAAD,CAAhE;AAAA;AAAA,IAAO+E,OAAP;AAAA,IAAgBC,WAAhB;;;;AAQA,8BAA+BnF,iCAAiC,CAAC;EACtEI,OAAO,EAAE,MAD6D;EAEtEC,kBAAkB,EAAE,CAAC,SAAD,CAFkD;EAGtEC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACsF,OAAbtF,EAAN;EAAA,CAH8D;EAItEc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACuF,WAAbvF,EAAN;EAAA,CAJ0D;EAKtEK,YAAY,EAAE;AALwD,CAAD,CAAhE;AAAA;AAAA,IAAOiF,OAAP;AAAA,IAAgBC,WAAhB;;;;AAQA,8BAAmCrF,iCAAiC,CAAC;EAC1EI,OAAO,EAAE,QADiE;EAE1EC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFsD;EAG1EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACwF,SAAbxF,EAAN;EAAA,CAHkE;EAI1Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACyF,aAAbzF,EAAN;EAAA,CAJ8D;EAK1EK,YAAY,EAAE;AAL4D,CAAD,CAApE;AAAA;AAAA,IAAOmF,SAAP;AAAA,IAAkBC,aAAlB;;;;AAQA,8BAAiDvF,iCAAiC,CAAC;EACxFI,OAAO,EAAE,eAD+E;EAExFC,kBAAkB,EAAE,CAAC,SAAD,CAFoE;EAGxFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC0F,gBAAb1F,EAAN;EAAA,CAHgF;EAIxFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC2F,oBAAb3F,EAAN;EAAA,CAJ4E;EAKxFK,YAAY,EAAE,CAAC;AALyE,CAAD,CAAlF;AAAA;AAAA,IAAOqF,gBAAP;AAAA,IAAyBC,oBAAzB;;;;AAQA,8BAAiDzF,iCAAiC,CAAC;EACxFI,OAAO,EAAE,eAD+E;EAExFC,kBAAkB,EAAE,CAAC,SAAD,CAFoE;EAGxFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC4F,gBAAb5F,EAAN;EAAA,CAHgF;EAIxFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC6F,oBAAb7F,EAAN;EAAA,CAJ4E;EAKxFK,YAAY,EAAE;AAL0E,CAAD,CAAlF;AAAA;AAAA,IAAOuF,gBAAP;AAAA,IAAyBC,oBAAzB;;;;AAQA,8BAAuC3F,iCAAiC,CAAC;EAC9EI,OAAO,EAAE,UADqE;EAE9EC,kBAAkB,EAAE,CAAC,SAAD,CAF0D;EAG9EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC8F,WAAb9F,EAAN;EAAA,CAHsE;EAI9Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC+F,eAAb/F,EAAN;EAAA,CAJkE;EAK9EK,YAAY,EAAE;AALgE,CAAD,CAAxE;AAAA;AAAA,IAAOyF,WAAP;AAAA,IAAoBC,eAApB;;;;AAQA,8BAA6C7F,iCAAiC,CAAC;EACpFI,OAAO,EAAE,aAD2E;EAEpFC,kBAAkB,EAAE,CAAC,SAAD,CAFgE;EAGpFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACgG,cAAbhG,EAAN;EAAA,CAH4E;EAIpFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACiG,kBAAbjG,EAAN;EAAA,CAJwE;EAKpFK,YAAY,EAAE;AALsE,CAAD,CAA9E;AAAA;AAAA,IAAO2F,cAAP;AAAA,IAAuBC,kBAAvB;;;;AAQA,8BAAqC/F,iCAAiC,CAAC;EAC5EI,OAAO,EAAE,UADmE;EAE5EC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFwD;EAG5EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACkG,UAAblG,EAAN;EAAA,CAHoE;EAI5Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACmG,cAAbnG,EAAN;EAAA,CAJgE;EAK5EK,YAAY,EAAE;AAL8D,CAAD,CAAtE;AAAA;AAAA,IAAO6F,UAAP;AAAA,IAAmBC,cAAnB;;;AAQP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;EAAA,OACtBjG,4BAA4B,CAAC;IAC3BE,YAAY,EAAE,KADa;IAE3BE,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFO;IAG3BD,OAAO,EAAE,QAHkB;IAI3BE,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACoG,QAAnB;IAAA;EAJmB,CAAD,CADN;AAAA,CAAjB;;AAQA,8BAA2DlG,iCAAiC,CACjG;EACEK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CADtB;EAEEC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACqG,qBAAbrG,EAAN;EAAA,CAFV;EAGEc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACsG,yBAAbtG,EAAN;EAAA,CAHd;EAIEK,YAAY,EAAE;AAJhB,CADiG,CAA5F;AAAA;AAAA,IAAOgG,qBAAP;AAAA,IAA8BC,yBAA9B;;;AASP,IAAIC,KAAJ;AACA,OAAO,SAASC,QAAT,GAAoB;EACzB,IAAID,KAAK,KAAKE,SAAd,EAAyB;IACvB,IAAIC,MAAM,GAAGtE,QAAQ,EAArB;;IACA,IAAIuE,MAAM,GAAGzE,QAAQ,EAArB;;IACAqE,KAAK,GACHxG,gBAAgB,CAAC6G,SAAjB7G,CACG8G,cAAD;MAAA,OACEA,IAAI,CAACxE,KAALwE,CAAWC,WAAXD,OAA6BH,MAAM,CAACI,WAAPJ,EAA7BG,IACAA,IAAI,CAAC1E,KAAL0E,CAAWC,WAAXD,OAA6BF,MAAM,CAACG,WAAPH,EAF/B;IAAA,CADF5G,MAIM,CAAC,CALTwG;EAMD;;EACD,OAAOA,KAAP;AACD;;AAEM,8BAA6BrG,iCAAiC,CAAC;EACpEK,kBAAkB,EAAE,CAAC,SAAD,CADgD;EAEpEC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC+G,MAAb/G,EAAN;EAAA,CAF4D;EAGpEc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACgH,UAAbhH,EAAN;EAAA,CAHwD;EAIpEK,YAAY,EAAE;AAJsD,CAAD,CAA9D;AAAA;AAAA,IAAO0G,MAAP;AAAA,IAAeC,UAAf;;;;AAOA,8BAA6B9G,iCAAiC,CAAC;EACpEK,kBAAkB,EAAE,CAAC,SAAD,CADgD;EAEpEC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACiH,MAAbjH,EAAN;EAAA,CAF4D;EAGpEc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACkH,UAAblH,EAAN;EAAA,CAHwD;EAIpEK,YAAY,EAAE;AAJsD,CAAD,CAA9D;AAAA;AAAA,IAAO4G,MAAP;AAAA,IAAeC,UAAf;;;;AAOA,8BAAuDhH,iCAAiC,CAAC;EAC9FI,OAAO,EAAE,kBADqF;EAE9FC,kBAAkB,EAAE,CAAC,SAAD,EAAY,SAAZ,CAF0E;EAG9FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACmH,mBAAbnH,EAAN;EAAA,CAHsF;EAI9Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACoH,uBAAbpH,EAAN;EAAA,CAJkF;EAK9FK,YAAY,EAAE,CAAC;AAL+E,CAAD,CAAxF;AAAA;AAAA,IAAO8G,mBAAP;AAAA,IAA4BC,uBAA5B;;;;AAQA,8BAAqDlH,iCAAiC,CAAC;EAC5FI,OAAO,EAAE,iBADmF;EAE5FC,kBAAkB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,KAAvB,CAFwE;EAG5FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACqH,kBAAbrH,EAAN;EAAA,CAHoF;EAI5Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACsH,sBAAbtH,EAAN;EAAA,CAJgF;EAK5FK,YAAY,EAAE;AAL8E,CAAD,CAAtF;AAAA;AAAA,IAAOgH,kBAAP;AAAA,IAA2BC,sBAA3B;;;;AAQA,8BAAmDpH,iCAAiC,CAAC;EAC1FI,OAAO,EAAE,gBADiF;EAE1FC,kBAAkB,EAAE,CAAC,SAAD,CAFsE;EAG1FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACuH,iBAAbvH,EAAN;EAAA,CAHkF;EAI1Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACwH,qBAAbxH,EAAN;EAAA,CAJ8E;EAK1FK,YAAY,EAAE,CAAC;AAL2E,CAAD,CAApF;AAAA;AAAA,IAAOkH,iBAAP;AAAA,IAA0BC,qBAA1B;;;;AAQA,8BAA6CtH,iCAAiC,CAAC;EACpFK,kBAAkB,EAAE,CAAC,SAAD,CADgE;EAEpFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACyH,cAAbzH,EAAN;EAAA,CAF4E;EAGpFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC0H,kBAAb1H,EAAN;EAAA,CAHwE;EAIpFK,YAAY,EAAE;AAJsE,CAAD,CAA9E;AAAA;AAAA,IAAOoH,cAAP;AAAA,IAAuBC,kBAAvB;;;;AAOA,8BAAqCxH,iCAAiC,CAAC;EAC5EK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,CADwD;EAE5EC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC2H,UAAb3H,EAAN;EAAA,CAFoE;EAG5Ec,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC4H,cAAb5H,EAAN;EAAA,CAHgE;EAI5EK,YAAY,EAAE;AAJ8D,CAAD,CAAtE;AAAA;AAAA,IAAOsH,UAAP;AAAA,IAAmBC,cAAnB;;;;AAOA,8BAA6C1H,iCAAiC,CAAC;EACpFI,OAAO,EAAE,aAD2E;EAEpFC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,EAA8B,KAA9B,CAFgE;EAGpFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC6H,cAAb7H,EAAN;EAAA,CAH4E;EAIpFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC8H,kBAAb9H,EAAN;EAAA,CAJwE;EAKpFK,YAAY,EAAE,CAAC;AALqE,CAAD,CAA9E;AAAA;AAAA,IAAOwH,cAAP;AAAA,IAAuBC,kBAAvB;;;;AAQA,8BAAyC5H,iCAAiC,CAAC;EAChFI,OAAO,EAAE,WADuE;EAEhFC,kBAAkB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,KAAvB,CAF4D;EAGhFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC+H,YAAb/H,EAAN;EAAA,CAHwE;EAIhFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACgI,gBAAbhI,EAAN;EAAA,CAJoE;EAKhFK,YAAY,EAAE,CAAC;AALiE,CAAD,CAA1E;AAAA;AAAA,IAAO0H,YAAP;AAAA,IAAqBC,gBAArB;;;;AAQA,8BAAyD9H,iCAAiC,CAAC;EAChGK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,EAA8B,KAA9B,CAD4E;EAEhGC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACiI,oBAAbjI,EAAN;EAAA,CAFwF;EAGhGc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACkI,wBAAblI,EAAN;EAAA,CAHoF;EAIhGK,YAAY,EAAE,CAAC;AAJiF,CAAD,CAA1F;AAAA;AAAA,IAAO4H,oBAAP;AAAA,IAA6BC,wBAA7B;;;AAOP,OAAO,SAAeC,uBAAf;EAAA;IAAA;MAAA;QAAA;UAAA,MACDxH,QAAQ,CAACC,EAATD,KAAgB,SADf;YAAA;YAAA;UAAA;;UAAA,kCAEIX,YAAY,CAACmI,uBAAbnI,EAFJ;;QAAA;UAAA,MAIDW,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,IAAyBA,QAAQ,CAACC,EAATD,KAAgB,SAAzCA,IAAsDA,QAAQ,CAACC,EAATD,KAAgB,KAJrE;YAAA;YAAA;UAAA;;UAAA,kCAKIsH,oBAAoB,EALxB;;QAAA;UAAA,kCAQE,CAAC,CARH;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAWP,OAAO,SAASG,2BAAT,GAAuC;EAC5C,IAAIzH,QAAQ,CAACC,EAATD,KAAgB,SAApB,EAA+B;IAC7B,OAAOX,YAAY,CAACoI,2BAAbpI,EAAP;EACD;;EACD,IAAIW,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,IAAyBA,QAAQ,CAACC,EAATD,KAAgB,SAAzCA,IAAsDA,QAAQ,CAACC,EAATD,KAAgB,KAA1E,EAAiF;IAC/E,OAAOuH,wBAAwB,EAA/B;EACD;;EAED,OAAO,CAAC,CAAR;AACD;;AAEM,8BAAqDhI,iCAAiC,CAAC;EAC5FK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,EAA8B,KAA9B,CADwE;EAE5FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACqI,kBAAbrI,EAAN;EAAA,CAFoF;EAG5Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACsI,sBAAbtI,EAAN;EAAA,CAHgF;EAI5FK,YAAY,EAAE,CAAC;AAJ6E,CAAD,CAAtF;AAAA;AAAA,IAAOgI,kBAAP;AAAA,IAA2BC,sBAA3B;;;AAOP,OAAO,SAAeC,qBAAf;EAAA;IAAA;MAAA;QAAA;UAAA,MACD5H,QAAQ,CAACC,EAATD,KAAgB,SADf;YAAA;YAAA;UAAA;;UAAA,kCAEIX,YAAY,CAACuI,qBAAbvI,EAFJ;;QAAA;UAAA,MAIDW,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,IAAyBA,QAAQ,CAACC,EAATD,KAAgB,SAAzCA,IAAsDA,QAAQ,CAACC,EAATD,KAAgB,KAJrE;YAAA;YAAA;UAAA;;UAAA,kCAKI0H,kBAAkB,EALtB;;QAAA;UAAA,kCAQE,CAAC,CARH;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAWP,OAAO,SAASG,yBAAT,GAAqC;EAC1C,IAAI7H,QAAQ,CAACC,EAATD,KAAgB,SAApB,EAA+B;IAC7B,OAAOX,YAAY,CAACwI,yBAAbxI,EAAP;EACD;;EACD,IAAIW,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,IAAyBA,QAAQ,CAACC,EAATD,KAAgB,SAAzCA,IAAsDA,QAAQ,CAACC,EAATD,KAAgB,KAA1E,EAAiF;IAC/E,OAAO2H,sBAAsB,EAA7B;EACD;;EAED,OAAO,CAAC,CAAR;AACD;;AAEM,8BAA+CpI,iCAAiC,CAAC;EACtFK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,EAA8B,KAA9B,CADkE;EAEtFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACyI,eAAbzI,EAAN;EAAA,CAF8E;EAGtFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC0I,mBAAb1I,EAAN;EAAA,CAH0E;EAItFK,YAAY,EAAE,CAAC;AAJuE,CAAD,CAAhF;AAAA;AAAA,IAAOoI,eAAP;AAAA,IAAwBC,mBAAxB;;;;AAOA,8BAA2CxI,iCAAiC,CAEjF;EACAK,kBAAkB,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,SAAnB,EAA8B,KAA9B,CADpB;EAEAC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC2I,aAAb3I,EAAN;EAAA,CAFR;EAGAc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC4I,iBAAb5I,EAAN;EAAA,CAHZ;EAIAK,YAAY,EAAE;AAJd,CAFiF,CAA5E;AAAA;AAAA,IAAOsI,aAAP;AAAA,IAAsBC,iBAAtB;;;;AASA,8BAAmD1I,iCAAiC,CAAC;EAC1FK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,EAA8B,KAA9B,CADsE;EAE1FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC6I,iBAAb7I,EAAN;EAAA,CAFkF;EAG1Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC8I,qBAAb9I,EAAN;EAAA,CAH8E;EAI1FK,YAAY,EAAE;AAJ4E,CAAD,CAApF;AAAA;AAAA,IAAOwI,iBAAP;AAAA,IAA0BC,qBAA1B;;;AAOP,OAAO,SAAeC,WAAf;EAAA;IAAA;MAAA;QAAA;UAAA,kCACEnH,OAAO,CAACC,OAARD,CAAgBoH,eAAe,EAA/BpH,CADF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAIP,OAAO,SAASoH,eAAT,GAA2B;EAChC,sBAA0BC,UAAU,CAACC,GAAXD,CAAe,QAAfA,CAA1B;EAAA,IAAQE,MAAR,mBAAQA,MAAR;EAAA,IAAgBC,KAAhB,mBAAgBA,KAAhB;;EACA,OAAOA,KAAK,IAAID,MAAhB;AACD;;AAEM,8BAA6CjJ,iCAAiC,CAAC;EACpFK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,CADgE;EAEpFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACqJ,cAAbrJ,EAAN;EAAA,CAF4E;EAGpFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACsJ,kBAAbtJ,EAAN;EAAA,CAHwE;EAIpFK,YAAY,EAAE;AAJsE,CAAD,CAA9E;AAAA;AAAA,IAAOgJ,cAAP;AAAA,IAAuBC,kBAAvB;;;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EACjC,OAAOpJ,4BAA4B,CAAC;IAClCG,OAAO,EAAE,YADyB;IAElCC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFc;IAGlCF,YAAY,EAAE,SAHoB;IAIlCG,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACwJ,UAAnB;IAAA;EAJ0B,CAAD,CAAnC;AADK;AASP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EACrC,OAAOtJ,4BAA4B,CAAC;IAClCG,OAAO,EAAE,YADyB;IAElCC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAFc;IAGlCF,YAAY,EAAE,SAHoB;IAIlCG,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACwJ,UAAnB;IAAA;EAJ0B,CAAD,CAAnC;AADK;;AASA,8BAA2CtJ,iCAAiC,CAAC;EAClFI,OAAO,EAAE,gBADyE;EAElFC,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,SAAnB,CAF8D;EAGlFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC0J,gBAAb1J,EAAN;EAAA,CAH0E;EAIlFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC2J,oBAAb3J,EAAN;EAAA,CAJsE;EAKlFK,YAAY,EAAE;AALoE,CAAD,CAA5E;AAAA;AAAA,IAAOuJ,aAAP;AAAA,IAAsBC,iBAAtB;;;;AAQA,8BAAqD3J,iCAAiC,CAAC;EAC5FI,OAAO,EAAE,qBADmF;EAE5FC,kBAAkB,EAAE,CAAC,SAAD,CAFwE;EAG5FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC8J,qBAAb9J,EAAN;EAAA,CAHoF;EAI5Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC+J,yBAAb/J,EAAN;EAAA,CAJgF;EAK5FK,YAAY,EAAE;AAL8E,CAAD,CAAtF;AAAA;AAAA,IAAO2J,kBAAP;AAAA,IAA2BC,sBAA3B;;;;AAQA,8BAAqD/J,iCAAiC,CAAC;EAC5FI,OAAO,EAAE,qBADmF;EAE5FC,kBAAkB,EAAE,CAAC,SAAD,CAFwE;EAG5FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACkK,qBAAblK,EAAN;EAAA,CAHoF;EAI5Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACmK,yBAAbnK,EAAN;EAAA,CAJgF;EAK5FK,YAAY,EAAE;AAL8E,CAAD,CAAtF;AAAA;AAAA,IAAO+J,kBAAP;AAAA,IAA2BC,sBAA3B;;;AAQP,OAAO,SAAeC,gBAAf,CAAgCC,OAAhC;EAAA;IAAA;MAAA;QAAA;UAAA,MACD5J,QAAQ,CAACC,EAATD,KAAgB,SADf;YAAA;YAAA;UAAA;;UAAA,kCAEIX,YAAY,CAACsK,gBAAbtK,CAA8BuK,OAA9BvK,CAFJ;;QAAA;UAAA,kCAIE,KAJF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAOP,OAAO,SAASwK,oBAAT,CAA8BD,OAA9B,EAA+C;EACpD,IAAI5J,QAAQ,CAACC,EAATD,KAAgB,SAApB,EAA+B;IAC7B,OAAOX,YAAY,CAACwK,oBAAbxK,CAAkCuK,OAAlCvK,CAAP;EACD;;EACD,OAAO,KAAP;AACD;AAED,OAAO,SAASyK,iBAAT,CAA2BC,KAA3B,EAAmD;EACxD,IAAI/J,QAAQ,CAACC,EAATD,KAAgB,SAApB,EAA+B;IAC7B,OAAO+J,KAAK,GAAG,IAAf;EACD;;EACD,OAAOA,KAAK,GAAG,GAAf;AACD;;AAEM,8BAGHxK,iCAAiC,CAAC;EACpCK,kBAAkB,EAAE,CAAC,SAAD,CADgB;EAEpCC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC2K,0BAAb3K,EAAN;EAAA,CAF4B;EAGpCc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC4K,8BAAb5K,EAAN;EAAA,CAHwB;EAIpCK,YAAY,EAAE;AAJsB,CAAD,CAH9B;AAAA;AAAA,IACLsK,0BADK;AAAA,IAELC,8BAFK;;;;AAUA,8BAAmD1K,iCAAiC,CAAC;EAC1FK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,EAAmB,KAAnB,CADsE;EAE1FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC6K,iBAAb7K,EAAN;EAAA,CAFkF;EAG1Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAAC8K,qBAAb9K,EAAN;EAAA,CAH8E;EAI1FK,YAAY,EAAE;AAJ4E,CAAD,CAApF;AAAA;AAAA,IAAOwK,iBAAP;AAAA,IAA0BC,qBAA1B;;;;AAOA,8BAA2D5K,iCAAiC,CACjG;EACEK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,CADtB;EAEEC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAAC+K,qBAAb/K,EAAN;EAAA,CAFV;EAGEc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACgL,yBAAbhL,EAAN;EAAA,CAHd;EAIEK,YAAY,EAAE;AAJhB,CADiG,CAA5F;AAAA;AAAA,IAAO0K,qBAAP;AAAA,IAA8BC,yBAA9B;;;;AASA,8BAAiD9K,iCAAiC,CAAC;EACxFK,kBAAkB,EAAE,CAAC,SAAD,CADoE;EAExFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACiL,gBAAbjL,EAAN;EAAA,CAFgF;EAGxFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACkL,oBAAblL,EAAN;EAAA,CAH4E;EAIxFK,YAAY,EAAE;AAJ0E,CAAD,CAAlF;AAAA;AAAA,IAAO4K,gBAAP;AAAA,IAAyBC,oBAAzB;;;;AAOA,+BAAuDhL,iCAAiC,CAAC;EAC9FK,kBAAkB,EAAE,CAAC,SAAD,CAD0E;EAE9FC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACmL,mBAAbnL,EAAN;EAAA,CAFsF;EAG9Fc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACoL,uBAAbpL,EAAN;EAAA,CAHkF;EAI9FK,YAAY,EAAE;AAJgF,CAAD,CAAxF;AAAA;AAAA,IAAO8K,mBAAP;AAAA,IAA4BC,uBAA5B;;;AAOP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;EAAA,OAC1BpL,6BAA6B,CAAC;IAC5BM,kBAAkB,EAAE,CAAC,SAAD,CADQ;IAE5BC,MAAM,EAAE;MAAA,OAAMR,YAAY,CAACqL,YAAbrL,EAAN;IAAA,CAFoB;IAG5BK,YAAY,EAAE;EAHc,CAAD,CADH;AAAA,CAArB;;AAOA,+BAGHH,iCAAiC,CAAC;EACpCK,kBAAkB,EAAE,CAAC,SAAD,EAAY,KAAZ,CADgB;EAEpCC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACsL,6BAAbtL,EAAN;EAAA,CAF4B;EAGpCc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACuL,iCAAbvL,EAAN;EAAA,CAHwB;EAIpCK,YAAY,EAAE;AAJsB,CAAD,CAH9B;AAAA;AAAA,IACLiL,6BADK;AAAA,IAELC,iCAFK;;;;AAUA,+BAA2CrL,iCAAiC,CAAC;EAClFK,kBAAkB,EAAE,CAAC,KAAD,CAD8D;EAElFC,MAAM,EAAE;IAAA,OAAMR,YAAY,CAACwL,aAAbxL,EAAN;EAAA,CAF0E;EAGlFc,UAAU,EAAE;IAAA,OAAMd,YAAY,CAACyL,iBAAbzL,EAAN;EAAA,CAHsE;EAIlFK,YAAY,EAAE,CAAC;AAJmE,CAAD,CAA5E;AAAA;AAAA,IAAOmL,aAAP;AAAA,IAAsBC,iBAAtB;;;AAOP,OAAO,SAAeC,cAAf;EAAA;IAAA;MAAA;QAAA;UAAA,MACD/K,QAAQ,CAACC,EAATD,KAAgB,KADf;YAAA;YAAA;UAAA;;UAAA,kCAEIX,YAAY,CAAC0L,cAAb1L,EAFJ;;QAAA;UAAA,kCAIE,SAJF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAOP,IAAM2L,iBAAiB,GAAG,IAAIC,kBAAJ,CAAuBC,aAAa,CAAC7L,YAArC,CAA1B;AACA,OAAO,SAAS8L,eAAT,GAA0C;EAC/C,gBAAwClM,QAAQ,CAAgB,IAAhB,CAAhD;EAAA;EAAA,IAAOmM,YAAP;EAAA,IAAqBC,eAArB;;EAEArM,SAAS,CAAC,YAAM;IACd,IAAMsM,eAAe,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACaxD,eAAe,EAD5B;;YAAA;cAChByD,YADgB;cAEtBF,eAAe,CAACE,YAAD,CAAfF;;YAFsB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAxB;;IAKA,IAAMG,QAAQ,GAAIzB,SAAZyB,QAAYzB,MAAD,EAAmB;MAClCsB,eAAe,CAACtB,KAAD,CAAfsB;IADF;;IAIAC,eAAe;IAEf,IAAMG,YAAY,GAAGT,iBAAiB,CAACU,WAAlBV,CACnB,oCADmBA,EAEnBQ,QAFmBR,CAArB;IAKA,OAAO;MAAA,OAAMS,YAAY,CAACE,MAAbF,EAAN;IAAA,CAAP;EAjBO,GAkBN,EAlBM,CAATzM;EAoBA,OAAOoM,YAAP;AACD;AAED,OAAO,SAASQ,oBAAT,GAA+C;EACpD,iBAAkD3M,QAAQ,CAAgB,IAAhB,CAA1D;EAAA;EAAA,IAAO4M,iBAAP;EAAA,IAA0BC,oBAA1B;;EAEA9M,SAAS,CAAC,YAAM;IACd,IAAMsM,eAAe,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACaxD,eAAe,EAD5B;;YAAA;cAChByD,YADgB;cAEtBzB,iBAAiB,CAACyB,YAAD,CAAjBzB,IAAmCgC,oBAAoB,CAACP,YAAD,CAAvDzB;;YAFsB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAxB;;IAKAwB,eAAe;;IAEf,IAAME,QAAQ,GAAIzB,SAAZyB,QAAYzB,MAAD,EAAmB;MAClC+B,oBAAoB,CAAC/B,KAAD,CAApB+B;IADF;;IAIA,IAAML,YAAY,GAAGT,iBAAiB,CAACU,WAAlBV,CAA8B,gCAA9BA,EAAgEQ,QAAhER,CAArB;IAEA,OAAO;MAAA,OAAMS,YAAY,CAACE,MAAbF,EAAN;IAAA,CAAP;EAdO,GAeN,EAfM,CAATzM;EAiBA,OAAO6M,iBAAP;AACD;AAED,OAAO,SAASE,aAAT,GAA8C;EACnD,iBAAoC9M,QAAQ,CAAsB,EAAtB,CAA5C;EAAA;EAAA,IAAO+M,UAAP;EAAA,IAAmBC,aAAnB;;EAEAjN,SAAS,CAAC,YAAM;IACd,IAAMsM,eAAe,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC0BtD,aAAa,EADvC;;YAAA;cAChBuD,YADgB;cAEtBU,aAAa,CAACV,YAAD,CAAbU;;YAFsB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAxB;;IAKA,IAAMT,QAAQ,GAAIU,SAAZV,QAAYU,MAAD,EAAuB;MACtCD,aAAa,CAACC,KAAD,CAAbD;IADF;;IAIAX,eAAe;IAEf,IAAMG,YAAY,GAAGT,iBAAiB,CAACU,WAAlBV,CACnB,kCADmBA,EAEnBQ,QAFmBR,CAArB;IAKA,OAAO;MAAA,OAAMS,YAAY,CAACE,MAAbF,EAAN;IAAA,CAAP;EAjBO,GAkBN,EAlBM,CAATzM;EAoBA,OAAOgN,UAAP;AACD;AAED,OAAO,SAASG,wBAAT,GAA8D;EACnE,OAAOjN,UAAU,CAAC,2CAAD,EAA8CkL,qBAA9C,EAAqE,KAArE,CAAjB;AACD;AAED,OAAO,SAASgC,mBAAT,GAAwD;EAC7D,OAAOjN,UAAU,CAACqH,mBAAD,EAAsB,CAAC,CAAvB,CAAjB;AACD;AAED,OAAO,SAAS6F,aAAT,GAAkD;EACvD,OAAOlN,UAAU,CAACgE,aAAD,EAAgB,SAAhB,CAAjB;AACD;AAED,OAAO,SAASmJ,mBAAT,CAA6B1C,OAA7B,EAAwE;EAC7E,IAAM2C,WAAW,GAAGxN,WAAW,CAAC;IAAA,OAAM4K,gBAAgB,CAACC,OAAD,CAAtB;EAAA,CAAD,EAAkC,CAACA,OAAD,CAAlC,CAA/B;EACA,OAAOzK,UAAU,CAACoN,WAAD,EAAc,KAAd,CAAjB;AACD;AAED,OAAO,SAASC,aAAT,GAAmD;EACxD,OAAOrN,UAAU,CAACoG,UAAD,EAAa,KAAb,CAAjB;AACD;AAED,OAAO,SAASkH,eAAT,GAAoD;EACzD,OAAOtN,UAAU,CAACkC,eAAD,EAAkB,SAAlB,CAAjB;AACD;AAED,OAAO,SAASqL,aAAT,GAAwC;EAC7C,iBAAoCzN,QAAQ,CAAgB,IAAhB,CAA5C;EAAA;EAAA,IAAO0N,UAAP;EAAA,IAAmBC,aAAnB;;EAEA5N,SAAS,CAAC,YAAM;IACd,IAAMsM,eAAe,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACaT,aAAa,EAD1B;;YAAA;cAChBU,YADgB;cAEtBqB,aAAa,CAACrB,YAAD,CAAbqB;;YAFsB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAxB;;IAKA,IAAMpB,QAAQ,GAAIqB,SAAZrB,QAAYqB,MAAD,EAAmB;MAClCD,aAAa,CAACC,KAAD,CAAbD;IADF;;IAIAtB,eAAe;IAEf,IAAMG,YAAY,GAAGT,iBAAiB,CAACU,WAAlBV,CACnB,kCADmBA,EAEnBQ,QAFmBR,CAArB;IAKA,OAAO;MAAA,OAAMS,YAAY,CAACE,MAAbF,EAAN;IAAA,CAAP;EAjBO,GAkBN,EAlBM,CAATzM;EAoBA,OAAO2N,UAAP;AACD;AAID,IAAMG,gBAAkC,GAAG;EACzCvM,YADyC,EACzCA,YADyC;EAEzCC,gBAFyC,EAEzCA,gBAFyC;EAGzC8B,WAHyC,EAGzCA,WAHyC;EAIzCC,eAJyC,EAIzCA,eAJyC;EAKzCK,kBALyC,EAKzCA,kBALyC;EAMzC+H,6BANyC,EAMzCA,6BANyC;EAOzCC,iCAPyC,EAOzCA,iCAPyC;EAQzC/F,SARyC,EAQzCA,SARyC;EASzCC,aATyC,EASzCA,aATyC;EAUzCgD,eAVyC,EAUzCA,eAVyC;EAWzCC,mBAXyC,EAWzCA,mBAXyC;EAYzCpE,aAZyC,EAYzCA,aAZyC;EAazCC,iBAbyC,EAazCA,iBAbyC;EAczCnC,QAdyC,EAczCA,QAdyC;EAezCW,UAfyC,EAezCA,UAfyC;EAgBzCC,cAhByC,EAgBzCA,cAhByC;EAiBzCS,cAjByC,EAiBzCA,cAjByC;EAkBzCN,WAlByC,EAkBzCA,WAlByC;EAmBzCwE,UAnByC,EAmBzCA,UAnByC;EAoBzCC,cApByC,EAoBzCA,cApByC;EAqBzC9B,WArByC,EAqBzCA,WArByC;EAsBzCC,eAtByC,EAsBzCA,eAtByC;EAuBzCvB,SAvByC,EAuBzCA,SAvByC;EAwBzC9C,WAxByC,EAwBzCA,WAxByC;EAyBzCoC,aAzByC,EAyBzCA,aAzByC;EA0BzCC,iBA1ByC,EA0BzCA,iBA1ByC;EA2BzCU,aA3ByC,EA2BzCA,aA3ByC;EA4BzCiH,cA5ByC,EA4BzCA,cA5ByC;EA6BzCnC,aA7ByC,EA6BzCA,aA7ByC;EA8BzC7E,UA9ByC,EA8BzCA,UA9ByC;EA+BzCC,cA/ByC,EA+BzCA,cA/ByC;EAgCzCC,cAhCyC,EAgCzCA,cAhCyC;EAiCzCC,kBAjCyC,EAiCzCA,kBAjCyC;EAkCzCsC,mBAlCyC,EAkCzCA,mBAlCyC;EAmCzCC,uBAnCyC,EAmCzCA,uBAnCyC;EAoCzChD,YApCyC,EAoCzCA,YApCyC;EAqCzCC,gBArCyC,EAqCzCA,gBArCyC;EAsCzCgE,kBAtCyC,EAsCzCA,kBAtCyC;EAuCzCE,qBAvCyC,EAuCzCA,qBAvCyC;EAwCzCD,sBAxCyC,EAwCzCA,sBAxCyC;EAyCzCE,yBAzCyC,EAyCzCA,yBAzCyC;EA0CzC1D,WA1CyC,EA0CzCA,WA1CyC;EA2CzCC,eA3CyC,EA2CzCA,eA3CyC;EA4CzCC,OA5CyC,EA4CzCA,OA5CyC;EA6CzCC,WA7CyC,EA6CzCA,WA7CyC;EA8CzCe,cA9CyC,EA8CzCA,cA9CyC;EA+CzCC,kBA/CyC,EA+CzCA,kBA/CyC;EAgDzC5C,uBAhDyC,EAgDzCA,uBAhDyC;EAiDzCC,2BAjDyC,EAiDzCA,2BAjDyC;EAkDzC+D,kBAlDyC,EAkDzCA,kBAlDyC;EAmDzCC,sBAnDyC,EAmDzCA,sBAnDyC;EAoDzCzG,aApDyC,EAoDzCA,aApDyC;EAqDzCE,iBArDyC,EAqDzCA,iBArDyC;EAsDzCK,YAtDyC,EAsDzCA,YAtDyC;EAuDzCC,gBAvDyC,EAuDzCA,gBAvDyC;EAwDzCkG,iBAxDyC,EAwDzCA,iBAxDyC;EAyDzCC,qBAzDyC,EAyDzCA,qBAzDyC;EA0DzChG,aA1DyC,EA0DzCA,aA1DyC;EA2DzCC,iBA3DyC,EA2DzCA,iBA3DyC;EA4DzCO,eA5DyC,EA4DzCA,eA5DyC;EA6DzCC,mBA7DyC,EA6DzCA,mBA7DyC;EA8DzC8F,YA9DyC,EA8DzCA,YA9DyC;EA+DzCC,gBA/DyC,EA+DzCA,gBA/DyC;EAgEzC9F,QAhEyC,EAgEzCA,QAhEyC;EAiEzCuF,cAjEyC,EAiEzCA,cAjEyC;EAkEzCC,kBAlEyC,EAkEzCA,kBAlEyC;EAmEzCiB,aAnEyC,EAmEzCA,aAnEyC;EAoEzCC,iBApEyC,EAoEzCA,iBApEyC;EAqEzClD,gBArEyC,EAqEzCA,gBArEyC;EAsEzCC,oBAtEyC,EAsEzCA,oBAtEyC;EAuEzCT,UAvEyC,EAuEzCA,UAvEyC;EAwEzCC,cAxEyC,EAwEzCA,cAxEyC;EAyEzCtB,kBAzEyC,EAyEzCA,kBAzEyC;EA0EzC+B,gBA1EyC,EA0EzCA,gBA1EyC;EA2EzCC,oBA3EyC,EA2EzCA,oBA3EyC;EA4EzC7E,eA5EyC,EA4EzCA,eA5EyC;EA6EzCC,mBA7EyC,EA6EzCA,mBA7EyC;EA8EzC0J,0BA9EyC,EA8EzCA,0BA9EyC;EA+EzCC,8BA/EyC,EA+EzCA,8BA/EyC;EAgFzCtI,aAhFyC,EAgFzCA,aAhFyC;EAiFzCO,gBAjFyC,EAiFzCA,gBAjFyC;EAkFzCuC,OAlFyC,EAkFzCA,OAlFyC;EAmFzCC,WAnFyC,EAmFzCA,WAnFyC;EAoFzC4C,oBApFyC,EAoFzCA,oBApFyC;EAqFzCE,uBArFyC,EAqFzCA,uBArFyC;EAsFzCD,wBAtFyC,EAsFzCA,wBAtFyC;EAuFzCE,2BAvFyC,EAuFzCA,2BAvFyC;EAwFzCP,cAxFyC,EAwFzCA,cAxFyC;EAyFzCC,kBAzFyC,EAyFzCA,kBAzFyC;EA0FzCxC,OA1FyC,EA0FzCA,OA1FyC;EA2FzCC,WA3FyC,EA2FzCA,WA3FyC;EA4FzCnF,WA5FyC,EA4FzCA,WA5FyC;EA6FzC4D,aA7FyC,EA6FzCA,aA7FyC;EA8FzCC,iBA9FyC,EA8FzCA,iBA9FyC;EA+FzCC,YA/FyC,EA+FzCA,YA/FyC;EAgGzCC,gBAhGyC,EAgGzCA,gBAhGyC;EAiGzCR,UAjGyC,EAiGzCA,UAjGyC;EAkGzC6H,aAlGyC,EAkGzCA,aAlGyC;EAmGzCC,iBAnGyC,EAmGzCA,iBAnGyC;EAoGzC1E,MApGyC,EAoGzCA,MApGyC;EAqGzCC,UArGyC,EAqGzCA,UArGyC;EAsGzCC,MAtGyC,EAsGzCA,MAtGyC;EAuGzCC,UAvGyC,EAuGzCA,UAvGyC;EAwGzCV,QAxGyC,EAwGzCA,QAxGyC;EAyGzC8D,gBAzGyC,EAyGzCA,gBAzGyC;EA0GzCE,oBA1GyC,EA0GzCA,oBA1GyC;EA2GzCnB,cA3GyC,EA2GzCA,cA3GyC;EA4GzCC,kBA5GyC,EA4GzCA,kBA5GyC;EA6GzCT,iBA7GyC,EA6GzCA,iBA7GyC;EA8GzCC,qBA9GyC,EA8GzCA,qBA9GyC;EA+GzCxH,eA/GyC,EA+GzCA,eA/GyC;EAgHzCC,mBAhHyC,EAgHzCA,mBAhHyC;EAiHzC2E,UAjHyC,EAiHzCA,UAjHyC;EAkHzCC,cAlHyC,EAkHzCA,cAlHyC;EAmHzC4E,qBAnHyC,EAmHzCA,qBAnHyC;EAoHzCC,yBApHyC,EAoHzCA,yBApHyC;EAqHzCjC,WArHyC,EAqHzCA,WArHyC;EAsHzCC,eAtHyC,EAsHzCA,eAtHyC;EAuHzC6B,iBAvHyC,EAuHzCA,iBAvHyC;EAwHzCC,qBAxHyC,EAwHzCA,qBAxHyC;EAyHzCzE,qBAzHyC,EAyHzCA,qBAzHyC;EA0HzCC,yBA1HyC,EA0HzCA,yBA1HyC;EA2HzC2E,gBA3HyC,EA2HzCA,gBA3HyC;EA4HzCC,oBA5HyC,EA4HzCA,oBA5HyC;EA6HzCC,mBA7HyC,EA6HzCA,mBA7HyC;EA8HzCC,uBA9HyC,EA8HzCA,uBA9HyC;EA+HzCC,YA/HyC,EA+HzCA,YA/HyC;EAgIzCjF,QAhIyC,EAgIzCA,QAhIyC;EAiIzC4D,kBAjIyC,EAiIzCA,kBAjIyC;EAkIzCC,sBAlIyC,EAkIzCA,sBAlIyC;EAmIzCG,kBAnIyC,EAmIzCA,kBAnIyC;EAoIzCC,sBApIyC,EAoIzCA,sBApIyC;EAqIzCT,aArIyC,EAqIzCA,aArIyC;EAsIzCC,iBAtIyC,EAsIzCA,iBAtIyC;EAuIzCnJ,YAvIyC,EAuIzCA,YAvIyC;EAwIzCoL,eAxIyC,EAwIzCA,eAxIyC;EAyIzCS,oBAzIyC,EAyIzCA,oBAzIyC;EA0IzCS,aA1IyC,EA0IzCA,aA1IyC;EA2IzCD,mBA3IyC,EA2IzCA,mBA3IyC;EA4IzCE,mBA5IyC,EA4IzCA,mBA5IyC;EA6IzCE,aA7IyC,EA6IzCA,aA7IyC;EA8IzCT,aA9IyC,EA8IzCA,aA9IyC;EA+IzCU,eA/IyC,EA+IzCA,eA/IyC;EAgJzCN,wBAhJyC,EAgJzCA,wBAhJyC;EAiJzCO;AAjJyC,CAA3C;AAoJA,eAAeI,gBAAf","names":["useCallback","useEffect","useState","useOnEvent","useOnMount","devicesWithNotch","RNDeviceInfo","getSupportedPlatformInfoAsync","getSupportedPlatformInfoFunctions","getSupportedPlatformInfoSync","getUniqueId","defaultValue","memoKey","supportedPlatforms","getter","uniqueId","syncUniqueId","Platform","OS","getInstanceId","syncGetter","getInstanceIdSync","getSerialNumber","getSerialNumberSync","getAndroidId","getAndroidIdSync","getIpAddress","getIpAddressSync","isCameraPresent","isCameraPresentSync","getMacAddress","getMacAddressSync","getDeviceId","deviceId","Promise","resolve","getSystemManufacturer","getSystemManufacturerSync","getManufacturer","getManufacturerSync","getModel","model","getBrand","brand","getSystemName","select","ios","systemName","android","windows","default","getSystemVersion","systemVersion","getBuildId","getBuildIdSync","getApiLevel","getApiLevelSync","getBundleId","bundleId","getInstallerPackageName","getInstallerPackageNameSync","getApplicationName","appName","getBuildNumber","buildNumber","getVersion","appVersion","getReadableVersion","getDeviceName","getDeviceNameSync","getUsedMemory","getUsedMemorySync","getUserAgent","getUserAgentSync","getFontScale","getFontScaleSync","getBootloader","getBootloaderSync","getDevice","getDeviceSync","getDisplay","getDisplaySync","getFingerprint","getFingerprintSync","getHardware","getHardwareSync","getHost","getHostSync","getProduct","getProductSync","getTags","getTagsSync","getType","getTypeSync","getBaseOs","getBaseOsSync","getPreviewSdkInt","getPreviewSdkIntSync","getSecurityPatch","getSecurityPatchSync","getCodename","getCodenameSync","getIncremental","getIncrementalSync","isEmulator","isEmulatorSync","isTablet","isPinOrFingerprintSet","isPinOrFingerprintSetSync","notch","hasNotch","undefined","_brand","_model","findIndex","item","toLowerCase","hasGms","hasGmsSync","hasHms","hasHmsSync","getFirstInstallTime","getFirstInstallTimeSync","getInstallReferrer","getInstallReferrerSync","getLastUpdateTime","getLastUpdateTimeSync","getPhoneNumber","getPhoneNumberSync","getCarrier","getCarrierSync","getTotalMemory","getTotalMemorySync","getMaxMemory","getMaxMemorySync","getTotalDiskCapacity","getTotalDiskCapacitySync","getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","getFreeDiskStorage","getFreeDiskStorageSync","getFreeDiskStorageOld","getFreeDiskStorageOldSync","getBatteryLevel","getBatteryLevelSync","getPowerState","getPowerStateSync","isBatteryCharging","isBatteryChargingSync","isLandscape","isLandscapeSync","Dimensions","get","height","width","isAirplaneMode","isAirplaneModeSync","getDeviceType","deviceType","getDeviceTypeSync","getSupportedAbis","getSupportedAbisSync","supportedAbis","supportedAbisSync","getSupported32BitAbis","getSupported32BitAbisSync","supported32BitAbis","supported32BitAbisSync","getSupported64BitAbis","getSupported64BitAbisSync","supported64BitAbis","supported64BitAbisSync","hasSystemFeature","feature","hasSystemFeatureSync","isLowBatteryLevel","level","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","isLocationEnabled","isLocationEnabledSync","isHeadphonesConnected","isHeadphonesConnectedSync","isMouseConnected","isMouseConnectedSync","isKeyboardConnected","isKeyboardConnectedSync","isTabletMode","getAvailableLocationProviders","getAvailableLocationProvidersSync","getBrightness","getBrightnessSync","getDeviceToken","deviceInfoEmitter","NativeEventEmitter","NativeModules","useBatteryLevel","batteryLevel","setBatteryLevel","setInitialValue","initialValue","onChange","subscription","addListener","remove","useBatteryLevelIsLow","batteryLevelIsLow","setBatteryLevelIsLow","usePowerState","powerState","setPowerState","state","useIsHeadphonesConnected","useFirstInstallTime","useDeviceName","useHasSystemFeature","asyncGetter","useIsEmulator","useManufacturer","useBrightness","brightness","setBrightness","value","deviceInfoModule"],"sources":["index.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nexport const getUniqueId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'uniqueId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.uniqueId,\n  });\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => RNDeviceInfo.deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => RNDeviceInfo.model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => RNDeviceInfo.isTablet,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState(),\n  syncGetter: () => RNDeviceInfo.getPowerStateSync(),\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders(),\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync(),\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst deviceInfoModule: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default deviceInfoModule;\n"]},"metadata":{},"sourceType":"module"}