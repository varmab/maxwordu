{"ast":null,"code":"'use strict';\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nvar Settings = require('react-native').NativeModules.FBSettings;\n\nmodule.exports = {\n  getAdvertiserTrackingEnabled: function getAdvertiserTrackingEnabled() {\n    if (Platform.OS === 'ios') {\n      return Settings.getAdvertiserTrackingEnabled();\n    } else {\n      return Promise.resolve(true);\n    }\n  },\n  setAdvertiserTrackingEnabled: function setAdvertiserTrackingEnabled(ATE) {\n    if (Platform.OS === 'ios') {\n      return Settings.setAdvertiserTrackingEnabled(ATE);\n    } else {\n      return Promise.resolve(false);\n    }\n  },\n  setDataProcessingOptions: function setDataProcessingOptions(options) {\n    var country = 0;\n\n    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'number') {\n      country = arguments.length <= 1 ? undefined : arguments[1];\n    }\n\n    var state = 0;\n\n    if (typeof (arguments.length <= 2 ? undefined : arguments[2]) === 'number') {\n      state = arguments.length <= 2 ? undefined : arguments[2];\n    }\n\n    Settings.setDataProcessingOptions(options, country, state);\n  }\n};","map":{"version":3,"mappings":"AAWA;;;;AAIA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAPA,CAAwBC,aAAxBD,CAAsCE,UAAvD;;AAEAC,MAAM,CAACC,OAAPD,GAAiB;EAKfE,4BALe,0CAKkC;IAC/C,IAAIC,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;MACzB,OAAOP,QAAQ,CAACM,4BAATN,EAAP;IADF,OAEO;MACL,OAAOS,OAAO,CAACC,OAARD,CAAgB,IAAhBA,CAAP;IACD;EAVY;EAgBfE,4BAhBe,wCAgBcC,GAhBd,EAgB8C;IAC3D,IAAIL,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;MACzB,OAAOP,QAAQ,CAACW,4BAATX,CAAsCY,GAAtCZ,CAAP;IADF,OAEO;MACL,OAAOS,OAAO,CAACC,OAARD,CAAgB,KAAhBA,CAAP;IACD;EArBY;EA0BfI,wBA1Be,oCA0BUC,OA1BV,EA0B0D;IACvE,IAAIC,OAAe,GAAG,CAAtB;;IACA,IAAI,8DAAmB,QAAvB,EAAiC;MAC/BA,OAAO,mDAAPA;IACD;;IACD,IAAIC,KAAa,GAAG,CAApB;;IACA,IAAI,8DAAmB,QAAvB,EAAiC;MAC/BA,KAAK,mDAALA;IACD;;IACDhB,QAAQ,CAACa,wBAATb,CAAkCc,OAAlCd,EAA2Ce,OAA3Cf,EAAoDgB,KAApDhB;EACD;AApCc,CAAjBI","names":["Settings","require","NativeModules","FBSettings","module","exports","getAdvertiserTrackingEnabled","Platform","OS","Promise","resolve","setAdvertiserTrackingEnabled","ATE","setDataProcessingOptions","options","country","state"],"sources":["FBSettings.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n * All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport {Platform} from 'react-native';\n\nconst Settings = require('react-native').NativeModules.FBSettings;\n\nmodule.exports = {\n  /**\n   * For iOS only, get AdvertiserTrackingEnabled status.\n   * @platform ios\n   */\n  getAdvertiserTrackingEnabled(): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.getAdvertiserTrackingEnabled();\n    } else {\n      return Promise.resolve(true);\n    }\n  },\n  /**\n   * For iOS only, set AdvertiserTrackingEnabled status, only works in iOS 14 and above.\n   * @platform ios\n   */\n  setAdvertiserTrackingEnabled(ATE: boolean): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.setAdvertiserTrackingEnabled(ATE);\n    } else {\n      return Promise.resolve(false);\n    }\n  },\n  /**\n   * Set data processing options\n   */\n  setDataProcessingOptions(options: Array<string>, ...args: Array<number>) {\n    let country: number = 0;\n    if (typeof args[0] === 'number') {\n      country = args[0];\n    }\n    let state: number = 0;\n    if (typeof args[1] === 'number') {\n      state = args[1];\n    }\n    Settings.setDataProcessingOptions(options, country, state);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}