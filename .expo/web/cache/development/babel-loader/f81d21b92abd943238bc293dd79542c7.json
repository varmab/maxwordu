{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nvar deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nvar batteryCharging = false,\n    batteryLevel = -1,\n    powerState = {};\n\nvar _readPowerState = function _readPowerState(battery) {\n  var level = battery.level,\n      charging = battery.charging,\n      chargingtime = battery.chargingtime,\n      dischargingtime = battery.dischargingtime;\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime: chargingtime,\n    dischargingtime: dischargingtime\n  };\n};\n\nexport var getMaxMemorySync = function getMaxMemorySync() {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n\n  return -1;\n};\nexport var getInstallReferrerSync = function getInstallReferrerSync() {\n  return document.referrer;\n};\nexport var isAirplaneModeSync = function isAirplaneModeSync() {\n  return !!navigator.onLine;\n};\nexport var getUserAgentSync = function getUserAgentSync() {\n  return window.navigator.userAgent;\n};\nexport var isLocationEnabledSync = function isLocationEnabledSync() {\n  return !!navigator.geolocation;\n};\nexport var getTotalMemorySync = function getTotalMemorySync() {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n\n  return -1;\n};\nexport var getUsedMemorySync = function getUsedMemorySync() {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n\n  return -1;\n};\n\nvar init = function _callee() {\n  var battery;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof navigator !== 'undefined' && navigator.getBattery)) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(navigator.getBattery());\n\n        case 3:\n          battery = _context.sent;\n          batteryCharging = battery.charging;\n          battery.addEventListener('chargingchange', function () {\n            var charging = battery.charging;\n            batteryCharging = charging;\n            powerState = _readPowerState(battery);\n            deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n          });\n          battery.addEventListener('levelchange', function () {\n            var level = battery.level;\n            batteryLevel = level;\n            powerState = _readPowerState(battery);\n            deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n\n            if (level < 0.2) {\n              deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n            }\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getBaseOsSync = function getBaseOsSync() {\n  var userAgent = window.navigator.userAgent,\n      platform = window.navigator.platform,\n      macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n      windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n      iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n  var os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\nexport var getInstallReferrer = function _callee2() {\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", getInstallReferrerSync());\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getUserAgent = function _callee3() {\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", getUserAgentSync());\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var isBatteryCharging = function _callee4() {\n  var battery;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context4.next = 5;\n            break;\n          }\n\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(navigator.getBattery());\n\n        case 3:\n          battery = _context4.sent;\n          return _context4.abrupt(\"return\", battery.level);\n\n        case 5:\n          return _context4.abrupt(\"return\", false);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var isBatteryChargingSync = function isBatteryChargingSync() {\n  return batteryCharging;\n};\nexport var isCameraPresent = function _callee5() {\n  var devices;\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context5.next = 5;\n            break;\n          }\n\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(navigator.mediaDevices.enumerateDevices());\n\n        case 3:\n          devices = _context5.sent;\n          return _context5.abrupt(\"return\", !!devices.find(function (d) {\n            return d.kind === 'videoinput';\n          }));\n\n        case 5:\n          return _context5.abrupt(\"return\", false);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var isCameraPresentSync = function isCameraPresentSync() {\n  console.log('[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent');\n  return false;\n};\nexport var getBatteryLevel = function _callee6() {\n  var battery;\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context6.next = 5;\n            break;\n          }\n\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(navigator.getBattery());\n\n        case 3:\n          battery = _context6.sent;\n          return _context6.abrupt(\"return\", battery.level);\n\n        case 5:\n          return _context6.abrupt(\"return\", -1);\n\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getBatteryLevelSync = function getBatteryLevelSync() {\n  return batteryLevel;\n};\nexport var isLocationEnabled = function _callee7() {\n  return _regeneratorRuntime.async(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          return _context7.abrupt(\"return\", isLocationEnabledSync());\n\n        case 1:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var isAirplaneMode = function _callee8() {\n  return _regeneratorRuntime.async(function _callee8$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          return _context8.abrupt(\"return\", isAirplaneModeSync());\n\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getBaseOs = function _callee9() {\n  return _regeneratorRuntime.async(function _callee9$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", getBaseOsSync());\n\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getTotalDiskCapacity = function _callee10() {\n  var _await$navigator$stor, quota;\n\n  return _regeneratorRuntime.async(function _callee10$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          if (!(navigator.storage && navigator.storage.estimate)) {\n            _context10.next = 6;\n            break;\n          }\n\n          _context10.next = 3;\n          return _regeneratorRuntime.awrap(navigator.storage.estimate());\n\n        case 3:\n          _await$navigator$stor = _context10.sent;\n          quota = _await$navigator$stor.quota;\n          return _context10.abrupt(\"return\", quota);\n\n        case 6:\n          return _context10.abrupt(\"return\", -1);\n\n        case 7:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getTotalDiskCapacitySync = function getTotalDiskCapacitySync() {\n  console.log('[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity');\n  return -1;\n};\nexport var getFreeDiskStorage = function _callee11() {\n  var _await$navigator$stor2, quota, usage;\n\n  return _regeneratorRuntime.async(function _callee11$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          if (!(navigator.storage && navigator.storage.estimate)) {\n            _context11.next = 7;\n            break;\n          }\n\n          _context11.next = 3;\n          return _regeneratorRuntime.awrap(navigator.storage.estimate());\n\n        case 3:\n          _await$navigator$stor2 = _context11.sent;\n          quota = _await$navigator$stor2.quota;\n          usage = _await$navigator$stor2.usage;\n          return _context11.abrupt(\"return\", quota - usage);\n\n        case 7:\n          return _context11.abrupt(\"return\", -1);\n\n        case 8:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getFreeDiskStorageSync = function getFreeDiskStorageSync() {\n  console.log('[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage');\n  return -1;\n};\nexport var getMaxMemory = function _callee12() {\n  return _regeneratorRuntime.async(function _callee12$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          return _context12.abrupt(\"return\", getMaxMemorySync());\n\n        case 1:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getUsedMemory = function _callee13() {\n  return _regeneratorRuntime.async(function _callee13$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          return _context13.abrupt(\"return\", getUsedMemorySync());\n\n        case 1:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getTotalMemory = function _callee14() {\n  return _regeneratorRuntime.async(function _callee14$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          return _context14.abrupt(\"return\", getTotalMemorySync());\n\n        case 1:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getPowerState = function _callee15() {\n  var battery;\n  return _regeneratorRuntime.async(function _callee15$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          if (!navigator.getBattery) {\n            _context15.next = 5;\n            break;\n          }\n\n          _context15.next = 3;\n          return _regeneratorRuntime.awrap(navigator.getBattery());\n\n        case 3:\n          battery = _context15.sent;\n          return _context15.abrupt(\"return\", _readPowerState(battery));\n\n        case 5:\n          return _context15.abrupt(\"return\", {});\n\n        case 6:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getPowerStateSync = function getPowerStateSync() {\n  return powerState;\n};","map":{"version":3,"mappings":";;;AAEA,IAAMA,iBAAiB,GAAG,IAAIC,kBAAJ,CAAuBC,aAAa,CAACC,YAArC,CAA1B;AAEA,IAAIC,eAAe,GAAG,KAAtB;AAAA,IACEC,YAAY,GAAG,CAAC,CADlB;AAAA,IAEEC,UAAU,GAAG,EAFf;;AAIA,IAAMC,eAAe,GAAIC,SAAnBD,eAAmBC,QAAD,EAAa;EACnC,IAAQC,KAAR,GAA2DD,OAA3D,CAAQC,KAAR;EAAA,IAAeC,QAAf,GAA2DF,OAA3D,CAAeE,QAAf;EAAA,IAAyBC,YAAzB,GAA2DH,OAA3D,CAAyBG,YAAzB;EAAA,IAAuCC,eAAvC,GAA2DJ,OAA3D,CAAuCI,eAAvC;EAEA,OAAO;IACLP,YAAY,EAAEI,KADT;IAELI,YAAY,EAAE,KAFT;IAGLC,YAAY,EAAEL,KAAK,KAAK,CAAVA,GAAc,MAAdA,GAAuBC,QAAQ,GAAG,UAAH,GAAgB,WAHxD;IAILC,YAJK,EAILA,YAJK;IAKLC;EALK,CAAP;AAHF;;AAYA,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EACpC,IAAIC,MAAM,CAACC,WAAPD,IAAsBA,MAAM,CAACC,WAAPD,CAAmBE,MAA7C,EAAqD;IACnD,OAAOF,MAAM,CAACC,WAAPD,CAAmBE,MAAnBF,CAA0BG,eAAjC;EACD;;EACD,OAAO,CAAC,CAAR;AAJK;AAOP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;EAC1C,OAAOC,QAAQ,CAACC,QAAhB;AADK;AAIP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;EACtC,OAAO,CAAC,CAACC,SAAS,CAACC,MAAnB;AADK;AAIP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EACpC,OAAOV,MAAM,CAACQ,SAAPR,CAAiBW,SAAxB;AADK;AAIP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;EACzC,OAAO,CAAC,CAACJ,SAAS,CAACK,WAAnB;AADK;AAIP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;EACtC,IAAIN,SAAS,CAACO,YAAd,EAA4B;IAC1B,OAAOP,SAAS,CAACO,YAAVP,GAAyB,UAAhC;EACD;;EACD,OAAO,CAAC,CAAR;AAJK;AAOP,OAAO,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EACrC,IAAIhB,MAAM,CAACC,WAAPD,IAAsBA,MAAM,CAACC,WAAPD,CAAmBE,MAA7C,EAAqD;IACnD,OAAOF,MAAM,CAACC,WAAPD,CAAmBE,MAAnBF,CAA0BiB,cAAjC;EACD;;EACD,OAAO,CAAC,CAAR;AAJK;;AAOP,IAAMC,IAAI,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA,MACP,OAAOV,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAACW,UADvC;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAEaX,SAAS,CAACW,UAAVX,EAFb;;QAAA;UAEHhB,OAFG;UAITJ,eAAe,GAAGI,OAAO,CAACE,QAA1BN;UAEAI,OAAO,CAAC4B,gBAAR5B,CAAyB,gBAAzBA,EAA2C,YAAM;YAC/C,IAAQE,QAAR,GAAqBF,OAArB,CAAQE,QAAR;YAEAN,eAAe,GAAGM,QAAlBN;YACAE,UAAU,GAAGC,eAAe,CAACC,OAAD,CAA5BF;YAEAN,iBAAiB,CAACqC,IAAlBrC,CAAuB,kCAAvBA,EAA2DM,UAA3DN;UANF;UASAQ,OAAO,CAAC4B,gBAAR5B,CAAyB,aAAzBA,EAAwC,YAAM;YAC5C,IAAQC,KAAR,GAAkBD,OAAlB,CAAQC,KAAR;YAEAJ,YAAY,GAAGI,KAAfJ;YACAC,UAAU,GAAGC,eAAe,CAACC,OAAD,CAA5BF;YAEAN,iBAAiB,CAACqC,IAAlBrC,CAAuB,oCAAvBA,EAA6DS,KAA7DT;;YACA,IAAIS,KAAK,GAAG,GAAZ,EAAiB;cACfT,iBAAiB,CAACqC,IAAlBrC,CAAuB,gCAAvBA,EAAyDS,KAAzDT;YACD;UATH;;QAfS;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAb;;AA6BA,IAAMsC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,IAAMX,SAAS,GAAGX,MAAM,CAACQ,SAAPR,CAAiBW,SAAnC;EAAA,IACEY,QAAQ,GAAGvB,MAAM,CAACQ,SAAPR,CAAiBuB,QAD9B;EAAA,IAEEC,cAAc,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,QAA1B,EAAoC,QAApC,CAFnB;EAAA,IAGEC,gBAAgB,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,OAA9B,CAHrB;EAAA,IAIEC,YAAY,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAJjB;EAMA,IAAIC,EAAE,GAAGJ,QAAT;;EAEA,IAAIC,cAAc,CAACI,OAAfJ,CAAuBD,QAAvBC,MAAqC,CAAC,CAA1C,EAA6C;IAC3CG,EAAE,GAAG,QAALA;EADF,OAEO,IAAID,YAAY,CAACE,OAAbF,CAAqBH,QAArBG,MAAmC,CAAC,CAAxC,EAA2C;IAChDC,EAAE,GAAG,KAALA;EADK,OAEA,IAAIF,gBAAgB,CAACG,OAAjBH,CAAyBF,QAAzBE,MAAuC,CAAC,CAA5C,EAA+C;IACpDE,EAAE,GAAG,SAALA;EADK,OAEA,IAAI,UAAUE,IAAV,CAAelB,SAAf,CAAJ,EAA+B;IACpCgB,EAAE,GAAG,SAALA;EADK,OAEA,IAAI,CAACA,EAAD,IAAO,QAAQE,IAAR,CAAaN,QAAb,CAAX,EAAmC;IACxCI,EAAE,GAAG,OAALA;EACD;;EAED,OAAOA,EAAP;AArBF;;AAwBAT,IAAI;AAKJ,OAAO,IAAMY,kBAAkB,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,kCACzB1B,sBAAsB,EADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA3B;AAIP,OAAO,IAAM2B,YAAY,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,kCACnBrB,gBAAgB,EADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAArB;AAIP,OAAO,IAAMsB,iBAAiB,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA,KAC3BxB,SAAS,CAACW,UADiB;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAEPX,SAAS,CAACW,UAAVX,EAFO;;QAAA;UAEvBhB,OAFuB;UAAA,kCAGtBA,OAAO,CAACC,KAHc;;QAAA;UAAA,kCAKxB,KALwB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA1B;AAQP,OAAO,IAAMwC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;EACzC,OAAO7C,eAAP;AADK;AAIP,OAAO,IAAM8C,eAAe,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA,KACzB1B,SAAS,CAACW,UADe;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAELX,SAAS,CAAC2B,YAAV3B,CAAuB4B,gBAAvB5B,EAFK;;QAAA;UAErB6B,OAFqB;UAAA,kCAGpB,CAAC,CAACA,OAAO,CAACC,IAARD,CAAcE,WAAD;YAAA,OAAOA,CAAC,CAACC,IAAFD,KAAW,YAAlB;UAAA,CAAbF,CAHkB;;QAAA;UAAA,kCAKtB,KALsB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAxB;AAQP,OAAO,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;EACvCC,OAAO,CAACC,GAARD,CACE,2FADFA;EAGA,OAAO,KAAP;AAJK;AAOP,OAAO,IAAME,eAAe,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA,KACzBpC,SAAS,CAACW,UADe;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAELX,SAAS,CAACW,UAAVX,EAFK;;QAAA;UAErBhB,OAFqB;UAAA,kCAGpBA,OAAO,CAACC,KAHY;;QAAA;UAAA,kCAKtB,CAAC,CALqB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAxB;AAQP,OAAO,IAAMoD,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;EACvC,OAAOxD,YAAP;AADK;AAIP,OAAO,IAAMyD,iBAAiB,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,kCACxBlC,qBAAqB,EADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA1B;AAIP,OAAO,IAAMmC,cAAc,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,kCACrBxC,kBAAkB,EADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAvB;AAIP,OAAO,IAAMyC,SAAS,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,kCAChB1B,aAAa,EADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAlB;AAIP,OAAO,IAAM2B,oBAAoB,GAAG;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA,MAC9BzC,SAAS,CAAC0C,OAAV1C,IAAqBA,SAAS,CAAC0C,OAAV1C,CAAkB2C,QADT;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAER3C,SAAS,CAAC0C,OAAV1C,CAAkB2C,QAAlB3C,EAFQ;;QAAA;UAAA;UAExB4C,KAFwB,yBAExBA,KAFwB;UAAA,mCAGzBA,KAHyB;;QAAA;UAAA,mCAK3B,CAAC,CAL0B;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA7B;AAQP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;EAC5CX,OAAO,CAACC,GAARD,CACE,qGADFA;EAGA,OAAO,CAAC,CAAR;AAJK;AAOP,OAAO,IAAMY,kBAAkB,GAAG;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA,MAC5B9C,SAAS,CAAC0C,OAAV1C,IAAqBA,SAAS,CAAC0C,OAAV1C,CAAkB2C,QADX;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAEC3C,SAAS,CAAC0C,OAAV1C,CAAkB2C,QAAlB3C,EAFD;;QAAA;UAAA;UAEtB4C,KAFsB,0BAEtBA,KAFsB;UAEfG,KAFe,0BAEfA,KAFe;UAAA,mCAGvBH,KAAK,GAAGG,KAHe;;QAAA;UAAA,mCAKzB,CAAC,CALwB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA3B;AAQP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;EAC1Cd,OAAO,CAACC,GAARD,CACE,iGADFA;EAGA,OAAO,CAAC,CAAR;AAJK;AAOP,OAAO,IAAMe,YAAY,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,mCACnB1D,gBAAgB,EADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAArB;AAIP,OAAO,IAAM2D,aAAa,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,mCACpB1C,iBAAiB,EADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAtB;AAIP,OAAO,IAAM2C,cAAc,GAAG;EAAA;IAAA;MAAA;QAAA;UAAA,mCACrB7C,kBAAkB,EADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAvB;AAIP,OAAO,IAAM8C,aAAa,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA,KACvBpD,SAAS,CAACW,UADa;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAEHX,SAAS,CAACW,UAAVX,EAFG;;QAAA;UAEnBhB,OAFmB;UAAA,mCAIlBD,eAAe,CAACC,OAAD,CAJG;;QAAA;UAAA,mCAMpB,EANoB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAtB;AASP,OAAO,IAAMqE,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EACrC,OAAOvE,UAAP;AADK","names":["deviceInfoEmitter","NativeEventEmitter","NativeModules","RNDeviceInfo","batteryCharging","batteryLevel","powerState","_readPowerState","battery","level","charging","chargingtime","dischargingtime","lowPowerMode","batteryState","getMaxMemorySync","window","performance","memory","jsHeapSizeLimit","getInstallReferrerSync","document","referrer","isAirplaneModeSync","navigator","onLine","getUserAgentSync","userAgent","isLocationEnabledSync","geolocation","getTotalMemorySync","deviceMemory","getUsedMemorySync","usedJSHeapSize","init","getBattery","addEventListener","emit","getBaseOsSync","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","indexOf","test","getInstallReferrer","getUserAgent","isBatteryCharging","isBatteryChargingSync","isCameraPresent","mediaDevices","enumerateDevices","devices","find","d","kind","isCameraPresentSync","console","log","getBatteryLevel","getBatteryLevelSync","isLocationEnabled","isAirplaneMode","getBaseOs","getTotalDiskCapacity","storage","estimate","quota","getTotalDiskCapacitySync","getFreeDiskStorage","usage","getFreeDiskStorageSync","getMaxMemory","getUsedMemory","getTotalMemory","getPowerState","getPowerStateSync"],"sources":["index.js"],"sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\nlet batteryCharging = false,\n  batteryLevel = -1,\n  powerState = {};\n\nconst _readPowerState = (battery) => {\n  const { level, charging, chargingtime, dischargingtime } = battery;\n\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime,\n    dischargingtime,\n  };\n};\n\nexport const getMaxMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n  return -1;\n};\n\nexport const getInstallReferrerSync = () => {\n  return document.referrer;\n};\n\nexport const isAirplaneModeSync = () => {\n  return !!navigator.onLine;\n};\n\nexport const getUserAgentSync = () => {\n  return window.navigator.userAgent;\n};\n\nexport const isLocationEnabledSync = () => {\n  return !!navigator.geolocation;\n};\n\nexport const getTotalMemorySync = () => {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n  return -1;\n};\n\nexport const getUsedMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n  return -1;\n};\n\nconst init = async () => {\n  if (typeof navigator !== 'undefined' && navigator.getBattery) {\n    const battery = await navigator.getBattery();\n\n    batteryCharging = battery.charging;\n\n    battery.addEventListener('chargingchange', () => {\n      const { charging } = battery;\n\n      batteryCharging = charging;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n    });\n\n    battery.addEventListener('levelchange', () => {\n      const { level } = battery;\n\n      batteryLevel = level;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n      if (level < 0.2) {\n        deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n      }\n    });\n  }\n};\n\nconst getBaseOsSync = () => {\n  const userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n\n  let os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\n/**\n * react-native-web empty polyfill.\n */\n\nexport const getInstallReferrer = async () => {\n  return getInstallReferrerSync();\n};\n\nexport const getUserAgent = async () => {\n  return getUserAgentSync();\n};\n\nexport const isBatteryCharging = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n    return battery.level;\n  }\n  return false;\n};\n\nexport const isBatteryChargingSync = () => {\n  return batteryCharging;\n};\n\nexport const isCameraPresent = async () => {\n  if (navigator.getBattery) {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    return !!devices.find((d) => d.kind === 'videoinput');\n  }\n  return false;\n};\n\nexport const isCameraPresentSync = () => {\n  console.log(\n    '[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent'\n  );\n  return false;\n};\n\nexport const getBatteryLevel = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n    return battery.level;\n  }\n  return -1;\n};\n\nexport const getBatteryLevelSync = () => {\n  return batteryLevel;\n};\n\nexport const isLocationEnabled = async () => {\n  return isLocationEnabledSync();\n};\n\nexport const isAirplaneMode = async () => {\n  return isAirplaneModeSync();\n};\n\nexport const getBaseOs = async () => {\n  return getBaseOsSync();\n};\n\nexport const getTotalDiskCapacity = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    const { quota } = await navigator.storage.estimate();\n    return quota;\n  }\n  return -1;\n};\n\nexport const getTotalDiskCapacitySync = () => {\n  console.log(\n    '[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity'\n  );\n  return -1;\n};\n\nexport const getFreeDiskStorage = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    const { quota, usage } = await navigator.storage.estimate();\n    return quota - usage;\n  }\n  return -1;\n};\n\nexport const getFreeDiskStorageSync = () => {\n  console.log(\n    '[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage'\n  );\n  return -1;\n};\n\nexport const getMaxMemory = async () => {\n  return getMaxMemorySync();\n};\n\nexport const getUsedMemory = async () => {\n  return getUsedMemorySync();\n};\n\nexport const getTotalMemory = async () => {\n  return getTotalMemorySync();\n};\n\nexport const getPowerState = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n\n    return _readPowerState(battery);\n  }\n  return {};\n};\n\nexport const getPowerStateSync = () => {\n  return powerState;\n};\n"]},"metadata":{},"sourceType":"module"}