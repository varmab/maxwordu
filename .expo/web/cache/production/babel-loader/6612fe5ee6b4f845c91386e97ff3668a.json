{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"route\",\"style\",\"children\",\"borderless\",\"centered\",\"rippleColor\"],_excluded2=[\"component\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Animated from\"react-native-web/dist/exports/Animated\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{getBottomSpace}from'react-native-iphone-x-helper';import color from'color';import overlay from\"../../styles/overlay\";import Icon from\"../Icon\";import Surface from\"../Surface\";import Badge from\"../Badge\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";import useAnimatedValue from\"../../utils/useAnimatedValue\";import useAnimatedValueArray from\"../../utils/useAnimatedValueArray\";import useLayout from\"../../utils/useLayout\";import useIsKeyboardShown from\"../../utils/useIsKeyboardShown\";import BottomNavigationRouteScreen from\"./BottomNavigationRouteScreen\";var MIN_RIPPLE_SCALE=0.001;var MIN_TAB_WIDTH=96;var MAX_TAB_WIDTH=168;var BAR_HEIGHT=56;var BOTTOM_INSET=getBottomSpace();var FAR_FAR_AWAY=Platform.OS==='web'?0:9999;var Touchable=function Touchable(_ref){var _0=_ref.route,style=_ref.style,children=_ref.children,borderless=_ref.borderless,centered=_ref.centered,rippleColor=_ref.rippleColor,rest=_objectWithoutProperties(_ref,_excluded);return TouchableRipple.supported?React.createElement(TouchableRipple,_extends({},rest,{disabled:rest.disabled||undefined,borderless:borderless,centered:centered,rippleColor:rippleColor,style:style}),children):React.createElement(TouchableWithoutFeedback,rest,React.createElement(View,{style:style},children));};var SceneComponent=React.memo(function(_ref2){var component=_ref2.component,rest=_objectWithoutProperties(_ref2,_excluded2);return React.createElement(component,rest);});var BottomNavigation=function BottomNavigation(_ref3){var _safeAreaInsets$left,_safeAreaInsets$right,_safeAreaInsets$botto;var navigationState=_ref3.navigationState,renderScene=_ref3.renderScene,renderIcon=_ref3.renderIcon,renderLabel=_ref3.renderLabel,_ref3$renderTouchable=_ref3.renderTouchable,renderTouchable=_ref3$renderTouchable===void 0?function(props){return React.createElement(Touchable,props);}:_ref3$renderTouchable,_ref3$getLabelText=_ref3.getLabelText,getLabelText=_ref3$getLabelText===void 0?function(_ref4){var route=_ref4.route;return route.title;}:_ref3$getLabelText,_ref3$getBadge=_ref3.getBadge,getBadge=_ref3$getBadge===void 0?function(_ref5){var route=_ref5.route;return route.badge;}:_ref3$getBadge,_ref3$getColor=_ref3.getColor,getColor=_ref3$getColor===void 0?function(_ref6){var route=_ref6.route;return route.color;}:_ref3$getColor,_ref3$getAccessibilit=_ref3.getAccessibilityLabel,getAccessibilityLabel=_ref3$getAccessibilit===void 0?function(_ref7){var route=_ref7.route;return route.accessibilityLabel;}:_ref3$getAccessibilit,_ref3$getTestID=_ref3.getTestID,getTestID=_ref3$getTestID===void 0?function(_ref8){var route=_ref8.route;return route.testID;}:_ref3$getTestID,activeColor=_ref3.activeColor,inactiveColor=_ref3.inactiveColor,_ref3$keyboardHidesNa=_ref3.keyboardHidesNavigationBar,keyboardHidesNavigationBar=_ref3$keyboardHidesNa===void 0?true:_ref3$keyboardHidesNa,barStyle=_ref3.barStyle,_ref3$labeled=_ref3.labeled,labeled=_ref3$labeled===void 0?true:_ref3$labeled,style=_ref3.style,theme=_ref3.theme,_ref3$sceneAnimationE=_ref3.sceneAnimationEnabled,sceneAnimationEnabled=_ref3$sceneAnimationE===void 0?false:_ref3$sceneAnimationE,onTabPress=_ref3.onTabPress,onIndexChange=_ref3.onIndexChange,_ref3$shifting=_ref3.shifting,shifting=_ref3$shifting===void 0?navigationState.routes.length>3:_ref3$shifting,safeAreaInsets=_ref3.safeAreaInsets,_ref3$labelMaxFontSiz=_ref3.labelMaxFontSizeMultiplier,labelMaxFontSizeMultiplier=_ref3$labelMaxFontSiz===void 0?1:_ref3$labelMaxFontSiz;var scale=theme.animation.scale;var focusedKey=navigationState.routes[navigationState.index].key;var visibleAnim=useAnimatedValue(1);var tabsAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?1:0;}));var offsetsAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?0:1;}));var indexAnim=useAnimatedValue(navigationState.index);var rippleAnim=useAnimatedValue(MIN_RIPPLE_SCALE);var _useLayout=useLayout(),_useLayout2=_slicedToArray(_useLayout,2),layout=_useLayout2[0],onLayout=_useLayout2[1];var _React$useState=React.useState([focusedKey]),_React$useState2=_slicedToArray(_React$useState,2),loaded=_React$useState2[0],setLoaded=_React$useState2[1];if(!loaded.includes(focusedKey)){setLoaded(function(loaded){return[].concat(_toConsumableArray(loaded),[focusedKey]);});}var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),keyboardVisible=_React$useState4[0],setKeyboardVisible=_React$useState4[1];var handleKeyboardShow=React.useCallback(function(){setKeyboardVisible(true);Animated.timing(visibleAnim,{toValue:0,duration:150*scale,useNativeDriver:true}).start();},[scale,visibleAnim]);var handleKeyboardHide=React.useCallback(function(){Animated.timing(visibleAnim,{toValue:1,duration:100*scale,useNativeDriver:true}).start(function(){setKeyboardVisible(false);});},[scale,visibleAnim]);var animateToIndex=React.useCallback(function(index){rippleAnim.setValue(MIN_RIPPLE_SCALE);Animated.parallel([Animated.timing(rippleAnim,{toValue:1,duration:shifting?400*scale:0,useNativeDriver:true})].concat(_toConsumableArray(navigationState.routes.map(function(_,i){return Animated.timing(tabsAnims[i],{toValue:i===index?1:0,duration:shifting?150*scale:0,useNativeDriver:true});})))).start(function(_ref9){var finished=_ref9.finished;tabsAnims.map(function(tab,i){return tab.setValue(i===index?1:0);});indexAnim.setValue(index);rippleAnim.setValue(MIN_RIPPLE_SCALE);if(finished){offsetsAnims.forEach(function(offset,i){if(i===index){offset.setValue(0);}else{offset.setValue(1);}});}});},[indexAnim,shifting,navigationState.routes,offsetsAnims,rippleAnim,scale,tabsAnims]);React.useEffect(function(){animateToIndex(navigationState.index);},[]);useIsKeyboardShown({onShow:handleKeyboardShow,onHide:handleKeyboardHide});var prevNavigationState=React.useRef();React.useEffect(function(){offsetsAnims.forEach(function(offset,i){var _prevNavigationState$;if(i===navigationState.index||i===((_prevNavigationState$=prevNavigationState.current)===null||_prevNavigationState$===void 0?void 0:_prevNavigationState$.index)){offset.setValue(0);}});animateToIndex(navigationState.index);},[navigationState.index,animateToIndex,offsetsAnims]);var handleTabPress=function handleTabPress(index){var event={route:navigationState.routes[index],defaultPrevented:false,preventDefault:function preventDefault(){event.defaultPrevented=true;}};onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}if(index!==navigationState.index){onIndexChange(index);}};var jumpTo=React.useCallback(function(key){var index=navigationState.routes.findIndex(function(route){return route.key===key;});onIndexChange(index);},[navigationState.routes,onIndexChange]);var routes=navigationState.routes;var colors=theme.colors,isDarkTheme=theme.dark,mode=theme.mode;var _ref11=StyleSheet.flatten(barStyle)||{},customBackground=_ref11.backgroundColor,_ref11$elevation=_ref11.elevation,elevation=_ref11$elevation===void 0?4:_ref11$elevation;var approxBackgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors.surface):colors.primary;var backgroundColor=shifting?indexAnim.interpolate({inputRange:routes.map(function(_,i){return i;}),outputRange:routes.map(function(route){return getColor({route:route})||approxBackgroundColor;})}):approxBackgroundColor;var isDark=typeof approxBackgroundColor==='string'?!color(approxBackgroundColor).isLight():true;var textColor=isDark?white:black;var activeTintColor=typeof activeColor!=='undefined'?activeColor:textColor;var inactiveTintColor=typeof inactiveColor!=='undefined'?inactiveColor:color(textColor).alpha(0.5).rgb().string();var touchColor=color(activeColor||activeTintColor).alpha(0.12).rgb().string();var maxTabWidth=routes.length>3?MIN_TAB_WIDTH:MAX_TAB_WIDTH;var maxTabBarWidth=maxTabWidth*routes.length;var tabBarWidth=Math.min(layout.width,maxTabBarWidth);var tabWidth=tabBarWidth/routes.length;var rippleSize=layout.width/4;var insets={left:(_safeAreaInsets$left=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left)!==null&&_safeAreaInsets$left!==void 0?_safeAreaInsets$left:0,right:(_safeAreaInsets$right=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right)!==null&&_safeAreaInsets$right!==void 0?_safeAreaInsets$right:0,bottom:(_safeAreaInsets$botto=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom)!==null&&_safeAreaInsets$botto!==void 0?_safeAreaInsets$botto:BOTTOM_INSET};return React.createElement(View,{style:[styles.container,style]},React.createElement(View,{style:[styles.content,{backgroundColor:colors.background}]},routes.map(function(route,index){if(!loaded.includes(route.key)){return null;}var focused=navigationState.index===index;var opacity=sceneAnimationEnabled?tabsAnims[index]:focused?1:0;var top=sceneAnimationEnabled?offsetsAnims[index].interpolate({inputRange:[0,1],outputRange:[0,FAR_FAR_AWAY]}):focused?0:FAR_FAR_AWAY;return React.createElement(BottomNavigationRouteScreen,{key:route.key,pointerEvents:focused?'auto':'none',accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',index:index,visibility:opacity,style:[StyleSheet.absoluteFill,{opacity:opacity}],collapsable:false,removeClippedSubviews:Platform.OS==='ios'?navigationState.index!==index:true},React.createElement(Animated.View,{style:[styles.content,{top:top}]},renderScene({route:route,jumpTo:jumpTo})));})),React.createElement(Surface,{style:[styles.bar,keyboardHidesNavigationBar?{transform:[{translateY:visibleAnim.interpolate({inputRange:[0,1],outputRange:[layout.height,0]})}],position:keyboardVisible?'absolute':null}:null,barStyle],pointerEvents:layout.measured?keyboardHidesNavigationBar&&keyboardVisible?'none':'auto':'none',onLayout:onLayout},React.createElement(Animated.View,{style:[styles.barContent,{backgroundColor:backgroundColor}]},React.createElement(View,{style:[styles.items,{marginBottom:insets.bottom,marginHorizontal:Math.max(insets.left,insets.right),maxWidth:maxTabBarWidth}],accessibilityRole:'tablist'},shifting?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.ripple,{top:(BAR_HEIGHT-rippleSize)/2,left:tabWidth*(navigationState.index+0.5)-rippleSize/2,height:rippleSize,width:rippleSize,borderRadius:rippleSize/2,backgroundColor:getColor({route:routes[navigationState.index]}),transform:[{scale:rippleAnim.interpolate({inputRange:[0,1],outputRange:[0,8]})}],opacity:rippleAnim.interpolate({inputRange:[0,MIN_RIPPLE_SCALE,0.3,1],outputRange:[0,0,1,1]})}]}):null,routes.map(function(route,index){var focused=navigationState.index===index;var active=tabsAnims[index];var scale=labeled&&shifting?active.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):1;var translateY=labeled?shifting?active.interpolate({inputRange:[0,1],outputRange:[7,0]}):0:7;var activeOpacity=active;var inactiveOpacity=active.interpolate({inputRange:[0,1],outputRange:[1,0]});var badge=getBadge({route:route});return renderTouchable({key:route.key,route:route,borderless:true,centered:true,rippleColor:touchColor,onPress:function onPress(){return handleTabPress(index);},testID:getTestID({route:route}),accessibilityLabel:getAccessibilityLabel({route:route}),accessibilityTraits:focused?['button','selected']:'button',accessibilityComponentType:'button',accessibilityRole:Platform.OS==='ios'?'button':'tab',accessibilityState:{selected:focused},style:styles.item,children:React.createElement(View,{pointerEvents:\"none\"},React.createElement(Animated.View,{style:[styles.iconContainer,{transform:[{translateY:translateY}]}]},React.createElement(Animated.View,{style:[styles.iconWrapper,{opacity:activeOpacity}]},renderIcon?renderIcon({route:route,focused:true,color:activeTintColor}):React.createElement(Icon,{source:route.icon,color:activeTintColor,size:24})),React.createElement(Animated.View,{style:[styles.iconWrapper,{opacity:inactiveOpacity}]},renderIcon?renderIcon({route:route,focused:false,color:inactiveTintColor}):React.createElement(Icon,{source:route.icon,color:inactiveTintColor,size:24})),React.createElement(View,{style:[styles.badgeContainer,{right:(badge!=null&&typeof badge!=='boolean'?String(badge).length*-2:0)-2}]},typeof badge==='boolean'?React.createElement(Badge,{visible:badge,size:8}):React.createElement(Badge,{visible:badge!=null,size:16},badge))),labeled?React.createElement(Animated.View,{style:[styles.labelContainer,{transform:[{scale:scale}]}]},React.createElement(Animated.View,{style:[styles.labelWrapper,{opacity:activeOpacity}]},renderLabel?renderLabel({route:route,focused:true,color:activeTintColor}):React.createElement(Text,{maxFontSizeMultiplier:labelMaxFontSizeMultiplier,style:[styles.label,{color:activeTintColor}]},getLabelText({route:route}))),shifting?null:React.createElement(Animated.View,{style:[styles.labelWrapper,{opacity:inactiveOpacity}]},renderLabel?renderLabel({route:route,focused:false,color:inactiveTintColor}):React.createElement(Text,{maxFontSizeMultiplier:labelMaxFontSizeMultiplier,selectable:false,style:[styles.label,{color:inactiveTintColor}]},getLabelText({route:route})))):React.createElement(View,{style:styles.labelContainer}))});})))));};BottomNavigation.SceneMap=function(scenes){return function(_ref10){var route=_ref10.route,jumpTo=_ref10.jumpTo;return React.createElement(SceneComponent,{key:route.key,component:scenes[route.key?route.key:''],route:route,jumpTo:jumpTo});};};export default withTheme(BottomNavigation);var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},content:{flex:1},bar:{left:0,right:0,bottom:0,elevation:4},barContent:{alignItems:'center',overflow:'hidden'},items:_objectSpread({flexDirection:'row'},Platform.OS==='web'?{width:'100%'}:null),item:{flex:1,paddingVertical:6},ripple:{position:'absolute'},iconContainer:{height:24,width:24,marginTop:2,marginHorizontal:12,alignSelf:'center'},iconWrapper:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{alignItems:'center'}),labelContainer:{height:16,paddingBottom:2},labelWrapper:_objectSpread({},StyleSheet.absoluteFillObject),label:_objectSpread({fontSize:12,height:BAR_HEIGHT,textAlign:'center',backgroundColor:'transparent'},Platform.OS==='web'?{whiteSpace:'nowrap',alignSelf:'center'}:null),badgeContainer:{position:'absolute',left:0,top:-2}});","map":{"version":3,"sources":["BottomNavigation.tsx"],"names":["MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","BOTTOM_INSET","getBottomSpace","FAR_FAR_AWAY","Platform","Touchable","route","rest","TouchableRipple","style","SceneComponent","React","BottomNavigation","renderTouchable","props","getLabelText","getBadge","getColor","getAccessibilityLabel","getTestID","keyboardHidesNavigationBar","labeled","sceneAnimationEnabled","shifting","navigationState","labelMaxFontSizeMultiplier","scale","theme","focusedKey","visibleAnim","useAnimatedValue","tabsAnims","useAnimatedValueArray","i","offsetsAnims","indexAnim","rippleAnim","useLayout","loaded","setLoaded","handleKeyboardShow","setKeyboardVisible","Animated","toValue","duration","useNativeDriver","handleKeyboardHide","animateToIndex","index","finished","tab","offset","useIsKeyboardShown","onShow","onHide","prevNavigationState","handleTabPress","event","defaultPrevented","preventDefault","onTabPress","onIndexChange","jumpTo","key","routes","dark","mode","backgroundColor","elevation","StyleSheet","approxBackgroundColor","customBackground","isDarkTheme","overlay","colors","inputRange","outputRange","isDark","color","textColor","activeTintColor","inactiveTintColor","touchColor","activeColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","layout","tabWidth","rippleSize","insets","left","safeAreaInsets","right","bottom","styles","background","focused","opacity","top","renderScene","transform","translateY","position","keyboardVisible","onLayout","marginBottom","marginHorizontal","maxWidth","height","width","borderRadius","active","activeOpacity","inactiveOpacity","badge","borderless","centered","rippleColor","onPress","testID","accessibilityLabel","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","selected","children","renderIcon","String","renderLabel","labelContainer","scenes","withTheme","container","flex","overflow","content","bar","barContent","alignItems","items","flexDirection","item","paddingVertical","ripple","iconContainer","marginTop","alignSelf","iconWrapper","paddingBottom","labelWrapper","absoluteFillObject","label","fontSize","textAlign","whiteSpace","badgeContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  StyleSheet,\n  StyleProp,\n  Platform,\n  ViewStyle,\n} from 'react-native';\nimport { getBottomSpace } from 'react-native-iphone-x-helper';\nimport color from 'color';\nimport overlay from '../../styles/overlay';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport Badge from '../Badge';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useLayout from '../../utils/useLayout';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport BottomNavigationRouteScreen from './BottomNavigationRouteScreen';\n\ntype Route = {\n  key: string;\n  title?: string;\n  icon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: string;\n};\n\ntype Props = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n   * - `color`: color to use as background color for shifting bottom navigation\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Music', icon: 'queue-music', color: '#3F51B5' },\n   *     { key: 'albums', title: 'Albums', icon: 'album', color: '#009688' },\n   *     { key: 'recents', title: 'Recents', icon: 'history', color: '#795548' },\n   *     { key: 'purchased', title: 'Purchased', icon: 'shopping-cart', color: '#607D8B' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps) => React.ReactNode;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Style for the bottom navigation bar.  You can pass a custom background color here:\n   *\n   * ```js\n   * barStyle={{ backgroundColor: '#694fad' }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst BOTTOM_INSET = getBottomSpace();\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\nconst SceneComponent = React.memo(({ component, ...rest }: any) =>\n  React.createElement(component, rest)\n);\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tabs](https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs) and consult [createMaterialBottomTabNavigator](https://reactnavigation.org/docs/material-bottom-tab-navigator/) documentation.\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Music', icon: 'queue-music' },\n *     { key: 'albums', title: 'Albums', icon: 'album' },\n *     { key: 'recents', title: 'Recents', icon: 'history' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst BottomNavigation = ({\n  navigationState,\n  renderScene,\n  renderIcon,\n  renderLabel,\n  renderTouchable = (props: TouchableProps) => <Touchable {...props} />,\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = true,\n  barStyle,\n  labeled = true,\n  style,\n  theme,\n  sceneAnimationEnabled = false,\n  onTabPress,\n  onIndexChange,\n  shifting = navigationState.routes.length > 3,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n}: Props) => {\n  const { scale } = theme.animation;\n\n  const focusedKey = navigationState.routes[navigationState.index].key;\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n  const offsetsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // offscreen === 1, normal === 0\n      (_, i) => (i === navigationState.index ? 0 : 1)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState<string[]>([focusedKey]);\n\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded((loaded) => [...loaded, focusedKey]);\n  }\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start(({ finished }) => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n        if (finished) {\n          // Position all inactive screens offscreen to save memory usage\n          // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n          offsetsAnims.forEach((offset, i) => {\n            if (i === index) {\n              offset.setValue(0);\n            } else {\n              offset.setValue(1);\n            }\n          });\n        }\n      });\n    },\n    [\n      indexAnim,\n      shifting,\n      navigationState.routes,\n      offsetsAnims,\n      rippleAnim,\n      scale,\n      tabsAnims,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide,\n  });\n\n  const prevNavigationState = React.useRef<NavigationState>();\n\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      if (\n        i === navigationState.index ||\n        i === prevNavigationState.current?.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  const handleTabPress = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    onTabPress?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationState.routes.findIndex(\n        (route) => route.key === key\n      );\n\n      onIndexChange(index);\n    },\n    [navigationState.routes, onIndexChange]\n  );\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n    StyleSheet.flatten(barStyle) || {};\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n\n  const backgroundColor = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n  const activeTintColor =\n    typeof activeColor !== 'undefined' ? activeColor : textColor;\n  const inactiveTintColor =\n    typeof inactiveColor !== 'undefined'\n      ? inactiveColor\n      : color(textColor).alpha(0.5).rgb().string();\n\n  const touchColor = color(activeColor || activeTintColor)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  const tabWidth = tabBarWidth / routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? 0,\n    right: safeAreaInsets?.right ?? 0,\n    bottom: safeAreaInsets?.bottom ?? BOTTOM_INSET,\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.content, { backgroundColor: colors.background }]}>\n        {routes.map((route, index) => {\n          if (!loaded.includes(route.key)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const focused = navigationState.index === index;\n\n          const opacity = sceneAnimationEnabled\n            ? tabsAnims[index]\n            : focused\n            ? 1\n            : 0;\n\n          const top = sceneAnimationEnabled\n            ? offsetsAnims[index].interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, FAR_FAR_AWAY],\n              })\n            : focused\n            ? 0\n            : FAR_FAR_AWAY;\n\n          return (\n            <BottomNavigationRouteScreen\n              key={route.key}\n              pointerEvents={focused ? 'auto' : 'none'}\n              accessibilityElementsHidden={!focused}\n              importantForAccessibility={\n                focused ? 'auto' : 'no-hide-descendants'\n              }\n              index={index}\n              visibility={opacity}\n              style={[StyleSheet.absoluteFill, { opacity }]}\n              collapsable={false}\n              removeClippedSubviews={\n                // On iOS, set removeClippedSubviews to true only when not focused\n                // This is an workaround for a bug where the clipped view never re-appears\n                Platform.OS === 'ios' ? navigationState.index !== index : true\n              }\n            >\n              <Animated.View style={[styles.content, { top }]}>\n                {renderScene({ route, jumpTo })}\n              </Animated.View>\n            </BottomNavigationRouteScreen>\n          );\n        })}\n      </View>\n      <Surface\n        style={\n          [\n            styles.bar,\n            keyboardHidesNavigationBar\n              ? {\n                  // When the keyboard is shown, slide down the navigation bar\n                  transform: [\n                    {\n                      translateY: visibleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layout.height, 0],\n                      }),\n                    },\n                  ],\n                  // Absolutely position the navigation bar so that the content is below it\n                  // This is needed to avoid gap at bottom when the navigation bar is hidden\n                  position: keyboardVisible ? 'absolute' : null,\n                }\n              : null,\n            barStyle,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={\n          layout.measured\n            ? keyboardHidesNavigationBar && keyboardVisible\n              ? 'none'\n              : 'auto'\n            : 'none'\n        }\n        onLayout={onLayout}\n      >\n        <Animated.View style={[styles.barContent, { backgroundColor }]}>\n          <View\n            style={[\n              styles.items,\n              {\n                marginBottom: insets.bottom,\n                marginHorizontal: Math.max(insets.left, insets.right),\n                maxWidth: maxTabBarWidth,\n              },\n            ]}\n            accessibilityRole={'tablist'}\n          >\n            {shifting ? (\n              <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                  styles.ripple,\n                  {\n                    // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                    // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                    top: (BAR_HEIGHT - rippleSize) / 2,\n                    left:\n                      tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n                    height: rippleSize,\n                    width: rippleSize,\n                    borderRadius: rippleSize / 2,\n                    backgroundColor: getColor({\n                      route: routes[navigationState.index],\n                    }),\n                    transform: [\n                      {\n                        // Scale to twice the size  to ensure it covers the whole navigation bar\n                        scale: rippleAnim.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0, 8],\n                        }),\n                      },\n                    ],\n                    opacity: rippleAnim.interpolate({\n                      inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                      outputRange: [0, 0, 1, 1],\n                    }),\n                  },\n                ]}\n              />\n            ) : null}\n            {routes.map((route, index) => {\n              const focused = navigationState.index === index;\n              const active = tabsAnims[index];\n\n              // Scale the label up\n              const scale =\n                labeled && shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0.5, 1],\n                    })\n                  : 1;\n\n              // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n              const translateY = labeled\n                ? shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [7, 0],\n                    })\n                  : 0\n                : 7;\n\n              // We render the active icon and label on top of inactive ones and cross-fade them on change.\n              // This trick gives the illusion that we are animating between active and inactive colors.\n              // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n              const activeOpacity = active;\n              const inactiveOpacity = active.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              });\n\n              const badge = getBadge({ route });\n\n              return renderTouchable({\n                key: route.key,\n                route,\n                borderless: true,\n                centered: true,\n                rippleColor: touchColor,\n                onPress: () => handleTabPress(index),\n                testID: getTestID({ route }),\n                accessibilityLabel: getAccessibilityLabel({ route }),\n                // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                accessibilityTraits: focused\n                  ? ['button', 'selected']\n                  : 'button',\n                accessibilityComponentType: 'button',\n                accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n                accessibilityState: { selected: focused },\n                style: styles.item,\n                children: (\n                  <View pointerEvents=\"none\">\n                    <Animated.View\n                      style={[\n                        styles.iconContainer,\n                        { transform: [{ translateY }] },\n                      ]}\n                    >\n                      <Animated.View\n                        style={[styles.iconWrapper, { opacity: activeOpacity }]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: true,\n                            color: activeTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.icon as IconSource}\n                            color={activeTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          { opacity: inactiveOpacity },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: false,\n                            color: inactiveTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.icon as IconSource}\n                            color={inactiveTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <View\n                        style={[\n                          styles.badgeContainer,\n                          {\n                            right:\n                              (badge != null && typeof badge !== 'boolean'\n                                ? String(badge).length * -2\n                                : 0) - 2,\n                          },\n                        ]}\n                      >\n                        {typeof badge === 'boolean' ? (\n                          <Badge visible={badge} size={8} />\n                        ) : (\n                          <Badge visible={badge != null} size={16}>\n                            {badge}\n                          </Badge>\n                        )}\n                      </View>\n                    </Animated.View>\n                    {labeled ? (\n                      <Animated.View\n                        style={[\n                          styles.labelContainer,\n                          { transform: [{ scale }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            { opacity: activeOpacity },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: true,\n                              color: activeTintColor,\n                            })\n                          ) : (\n                            <Text\n                              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                              style={[styles.label, { color: activeTintColor }]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                        {shifting ? null : (\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: inactiveOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: false,\n                                color: inactiveTintColor,\n                              })\n                            ) : (\n                              <Text\n                                maxFontSizeMultiplier={\n                                  labelMaxFontSizeMultiplier\n                                }\n                                selectable={false}\n                                style={[\n                                  styles.label,\n                                  { color: inactiveTintColor },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                        )}\n                      </Animated.View>\n                    ) : (\n                      <View style={styles.labelContainer} />\n                    )}\n                  </View>\n                ),\n              });\n            })}\n          </View>\n        </Animated.View>\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\nBottomNavigation.SceneMap = (scenes: {\n  [key: string]: React.ComponentType<{\n    route: Route;\n    jumpTo: (key: string) => void;\n  }>;\n}) => {\n  return ({\n    route,\n    jumpTo,\n  }: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => (\n    <SceneComponent\n      key={route.key}\n      component={scenes[route.key ? route.key : '']}\n      route={route}\n      jumpTo={jumpTo}\n    />\n  );\n};\n\nexport default withTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}