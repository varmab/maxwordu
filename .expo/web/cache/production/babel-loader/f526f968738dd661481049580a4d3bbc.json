{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"label\",\"accessibilityLabel\",\"accessibilityState\",\"color\",\"disabled\",\"onPress\",\"onLongPress\",\"theme\",\"style\",\"visible\",\"uppercase\",\"testID\",\"animateFrom\",\"extended\",\"iconMode\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Easing from\"react-native-web/dist/exports/Easing\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Surface from\"../../Surface\";import Icon from\"../../Icon\";import TouchableRipple from\"../../TouchableRipple/TouchableRipple\";import{withTheme}from\"../../../core/theming\";import{white,black}from\"../../../styles/colors\";import AnimatedText from\"../../Typography/AnimatedText\";import{getCombinedStyles}from\"./utils\";var SIZE=56;var BORDER_RADIUS=SIZE/2;var SCALE=0.9;var AnimatedFAB=function AnimatedFAB(_ref){var icon=_ref.icon,label=_ref.label,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,accessibilityState=_ref.accessibilityState,customColor=_ref.color,disabled=_ref.disabled,onPress=_ref.onPress,onLongPress=_ref.onLongPress,theme=_ref.theme,style=_ref.style,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,_ref$uppercase=_ref.uppercase,uppercase=_ref$uppercase===void 0?true:_ref$uppercase,testID=_ref.testID,_ref$animateFrom=_ref.animateFrom,animateFrom=_ref$animateFrom===void 0?'right':_ref$animateFrom,_ref$extended=_ref.extended,extended=_ref$extended===void 0?false:_ref$extended,_ref$iconMode=_ref.iconMode,iconMode=_ref$iconMode===void 0?'dynamic':_ref$iconMode,rest=_objectWithoutProperties(_ref,_excluded);var isIOS=Platform.OS==='ios';var isAnimatedFromRight=animateFrom==='right';var isIconStatic=iconMode==='static';var isRTL=I18nManager.isRTL;var _React$useRef=React.useRef(new Animated.Value(visible?1:0)),visibility=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(0)),animFAB=_React$useRef2.current;var scale=theme.animation.scale;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),textWidth=_React$useState2[0],setTextWidth=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),textHeight=_React$useState4[0],setTextHeight=_React$useState4[1];React.useEffect(function(){if(visible){Animated.timing(visibility,{toValue:1,duration:200*scale,useNativeDriver:true}).start();}else{Animated.timing(visibility,{toValue:0,duration:150*scale,useNativeDriver:true}).start();}},[visible,scale,visibility]);var disabledColor=color(theme.dark?white:black).alpha(0.12).rgb().string();var _ref3=StyleSheet.flatten(style)||{},_ref3$backgroundColor=_ref3.backgroundColor,backgroundColor=_ref3$backgroundColor===void 0?disabled?disabledColor:theme.colors.accent:_ref3$backgroundColor;var foregroundColor;if(typeof customColor!=='undefined'){foregroundColor=customColor;}else if(disabled){foregroundColor=color(theme.dark?white:black).alpha(0.32).rgb().string();}else{foregroundColor=!color(backgroundColor).isLight()?white:'rgba(0, 0, 0, .54)';}var rippleColor=color(foregroundColor).alpha(0.32).rgb().string();var extendedWidth=textWidth+1.5*SIZE;var distance=isAnimatedFromRight?-textWidth-BORDER_RADIUS:textWidth+BORDER_RADIUS;React.useEffect(function(){Animated.timing(animFAB,{toValue:!extended?0:distance,duration:150*scale,useNativeDriver:true,easing:Easing.linear}).start();},[animFAB,scale,distance,extended]);var onTextLayout=function onTextLayout(_ref2){var nativeEvent=_ref2.nativeEvent;var currentWidth=Math.ceil(nativeEvent.lines[0].width);var currentHeight=Math.ceil(nativeEvent.lines[0].height);if(currentWidth!==textWidth||currentHeight!==textHeight){setTextHeight(currentHeight);if(isIOS){return setTextWidth(currentWidth-12);}setTextWidth(currentWidth);}};var propForDirection=function propForDirection(right){if(isAnimatedFromRight){return right;}return right.reverse();};var combinedStyles=getCombinedStyles({isAnimatedFromRight:isAnimatedFromRight,isIconStatic:isIconStatic,distance:distance,animFAB:animFAB});return React.createElement(Surface,_extends({},rest,{style:[{opacity:visibility,transform:[{scale:visibility}],elevation:isIOS?6:0},styles.container,disabled&&styles.disabled,style]}),React.createElement(Animated.View,{style:[{transform:[{scaleY:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([SCALE,1])})}]},styles.standard]},React.createElement(View,{style:[StyleSheet.absoluteFill,styles.shadowWrapper]},React.createElement(Animated.View,{pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.shadow,{width:extendedWidth,opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.9*distance,0]),outputRange:propForDirection([1,0.15,0])})}]}),React.createElement(Animated.View,{pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.shadow,{opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.9*distance,0]),outputRange:propForDirection([0,0.85,1])}),width:SIZE,borderRadius:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([SIZE/(extendedWidth/SIZE),BORDER_RADIUS])})},combinedStyles.absoluteFill]})),React.createElement(Animated.View,{pointerEvents:\"box-none\",style:[styles.innerWrapper]},React.createElement(Animated.View,{style:[styles.standard,{width:extendedWidth,backgroundColor:backgroundColor},combinedStyles.innerWrapper]},React.createElement(TouchableRipple,{borderless:true,onPress:onPress,onLongPress:onLongPress,rippleColor:rippleColor,disabled:disabled,accessibilityLabel:accessibilityLabel,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:_objectSpread(_objectSpread({},accessibilityState),{},{disabled:disabled}),testID:testID,style:styles.touchable},React.createElement(View,{style:[styles.standard,{width:extendedWidth}]}))))),React.createElement(Animated.View,{style:[styles.iconWrapper,combinedStyles.iconWrapper],pointerEvents:\"none\"},React.createElement(Icon,{source:icon,size:24,color:foregroundColor})),React.createElement(View,{pointerEvents:\"none\"},React.createElement(AnimatedText,{numberOfLines:1,onTextLayout:isIOS?onTextLayout:undefined,ellipsizeMode:'tail',style:[_defineProperty({},isAnimatedFromRight||isRTL?'right':'left',isIconStatic?isIOS?SIZE-10:SIZE-12:BORDER_RADIUS),{minWidth:textWidth,top:-BORDER_RADIUS-textHeight/2,opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.7*distance,0]),outputRange:propForDirection([1,0,0])}),transform:[{translateX:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([0,SIZE])})}]},styles.label,uppercase&&styles.uppercaseLabel,_objectSpread({color:foregroundColor},theme.fonts.medium)]},label)),!isIOS&&React.createElement(ScrollView,{style:styles.textPlaceholderContainer},React.createElement(Text,{onTextLayout:onTextLayout},label)));};var styles=StyleSheet.create({standard:{height:SIZE,borderRadius:BORDER_RADIUS},disabled:{elevation:0},container:{position:'absolute',backgroundColor:'transparent',borderRadius:BORDER_RADIUS},innerWrapper:{flexDirection:'row',overflow:'hidden',borderRadius:BORDER_RADIUS},shadowWrapper:{elevation:0},shadow:{elevation:6,borderRadius:BORDER_RADIUS},touchable:{borderRadius:BORDER_RADIUS},iconWrapper:{alignItems:'center',justifyContent:'center',position:'absolute',height:SIZE,width:SIZE},label:{position:'absolute'},uppercaseLabel:{textTransform:'uppercase'},textPlaceholderContainer:{height:0,position:'absolute'}});export default withTheme(AnimatedFAB);","map":{"version":3,"sources":["AnimatedFAB.tsx"],"names":["SIZE","BORDER_RADIUS","SCALE","AnimatedFAB","accessibilityLabel","color","visible","uppercase","animateFrom","extended","iconMode","rest","isIOS","Platform","isAnimatedFromRight","isIconStatic","isRTL","current","visibility","React","Animated","animFAB","scale","theme","toValue","duration","useNativeDriver","disabledColor","backgroundColor","disabled","accent","StyleSheet","foregroundColor","rippleColor","extendedWidth","textWidth","distance","easing","Easing","linear","onTextLayout","nativeEvent","currentWidth","Math","currentHeight","setTextHeight","setTextWidth","propForDirection","right","combinedStyles","getCombinedStyles","opacity","transform","elevation","styles","scaleY","inputRange","outputRange","width","borderRadius","touchable","minWidth","top","textHeight","translateX","medium","textPlaceholderContainer","standard","height","container","position","innerWrapper","flexDirection","overflow","shadowWrapper","shadow","iconWrapper","alignItems","justifyContent","label","uppercaseLabel","textTransform","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  Easing,\n  ScrollView,\n  Text,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport Surface from '../../Surface';\nimport Icon from '../../Icon';\nimport TouchableRipple from '../../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport { withTheme } from '../../../core/theming';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport { white, black } from '../../../styles/colors';\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getCombinedStyles } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst BORDER_RADIUS = SIZE / 2;\nconst SCALE = 0.9;\n\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { scale } = theme.animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    StyleSheet.flatten<ViewStyle>(style) || {};\n\n  let foregroundColor: string;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = !color(backgroundColor as string).isLight()\n      ? white\n      : 'rgba(0, 0, 0, .54)';\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  const extendedWidth = textWidth + 1.5 * SIZE;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - BORDER_RADIUS\n    : textWidth + BORDER_RADIUS;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            elevation: isIOS ? 6 : 0,\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Animated.View\n        style={[\n          {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    BORDER_RADIUS,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View pointerEvents=\"box-none\" style={[styles.innerWrapper]}>\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType=\"button\"\n              accessibilityRole=\"button\"\n              accessibilityState={{ ...accessibilityState, disabled }}\n              testID={testID}\n              style={styles.touchable}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? isIOS\n                  ? SIZE - 10\n                  : SIZE - 12\n                : BORDER_RADIUS,\n            },\n            {\n              minWidth: textWidth,\n              top: -BORDER_RADIUS - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            {\n              color: foregroundColor,\n              ...theme.fonts.medium,\n            },\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS,\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS,\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS,\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withTheme(AnimatedFAB);\n"]},"metadata":{},"sourceType":"module"}