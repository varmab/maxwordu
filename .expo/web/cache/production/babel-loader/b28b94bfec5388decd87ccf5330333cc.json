{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"mode\",\"dense\",\"disabled\",\"error\",\"multiline\",\"editable\",\"render\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import TextInputOutlined from\"./TextInputOutlined\";import TextInputFlat from\"./TextInputFlat\";import TextInputIcon from\"./Adornment/TextInputIcon\";import TextInputAffix from\"./Adornment/TextInputAffix\";import{withTheme}from\"../../core/theming\";var BLUR_ANIMATION_DURATION=180;var FOCUS_ANIMATION_DURATION=150;var TextInput=React.forwardRef(function(_ref,ref){var _ref$mode=_ref.mode,mode=_ref$mode===void 0?'flat':_ref$mode,_ref$dense=_ref.dense,dense=_ref$dense===void 0?false:_ref$dense,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,_ref$error=_ref.error,errorProp=_ref$error===void 0?false:_ref$error,_ref$multiline=_ref.multiline,multiline=_ref$multiline===void 0?false:_ref$multiline,_ref$editable=_ref.editable,editable=_ref$editable===void 0?true:_ref$editable,_ref$render=_ref.render,render=_ref$render===void 0?function(props){return React.createElement(NativeTextInput,props);}:_ref$render,rest=_objectWithoutProperties(_ref,_excluded);var isControlled=rest.value!==undefined;var validInputValue=isControlled?rest.value:rest.defaultValue;var _React$useRef=React.useRef(new Animated.Value(validInputValue?0:1)),labeled=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(errorProp?1:0)),error=_React$useRef2.current;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),focused=_React$useState2[0],setFocused=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),placeholder=_React$useState4[0],setPlaceholder=_React$useState4[1];var _React$useState5=React.useState(validInputValue),_React$useState6=_slicedToArray(_React$useState5,2),uncontrolledValue=_React$useState6[0],setUncontrolledValue=_React$useState6[1];var value=isControlled?rest.value:uncontrolledValue;var _React$useState7=React.useState({measured:false,width:0,height:0}),_React$useState8=_slicedToArray(_React$useState7,2),labelLayout=_React$useState8[0],setLabelLayout=_React$useState8[1];var _React$useState9=React.useState({width:null,height:null}),_React$useState10=_slicedToArray(_React$useState9,2),leftLayout=_React$useState10[0],setLeftLayout=_React$useState10[1];var _React$useState11=React.useState({width:null,height:null}),_React$useState12=_slicedToArray(_React$useState11,2),rightLayout=_React$useState12[0],setRightLayout=_React$useState12[1];var timer=React.useRef();var root=React.useRef();var scale=rest.theme.animation.scale;React.useImperativeHandle(ref,function(){return{focus:function focus(){var _root$current;return(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.focus();},clear:function clear(){var _root$current2;return(_root$current2=root.current)===null||_root$current2===void 0?void 0:_root$current2.clear();},setNativeProps:function setNativeProps(args){var _root$current3;return(_root$current3=root.current)===null||_root$current3===void 0?void 0:_root$current3.setNativeProps(args);},isFocused:function isFocused(){var _root$current4;return((_root$current4=root.current)===null||_root$current4===void 0?void 0:_root$current4.isFocused())||false;},blur:function blur(){var _root$current5;return(_root$current5=root.current)===null||_root$current5===void 0?void 0:_root$current5.blur();},forceFocus:function forceFocus(){var _root$current6;return(_root$current6=root.current)===null||_root$current6===void 0?void 0:_root$current6.focus();}};});React.useEffect(function(){if(errorProp){Animated.timing(error,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}else{{Animated.timing(error,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}}},[errorProp,scale,error]);React.useEffect(function(){if(focused||!rest.label){timer.current=setTimeout(function(){return setPlaceholder(rest.placeholder);},50);}else{setPlaceholder('');}return function(){if(timer.current){clearTimeout(timer.current);}};},[focused,rest.label,rest.placeholder]);React.useEffect(function(){if(value||focused){Animated.timing(labeled,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}else{{Animated.timing(labeled,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}}},[focused,value,labeled,scale]);var onLeftAffixLayoutChange=function onLeftAffixLayoutChange(event){setLeftLayout({height:event.nativeEvent.layout.height,width:event.nativeEvent.layout.width});};var onRightAffixLayoutChange=function onRightAffixLayoutChange(event){setRightLayout({width:event.nativeEvent.layout.width,height:event.nativeEvent.layout.height});};var handleFocus=function handleFocus(args){var _rest$onFocus;if(disabled||!editable){return;}setFocused(true);(_rest$onFocus=rest.onFocus)===null||_rest$onFocus===void 0?void 0:_rest$onFocus.call(rest,args);};var handleBlur=function handleBlur(args){var _rest$onBlur;if(!editable){return;}setFocused(false);(_rest$onBlur=rest.onBlur)===null||_rest$onBlur===void 0?void 0:_rest$onBlur.call(rest,args);};var handleChangeText=function handleChangeText(value){var _rest$onChangeText;if(!editable||disabled){return;}if(!isControlled){setUncontrolledValue(value);}(_rest$onChangeText=rest.onChangeText)===null||_rest$onChangeText===void 0?void 0:_rest$onChangeText.call(rest,value);};var handleLayoutAnimatedText=function handleLayoutAnimatedText(e){setLabelLayout({width:e.nativeEvent.layout.width,height:e.nativeEvent.layout.height,measured:true});};var forceFocus=function forceFocus(){var _root$current7;return(_root$current7=root.current)===null||_root$current7===void 0?void 0:_root$current7.focus();};var _rest$maxFontSizeMult=rest.maxFontSizeMultiplier,maxFontSizeMultiplier=_rest$maxFontSizeMult===void 0?1.5:_rest$maxFontSizeMult;if(mode==='outlined'){return React.createElement(TextInputOutlined,_extends({dense:dense,disabled:disabled,error:errorProp,multiline:multiline,editable:editable,render:render},rest,{value:value,parentState:{labeled:labeled,error:error,focused:focused,placeholder:placeholder,value:value,labelLayout:labelLayout,leftLayout:leftLayout,rightLayout:rightLayout},innerRef:function innerRef(ref){root.current=ref;},onFocus:handleFocus,forceFocus:forceFocus,onBlur:handleBlur,onChangeText:handleChangeText,onLayoutAnimatedText:handleLayoutAnimatedText,onLeftAffixLayoutChange:onLeftAffixLayoutChange,onRightAffixLayoutChange:onRightAffixLayoutChange,maxFontSizeMultiplier:maxFontSizeMultiplier}));}return React.createElement(TextInputFlat,_extends({dense:dense,disabled:disabled,error:errorProp,multiline:multiline,editable:editable,render:render},rest,{value:value,parentState:{labeled:labeled,error:error,focused:focused,placeholder:placeholder,value:value,labelLayout:labelLayout,leftLayout:leftLayout,rightLayout:rightLayout},innerRef:function innerRef(ref){root.current=ref;},onFocus:handleFocus,forceFocus:forceFocus,onBlur:handleBlur,onChangeText:handleChangeText,onLayoutAnimatedText:handleLayoutAnimatedText,onLeftAffixLayoutChange:onLeftAffixLayoutChange,onRightAffixLayoutChange:onRightAffixLayoutChange,maxFontSizeMultiplier:maxFontSizeMultiplier}));});TextInput.Icon=TextInputIcon;TextInput.Affix=TextInputAffix;export default withTheme(TextInput);","map":{"version":3,"sources":["TextInput.tsx"],"names":["BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","TextInput","mode","dense","disabled","error","errorProp","multiline","editable","render","props","rest","isControlled","validInputValue","current","labeled","React","Animated","value","measured","width","height","timer","root","scale","focus","clear","setNativeProps","args","isFocused","blur","forceFocus","toValue","duration","useNativeDriver","focused","setTimeout","setPlaceholder","clearTimeout","onLeftAffixLayoutChange","event","setLeftLayout","onRightAffixLayoutChange","setRightLayout","handleFocus","setFocused","handleBlur","handleChangeText","setUncontrolledValue","handleLayoutAnimatedText","e","setLabelLayout","maxFontSizeMultiplier","placeholder","labelLayout","leftLayout","rightLayout","ref","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  TextInput as NativeTextInput,\n  LayoutChangeEvent,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport TextInputOutlined from './TextInputOutlined';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport { withTheme } from '../../core/theming';\nimport type { RenderProps, TextInputLabelProp } from './types';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type TextInputProps = React.ComponentPropsWithRef<\n  typeof NativeTextInput\n> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input\n   */\n  selectionColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    TextInputProps & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\n>;\n\n/**\n * A component to allow users to input text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.focused.png\" />\n *     <figcaption>Flat (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.disabled.png\" />\n *     <figcaption>Flat (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.focused.png\" />\n *     <figcaption>Outlined (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.disabled.png\" />\n *     <figcaption>Outlined (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\n\nconst TextInput = React.forwardRef<TextInputHandles, TextInputProps>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      render = (props: RenderProps) => <NativeTextInput {...props} />,\n      ...rest\n    }: TextInputProps,\n    ref\n  ) => {\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [placeholder, setPlaceholder] = React.useState<string | undefined>(\n      ''\n    );\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = rest.theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // Set the placeholder in a delay to offset the label animation\n        // If we show it immediately, they'll overlap and look ugly\n        timer.current = setTimeout(\n          () => setPlaceholder(rest.placeholder),\n          50\n        ) as unknown as NodeJS.Timeout;\n      } else {\n        // hidePlaceholder\n        setPlaceholder('');\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        {\n          Animated.timing(labeled, {\n            toValue: 1,\n            duration: FOCUS_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setLeftLayout({\n        height: event.nativeEvent.layout.height,\n        width: event.nativeEvent.layout.width,\n      });\n    };\n\n    const onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setRightLayout({\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height,\n      });\n    };\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\n      setLabelLayout({\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n        measured: true,\n      });\n    };\n    const forceFocus = () => root.current?.focus();\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            placeholder,\n            value,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          placeholder,\n          value,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default withTheme(TextInput);\n"]},"metadata":{},"sourceType":"module"}