{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"visible\",\"action\",\"duration\",\"onDismiss\",\"children\",\"wrapperStyle\",\"style\",\"theme\"],_excluded2=[\"style\",\"label\",\"onPress\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Button from\"./Button\";import Surface from\"./Surface\";import Text from\"./Typography/Text\";import{withTheme}from\"../core/theming\";var DURATION_SHORT=4000;var DURATION_MEDIUM=7000;var DURATION_LONG=10000;var Snackbar=function Snackbar(_ref){var visible=_ref.visible,action=_ref.action,_ref$duration=_ref.duration,duration=_ref$duration===void 0?DURATION_MEDIUM:_ref$duration,onDismiss=_ref.onDismiss,children=_ref.children,wrapperStyle=_ref.wrapperStyle,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var _React$useRef=React.useRef(new Animated.Value(0.0)),opacity=_React$useRef.current;var _React$useState=React.useState(!visible),_React$useState2=_slicedToArray(_React$useState,2),hidden=_React$useState2[0],setHidden=_React$useState2[1];var hideTimeout=React.useRef(undefined);var scale=theme.animation.scale;React.useEffect(function(){return function(){if(hideTimeout.current)clearTimeout(hideTimeout.current);};},[]);React.useLayoutEffect(function(){if(visible){if(hideTimeout.current)clearTimeout(hideTimeout.current);setHidden(false);Animated.timing(opacity,{toValue:1,duration:200*scale,useNativeDriver:true}).start(function(_ref2){var finished=_ref2.finished;if(finished){var isInfinity=duration===Number.POSITIVE_INFINITY||duration===Number.NEGATIVE_INFINITY;if(finished&&!isInfinity){hideTimeout.current=setTimeout(onDismiss,duration);}}});}else{if(hideTimeout.current)clearTimeout(hideTimeout.current);Animated.timing(opacity,{toValue:0,duration:100*scale,useNativeDriver:true}).start(function(_ref3){var finished=_ref3.finished;if(finished)setHidden(true);});}},[visible,duration,opacity,scale,onDismiss]);var colors=theme.colors,roundness=theme.roundness;if(hidden)return null;var _ref4=action||{},actionStyle=_ref4.style,actionLabel=_ref4.label,onPressAction=_ref4.onPress,actionProps=_objectWithoutProperties(_ref4,_excluded2);return React.createElement(SafeAreaView,{pointerEvents:\"box-none\",style:[styles.wrapper,wrapperStyle]},React.createElement(Surface,_extends({pointerEvents:\"box-none\",accessibilityLiveRegion:\"polite\",style:[styles.container,{borderRadius:roundness,opacity:opacity,transform:[{scale:visible?opacity.interpolate({inputRange:[0,1],outputRange:[0.9,1]}):1}]},{backgroundColor:colors.onSurface},style]},rest),React.createElement(Text,{style:[styles.content,{marginRight:action?0:16,color:colors.surface}]},children),action?React.createElement(Button,_extends({onPress:function onPress(){onPressAction===null||onPressAction===void 0?void 0:onPressAction();onDismiss();},style:[styles.button,actionStyle],color:colors.accent,compact:true,mode:\"text\"},actionProps),actionLabel):null));};Snackbar.DURATION_SHORT=DURATION_SHORT;Snackbar.DURATION_MEDIUM=DURATION_MEDIUM;Snackbar.DURATION_LONG=DURATION_LONG;var styles=StyleSheet.create({wrapper:{position:'absolute',bottom:0,width:'100%'},container:{elevation:6,flexDirection:'row',justifyContent:'space-between',alignItems:'center',margin:8,borderRadius:4},content:{marginLeft:16,marginVertical:14,flexWrap:'wrap',flex:1},button:{marginHorizontal:8,marginVertical:6}});export default withTheme(Snackbar);","map":{"version":3,"sources":["Snackbar.tsx"],"names":["DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","duration","rest","current","opacity","React","Animated","hideTimeout","scale","theme","clearTimeout","setHidden","toValue","useNativeDriver","finished","isInfinity","Number","setTimeout","roundness","style","label","onPress","actionProps","action","styles","borderRadius","transform","visible","inputRange","outputRange","backgroundColor","colors","onSurface","marginRight","color","surface","onPressAction","onDismiss","wrapper","position","bottom","width","container","elevation","flexDirection","justifyContent","alignItems","margin","content","marginLeft","marginVertical","flexWrap","flex","button","marginHorizontal","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  SafeAreaView,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\n\nimport Button from './Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { withTheme } from '../core/theming';\n\nexport type SnackbarProps = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: Omit<React.ComponentProps<typeof Button>, 'children'> & {\n    label: string;\n  };\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default uses `onSurface` color from theme.\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  wrapperStyle,\n  style,\n  theme,\n  ...rest\n}: SnackbarProps) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const [hidden, setHidden] = React.useState<boolean>(!visible);\n\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      // show\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          const isInfinity =\n            duration === Number.POSITIVE_INFINITY ||\n            duration === Number.NEGATIVE_INFINITY;\n\n          if (finished && !isInfinity) {\n            hideTimeout.current = setTimeout(\n              onDismiss,\n              duration\n            ) as unknown as NodeJS.Timeout;\n          }\n        }\n      });\n    } else {\n      // hide\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) setHidden(true);\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n\n  const { colors, roundness } = theme;\n\n  if (hidden) return null;\n\n  const {\n    style: actionStyle,\n    label: actionLabel,\n    onPress: onPressAction,\n    ...actionProps\n  } = action || {};\n\n  return (\n    <SafeAreaView\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        style={\n          [\n            styles.container,\n            {\n              borderRadius: roundness,\n              opacity: opacity,\n              transform: [\n                {\n                  scale: visible\n                    ? opacity.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.9, 1],\n                      })\n                    : 1,\n                },\n              ],\n            },\n            { backgroundColor: colors.onSurface },\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        {...rest}\n      >\n        <Text\n          style={[\n            styles.content,\n            { marginRight: action ? 0 : 16, color: colors.surface },\n          ]}\n        >\n          {children}\n        </Text>\n        {action ? (\n          <Button\n            onPress={() => {\n              onPressAction?.();\n              onDismiss();\n            }}\n            style={[styles.button, actionStyle]}\n            color={colors.accent}\n            compact\n            mode=\"text\"\n            {...actionProps}\n          >\n            {actionLabel}\n          </Button>\n        ) : null}\n      </Surface>\n    </SafeAreaView>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    elevation: 6,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4,\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6,\n  },\n});\n\nexport default withTheme(Snackbar);\n"]},"metadata":{},"sourceType":"module"}