{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import I18nManager from\"react-native-web/dist/exports/I18nManager\";export var getCombinedStyles=function getCombinedStyles(_ref){var isAnimatedFromRight=_ref.isAnimatedFromRight,isIconStatic=_ref.isIconStatic,distance=_ref.distance,animFAB=_ref.animFAB;var isRTL=I18nManager.isRTL;var defaultPositionStyles={left:-distance,right:undefined};var combinedStyles={innerWrapper:_objectSpread({},defaultPositionStyles),iconWrapper:_objectSpread({},defaultPositionStyles),absoluteFill:{}};var animatedFromRight=isAnimatedFromRight&&!isRTL;var animatedFromRightRTL=isAnimatedFromRight&&isRTL;var animatedFromLeft=!isAnimatedFromRight&&!isRTL;var animatedFromLeftRTL=!isAnimatedFromRight&&isRTL;if(animatedFromRight){combinedStyles.innerWrapper.transform=[{translateX:animFAB.interpolate({inputRange:[distance,0],outputRange:[distance,0]})}];combinedStyles.iconWrapper.transform=[{translateX:isIconStatic?0:animFAB}];combinedStyles.absoluteFill.transform=[{translateX:animFAB.interpolate({inputRange:[distance,0],outputRange:[Math.abs(distance)/2,Math.abs(distance)]})}];}else if(animatedFromRightRTL){combinedStyles.iconWrapper.transform=[{translateX:isIconStatic?0:animFAB.interpolate({inputRange:[distance,0],outputRange:[-distance,0]})}];combinedStyles.innerWrapper.transform=[{translateX:animFAB.interpolate({inputRange:[distance,0],outputRange:[-distance,0]})}];combinedStyles.absoluteFill.transform=[{translateX:animFAB.interpolate({inputRange:[distance,0],outputRange:[0,distance]})}];}else if(animatedFromLeft){combinedStyles.iconWrapper.transform=[{translateX:isIconStatic?distance:animFAB.interpolate({inputRange:[0,distance],outputRange:[distance,distance*2]})}];combinedStyles.innerWrapper.transform=[{translateX:animFAB}];combinedStyles.absoluteFill.transform=[{translateX:animFAB.interpolate({inputRange:[0,distance],outputRange:[0,Math.abs(distance)/2]})}];}else if(animatedFromLeftRTL){combinedStyles.iconWrapper.transform=[{translateX:isIconStatic?animFAB.interpolate({inputRange:[0,distance],outputRange:[-distance,-distance*2]}):-distance}];combinedStyles.innerWrapper.transform=[{translateX:animFAB.interpolate({inputRange:[0,distance],outputRange:[0,-distance]})}];combinedStyles.absoluteFill.transform=[{translateX:animFAB.interpolate({inputRange:[0,distance],outputRange:[0,-distance]})}];}return combinedStyles;};","map":{"version":3,"sources":["utils.ts"],"names":["getCombinedStyles","animFAB","isRTL","defaultPositionStyles","left","right","undefined","combinedStyles","innerWrapper","iconWrapper","absoluteFill","animatedFromRight","isAnimatedFromRight","animatedFromRightRTL","animatedFromLeft","animatedFromLeftRTL","translateX","inputRange","outputRange","isIconStatic","Math","distance"],"mappings":"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","sourcesContent":["import { Animated, I18nManager, ViewStyle } from 'react-native';\n\ntype GetCombinedStylesProps = {\n  isAnimatedFromRight: boolean;\n  isIconStatic: boolean;\n  distance: number;\n  animFAB: Animated.Value;\n};\n\ntype CombinedStyles = {\n  innerWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  iconWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  absoluteFill: Animated.WithAnimatedValue<ViewStyle>;\n};\n\nexport const getCombinedStyles = ({\n  isAnimatedFromRight,\n  isIconStatic,\n  distance,\n  animFAB,\n}: GetCombinedStylesProps): CombinedStyles => {\n  const { isRTL } = I18nManager;\n\n  const defaultPositionStyles = { left: -distance, right: undefined };\n\n  const combinedStyles: CombinedStyles = {\n    innerWrapper: {\n      ...defaultPositionStyles,\n    },\n    iconWrapper: {\n      ...defaultPositionStyles,\n    },\n    absoluteFill: {},\n  };\n\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic ? 0 : animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [Math.abs(distance) / 2, Math.abs(distance)],\n        }),\n      },\n    ];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? 0\n          : animFAB.interpolate({\n              inputRange: [distance, 0],\n              outputRange: [-distance, 0],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [-distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [0, distance],\n        }),\n      },\n    ];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? distance\n          : animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [distance, distance * 2],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, Math.abs(distance) / 2],\n        }),\n      },\n    ];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [-distance, -distance * 2],\n            })\n          : -distance,\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n  }\n\n  return combinedStyles;\n};\n"]},"metadata":{},"sourceType":"module"}