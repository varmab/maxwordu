{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import NativeEventEmitter from\"react-native-web/dist/exports/NativeEventEmitter\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";var deviceInfoEmitter=new NativeEventEmitter(NativeModules.RNDeviceInfo);var batteryCharging=false,batteryLevel=-1,powerState={};var _readPowerState=function _readPowerState(battery){var level=battery.level,charging=battery.charging,chargingtime=battery.chargingtime,dischargingtime=battery.dischargingtime;return{batteryLevel:level,lowPowerMode:false,batteryState:level===1?'full':charging?'charging':'unplugged',chargingtime:chargingtime,dischargingtime:dischargingtime};};export var getMaxMemorySync=function getMaxMemorySync(){if(window.performance&&window.performance.memory){return window.performance.memory.jsHeapSizeLimit;}return-1;};export var getInstallReferrerSync=function getInstallReferrerSync(){return document.referrer;};export var isAirplaneModeSync=function isAirplaneModeSync(){return!!navigator.onLine;};export var getUserAgentSync=function getUserAgentSync(){return window.navigator.userAgent;};export var isLocationEnabledSync=function isLocationEnabledSync(){return!!navigator.geolocation;};export var getTotalMemorySync=function getTotalMemorySync(){if(navigator.deviceMemory){return navigator.deviceMemory*1000000000;}return-1;};export var getUsedMemorySync=function getUsedMemorySync(){if(window.performance&&window.performance.memory){return window.performance.memory.usedJSHeapSize;}return-1;};var init=function _callee(){var battery;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof navigator!=='undefined'&&navigator.getBattery)){_context.next=7;break;}_context.next=3;return _regeneratorRuntime.awrap(navigator.getBattery());case 3:battery=_context.sent;batteryCharging=battery.charging;battery.addEventListener('chargingchange',function(){var charging=battery.charging;batteryCharging=charging;powerState=_readPowerState(battery);deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange',powerState);});battery.addEventListener('levelchange',function(){var level=battery.level;batteryLevel=level;powerState=_readPowerState(battery);deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange',level);if(level<0.2){deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow',level);}});case 7:case\"end\":return _context.stop();}}},null,null,null,Promise);};var getBaseOsSync=function getBaseOsSync(){var userAgent=window.navigator.userAgent,platform=window.navigator.platform,macosPlatforms=['Macintosh','MacIntel','MacPPC','Mac68K'],windowsPlatforms=['Win32','Win64','Windows','WinCE'],iosPlatforms=['iPhone','iPad','iPod'];var os=platform;if(macosPlatforms.indexOf(platform)!==-1){os='Mac OS';}else if(iosPlatforms.indexOf(platform)!==-1){os='iOS';}else if(windowsPlatforms.indexOf(platform)!==-1){os='Windows';}else if(/Android/.test(userAgent)){os='Android';}else if(!os&&/Linux/.test(platform)){os='Linux';}return os;};init();export var getInstallReferrer=function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",getInstallReferrerSync());case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);};export var getUserAgent=function _callee3(){return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",getUserAgentSync());case 1:case\"end\":return _context3.stop();}}},null,null,null,Promise);};export var isBatteryCharging=function _callee4(){var battery;return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!navigator.getBattery){_context4.next=5;break;}_context4.next=3;return _regeneratorRuntime.awrap(navigator.getBattery());case 3:battery=_context4.sent;return _context4.abrupt(\"return\",battery.level);case 5:return _context4.abrupt(\"return\",false);case 6:case\"end\":return _context4.stop();}}},null,null,null,Promise);};export var isBatteryChargingSync=function isBatteryChargingSync(){return batteryCharging;};export var isCameraPresent=function _callee5(){var devices;return _regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!navigator.getBattery){_context5.next=5;break;}_context5.next=3;return _regeneratorRuntime.awrap(navigator.mediaDevices.enumerateDevices());case 3:devices=_context5.sent;return _context5.abrupt(\"return\",!!devices.find(function(d){return d.kind==='videoinput';}));case 5:return _context5.abrupt(\"return\",false);case 6:case\"end\":return _context5.stop();}}},null,null,null,Promise);};export var isCameraPresentSync=function isCameraPresentSync(){console.log('[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent');return false;};export var getBatteryLevel=function _callee6(){var battery;return _regeneratorRuntime.async(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!navigator.getBattery){_context6.next=5;break;}_context6.next=3;return _regeneratorRuntime.awrap(navigator.getBattery());case 3:battery=_context6.sent;return _context6.abrupt(\"return\",battery.level);case 5:return _context6.abrupt(\"return\",-1);case 6:case\"end\":return _context6.stop();}}},null,null,null,Promise);};export var getBatteryLevelSync=function getBatteryLevelSync(){return batteryLevel;};export var isLocationEnabled=function _callee7(){return _regeneratorRuntime.async(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:return _context7.abrupt(\"return\",isLocationEnabledSync());case 1:case\"end\":return _context7.stop();}}},null,null,null,Promise);};export var isAirplaneMode=function _callee8(){return _regeneratorRuntime.async(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:return _context8.abrupt(\"return\",isAirplaneModeSync());case 1:case\"end\":return _context8.stop();}}},null,null,null,Promise);};export var getBaseOs=function _callee9(){return _regeneratorRuntime.async(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt(\"return\",getBaseOsSync());case 1:case\"end\":return _context9.stop();}}},null,null,null,Promise);};export var getTotalDiskCapacity=function _callee10(){var _await$navigator$stor,quota;return _regeneratorRuntime.async(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:if(!(navigator.storage&&navigator.storage.estimate)){_context10.next=6;break;}_context10.next=3;return _regeneratorRuntime.awrap(navigator.storage.estimate());case 3:_await$navigator$stor=_context10.sent;quota=_await$navigator$stor.quota;return _context10.abrupt(\"return\",quota);case 6:return _context10.abrupt(\"return\",-1);case 7:case\"end\":return _context10.stop();}}},null,null,null,Promise);};export var getTotalDiskCapacitySync=function getTotalDiskCapacitySync(){console.log('[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity');return-1;};export var getFreeDiskStorage=function _callee11(){var _await$navigator$stor2,quota,usage;return _regeneratorRuntime.async(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:if(!(navigator.storage&&navigator.storage.estimate)){_context11.next=7;break;}_context11.next=3;return _regeneratorRuntime.awrap(navigator.storage.estimate());case 3:_await$navigator$stor2=_context11.sent;quota=_await$navigator$stor2.quota;usage=_await$navigator$stor2.usage;return _context11.abrupt(\"return\",quota-usage);case 7:return _context11.abrupt(\"return\",-1);case 8:case\"end\":return _context11.stop();}}},null,null,null,Promise);};export var getFreeDiskStorageSync=function getFreeDiskStorageSync(){console.log('[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage');return-1;};export var getMaxMemory=function _callee12(){return _regeneratorRuntime.async(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:return _context12.abrupt(\"return\",getMaxMemorySync());case 1:case\"end\":return _context12.stop();}}},null,null,null,Promise);};export var getUsedMemory=function _callee13(){return _regeneratorRuntime.async(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:return _context13.abrupt(\"return\",getUsedMemorySync());case 1:case\"end\":return _context13.stop();}}},null,null,null,Promise);};export var getTotalMemory=function _callee14(){return _regeneratorRuntime.async(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:return _context14.abrupt(\"return\",getTotalMemorySync());case 1:case\"end\":return _context14.stop();}}},null,null,null,Promise);};export var getPowerState=function _callee15(){var battery;return _regeneratorRuntime.async(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:if(!navigator.getBattery){_context15.next=5;break;}_context15.next=3;return _regeneratorRuntime.awrap(navigator.getBattery());case 3:battery=_context15.sent;return _context15.abrupt(\"return\",_readPowerState(battery));case 5:return _context15.abrupt(\"return\",{});case 6:case\"end\":return _context15.stop();}}},null,null,null,Promise);};export var getPowerStateSync=function getPowerStateSync(){return powerState;};","map":{"version":3,"sources":["index.js"],"names":["deviceInfoEmitter","NativeModules","batteryCharging","batteryLevel","powerState","_readPowerState","battery","dischargingtime","lowPowerMode","batteryState","level","charging","chargingtime","getMaxMemorySync","window","getInstallReferrerSync","document","isAirplaneModeSync","navigator","getUserAgentSync","isLocationEnabledSync","getTotalMemorySync","getUsedMemorySync","init","getBaseOsSync","userAgent","platform","macosPlatforms","windowsPlatforms","iosPlatforms","os","getInstallReferrer","getUserAgent","isBatteryCharging","isBatteryChargingSync","isCameraPresent","devices","d","isCameraPresentSync","console","getBatteryLevel","getBatteryLevelSync","isLocationEnabled","isAirplaneMode","getBaseOs","getTotalDiskCapacity","quota","getTotalDiskCapacitySync","getFreeDiskStorage","usage","getFreeDiskStorageSync","getMaxMemory","getUsedMemory","getTotalMemory","getPowerState","getPowerStateSync"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\n\nlet batteryCharging = false,\n  batteryLevel = -1,\n  powerState = {};\n\nconst _readPowerState = (battery) => {\n  const { level, charging, chargingtime, dischargingtime } = battery;\n\n  return {\n    batteryLevel: level,\n    lowPowerMode: false,\n    batteryState: level === 1 ? 'full' : charging ? 'charging' : 'unplugged',\n    chargingtime,\n    dischargingtime,\n  };\n};\n\nexport const getMaxMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.jsHeapSizeLimit;\n  }\n  return -1;\n};\n\nexport const getInstallReferrerSync = () => {\n  return document.referrer;\n};\n\nexport const isAirplaneModeSync = () => {\n  return !!navigator.onLine;\n};\n\nexport const getUserAgentSync = () => {\n  return window.navigator.userAgent;\n};\n\nexport const isLocationEnabledSync = () => {\n  return !!navigator.geolocation;\n};\n\nexport const getTotalMemorySync = () => {\n  if (navigator.deviceMemory) {\n    return navigator.deviceMemory * 1000000000;\n  }\n  return -1;\n};\n\nexport const getUsedMemorySync = () => {\n  if (window.performance && window.performance.memory) {\n    return window.performance.memory.usedJSHeapSize;\n  }\n  return -1;\n};\n\nconst init = async () => {\n  if (typeof navigator !== 'undefined' && navigator.getBattery) {\n    const battery = await navigator.getBattery();\n\n    batteryCharging = battery.charging;\n\n    battery.addEventListener('chargingchange', () => {\n      const { charging } = battery;\n\n      batteryCharging = charging;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_powerStateDidChange', powerState);\n    });\n\n    battery.addEventListener('levelchange', () => {\n      const { level } = battery;\n\n      batteryLevel = level;\n      powerState = _readPowerState(battery);\n\n      deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelDidChange', level);\n      if (level < 0.2) {\n        deviceInfoEmitter.emit('RNDeviceInfo_batteryLevelIsLow', level);\n      }\n    });\n  }\n};\n\nconst getBaseOsSync = () => {\n  const userAgent = window.navigator.userAgent,\n    platform = window.navigator.platform,\n    macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n    windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n    iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n\n  let os = platform;\n\n  if (macosPlatforms.indexOf(platform) !== -1) {\n    os = 'Mac OS';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    os = 'iOS';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = 'Windows';\n  } else if (/Android/.test(userAgent)) {\n    os = 'Android';\n  } else if (!os && /Linux/.test(platform)) {\n    os = 'Linux';\n  }\n\n  return os;\n};\n\ninit();\n/**\n * react-native-web empty polyfill.\n */\n\nexport const getInstallReferrer = async () => {\n  return getInstallReferrerSync();\n};\n\nexport const getUserAgent = async () => {\n  return getUserAgentSync();\n};\n\nexport const isBatteryCharging = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n    return battery.level;\n  }\n  return false;\n};\n\nexport const isBatteryChargingSync = () => {\n  return batteryCharging;\n};\n\nexport const isCameraPresent = async () => {\n  if (navigator.getBattery) {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    return !!devices.find((d) => d.kind === 'videoinput');\n  }\n  return false;\n};\n\nexport const isCameraPresentSync = () => {\n  console.log(\n    '[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent'\n  );\n  return false;\n};\n\nexport const getBatteryLevel = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n    return battery.level;\n  }\n  return -1;\n};\n\nexport const getBatteryLevelSync = () => {\n  return batteryLevel;\n};\n\nexport const isLocationEnabled = async () => {\n  return isLocationEnabledSync();\n};\n\nexport const isAirplaneMode = async () => {\n  return isAirplaneModeSync();\n};\n\nexport const getBaseOs = async () => {\n  return getBaseOsSync();\n};\n\nexport const getTotalDiskCapacity = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    const { quota } = await navigator.storage.estimate();\n    return quota;\n  }\n  return -1;\n};\n\nexport const getTotalDiskCapacitySync = () => {\n  console.log(\n    '[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity'\n  );\n  return -1;\n};\n\nexport const getFreeDiskStorage = async () => {\n  if (navigator.storage && navigator.storage.estimate) {\n    const { quota, usage } = await navigator.storage.estimate();\n    return quota - usage;\n  }\n  return -1;\n};\n\nexport const getFreeDiskStorageSync = () => {\n  console.log(\n    '[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage'\n  );\n  return -1;\n};\n\nexport const getMaxMemory = async () => {\n  return getMaxMemorySync();\n};\n\nexport const getUsedMemory = async () => {\n  return getUsedMemorySync();\n};\n\nexport const getTotalMemory = async () => {\n  return getTotalMemorySync();\n};\n\nexport const getPowerState = async () => {\n  if (navigator.getBattery) {\n    const battery = await navigator.getBattery();\n\n    return _readPowerState(battery);\n  }\n  return {};\n};\n\nexport const getPowerStateSync = () => {\n  return powerState;\n};\n"]},"metadata":{},"sourceType":"module"}