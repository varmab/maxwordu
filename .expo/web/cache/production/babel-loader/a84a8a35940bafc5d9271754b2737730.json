{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"textStyle\",\"style\",\"numeric\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"../Typography/Text\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";var DataTableCell=function DataTableCell(_ref){var children=_ref.children,textStyle=_ref.textStyle,style=_ref.style,numeric=_ref.numeric,rest=_objectWithoutProperties(_ref,_excluded);return React.createElement(TouchableRipple,_extends({},rest,{style:[styles.container,numeric&&styles.right,style]}),React.createElement(Text,{style:textStyle,numberOfLines:1},children));};DataTableCell.displayName='DataTable.Cell';var styles=StyleSheet.create({container:{flex:1,flexDirection:'row',alignItems:'center'},right:{justifyContent:'flex-end'}});export default DataTableCell;","map":{"version":3,"sources":["DataTableCell.tsx"],"names":["DataTableCell","rest","styles","numeric","container","flex","flexDirection","alignItems","right","justifyContent"],"mappings":"qaAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,iEAEA,MAAA,CAAA,IAAA,0BACA,MAAA,CAAA,eAAA,0CAsDA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAA,IAAA,CAAA,CAAA,GAAC,CAAA,QAAD,CAAA,IAAA,CAAC,QAAD,CAAC,SAAD,CAAA,IAAA,CAAC,SAAD,CAAC,KAAD,CAAA,IAAA,CAAC,KAAD,CAAC,OAAD,CAAA,IAAA,CAAC,OAAD,CAKjBC,IALiB,0BAAA,IAAA,YAAA,MAOpB,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAAE,CAACC,MAAM,CAAP,SAAA,CAAmBC,OAAO,EAAID,MAAM,CAApC,KAAA,CAAA,KAAA,CAFT,CAAA,CAAA,CAIE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAX,SAAA,CAAwB,aAAa,CAAE,CAAvC,CAAA,CAXkB,QAWlB,CAJF,CAPoB,CAAtB,CAAA,CAiBAF,aAAa,CAAbA,WAAAA,CAAAA,gBAAAA,CAEA,GAAME,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BE,SAAS,CAAE,CACTC,IAAI,CADK,CAAA,CAETC,aAAa,CAFJ,KAAA,CAGTC,UAAU,CAAE,QAHH,CADoB,CAO/BC,KAAK,CAAE,CACLC,cAAc,CAAE,UADX,CAPwB,CAAlB,CAAf,CAYA,cAAA,CAAA,aAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableCell`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({\n  children,\n  textStyle,\n  style,\n  numeric,\n  ...rest\n}: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text style={textStyle} numberOfLines={1}>\n      {children}\n    </Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"]},"metadata":{},"sourceType":"module"}