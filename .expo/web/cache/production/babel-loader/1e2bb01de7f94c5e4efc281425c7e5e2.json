{"ast":null,"code":"import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";export default function useIsKeyboardShown(_ref){var onShow=_ref.onShow,onHide=_ref.onHide;React.useEffect(function(){var willShowSubscription;var willHideSubscription;var didShowSubscription;var didHideSubscription;if(Platform.OS==='ios'){willShowSubscription=Keyboard.addListener('keyboardWillShow',onShow);willHideSubscription=Keyboard.addListener('keyboardWillHide',onHide);}else{didShowSubscription=Keyboard.addListener('keyboardDidShow',onShow);didHideSubscription=Keyboard.addListener('keyboardDidHide',onHide);}return function(){if(Platform.OS==='ios'){var _willShowSubscription,_willHideSubscription;if((_willShowSubscription=willShowSubscription)!==null&&_willShowSubscription!==void 0&&_willShowSubscription.remove){willShowSubscription.remove();}else{Keyboard.removeListener('keyboardWillShow',onShow);}if((_willHideSubscription=willHideSubscription)!==null&&_willHideSubscription!==void 0&&_willHideSubscription.remove){willHideSubscription.remove();}else{Keyboard.removeListener('keyboardWillHide',onHide);}}else{var _didShowSubscription,_didHideSubscription;if((_didShowSubscription=didShowSubscription)!==null&&_didShowSubscription!==void 0&&_didShowSubscription.remove){didShowSubscription.remove();}else{Keyboard.removeListener('keyboardDidShow',onShow);}if((_didHideSubscription=didHideSubscription)!==null&&_didHideSubscription!==void 0&&_didHideSubscription.remove){didHideSubscription.remove();}else{Keyboard.removeListener('keyboardDidHide',onHide);}}};},[onHide,onShow]);}","map":{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["onHide","React","Platform","willShowSubscription","Keyboard","willHideSubscription","didShowSubscription","didHideSubscription"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,0HAOA,cAAe,SAAA,CAAA,kBAAA,CAAA,IAAA,CAAuD,CAA3B,GAAA,CAAA,MAAA,CAA2B,IAA3B,CAAA,MAAA,CAAUA,MAAV,CAA2B,IAA3B,CAAUA,MAAV,CACzCC,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,GAAA,CAAA,oBAAA,CACA,GAAA,CAAA,oBAAA,CACA,GAAA,CAAA,mBAAA,CACA,GAAA,CAAA,mBAAA,CAEA,GAAIC,QAAQ,CAARA,EAAAA,GAAJ,KAAA,CAA2B,CACzBC,oBAAoB,CAAGC,QAAQ,CAARA,WAAAA,CAAAA,kBAAAA,CAAvBD,MAAuBC,CAAvBD,CACAE,oBAAoB,CAAGD,QAAQ,CAARA,WAAAA,CAAAA,kBAAAA,CAAvBC,MAAuBD,CAAvBC,CAFF,CAAA,IAGO,CACLC,mBAAmB,CAAGF,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,CAAtBE,MAAsBF,CAAtBE,CACAC,mBAAmB,CAAGH,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,CAAtBG,MAAsBH,CAAtBG,CACD,CAED,MAAO,WAAM,CACX,GAAIL,QAAQ,CAARA,EAAAA,GAAJ,KAAA,CAA2B,CAAA,GAAA,CAAA,qBAAA,CAAA,qBAAA,CACzB,GAAA,CAAA,qBAAA,CAAA,oBAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,EAAIC,qBAAAA,CAAJ,MAAA,CAAkC,CAChCA,oBAAoB,CAApBA,MAAAA,GADF,CAAA,IAEO,CACLC,QAAQ,CAARA,cAAAA,CAAAA,kBAAAA,CAAAA,MAAAA,EACD,CAED,GAAA,CAAA,qBAAA,CAAA,oBAAA,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,EAAIC,qBAAAA,CAAJ,MAAA,CAAkC,CAChCA,oBAAoB,CAApBA,MAAAA,GADF,CAAA,IAEO,CACLD,QAAQ,CAARA,cAAAA,CAAAA,kBAAAA,CAAAA,MAAAA,EACD,CAXH,CAAA,IAYO,CAAA,GAAA,CAAA,oBAAA,CAAA,oBAAA,CACL,GAAA,CAAA,oBAAA,CAAA,mBAAA,IAAA,IAAA,EAAA,oBAAA,GAAA,IAAA,EAAA,EAAIE,oBAAAA,CAAJ,MAAA,CAAiC,CAC/BA,mBAAmB,CAAnBA,MAAAA,GADF,CAAA,IAEO,CACLF,QAAQ,CAARA,cAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,EACD,CAED,GAAA,CAAA,oBAAA,CAAA,mBAAA,IAAA,IAAA,EAAA,oBAAA,GAAA,IAAA,EAAA,EAAIG,oBAAAA,CAAJ,MAAA,CAAiC,CAC/BA,mBAAmB,CAAnBA,MAAAA,GADF,CAAA,IAEO,CACLH,QAAQ,CAARA,cAAAA,CAAAA,iBAAAA,CAAAA,MAAAA,EACD,CACF,CAzBH,CAAA,CAdFH,CAAAA,CAyCG,CAAA,MAAA,CAzCHA,MAyCG,CAzCHA,EA0CD","sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"]},"metadata":{},"sourceType":"module"}