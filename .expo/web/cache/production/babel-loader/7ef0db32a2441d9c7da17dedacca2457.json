{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"size\",\"style\",\"theme\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Icon from\"../Icon\";import{withTheme}from\"../../core/theming\";import{white}from\"../../styles/colors\";import getContrastingColor from\"../../utils/getContrastingColor\";var defaultSize=64;var Avatar=function Avatar(_ref){var _rest$color;var icon=_ref.icon,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?theme.colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=(_rest$color=rest.color)!==null&&_rest$color!==void 0?_rest$color:getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Icon,{source:icon,color:textColor,size:size*0.6}));};Avatar.displayName='Avatar.Icon';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'}});export default withTheme(Avatar);","map":{"version":3,"sources":["AvatarIcon.tsx"],"names":["defaultSize","Avatar","size","rest","backgroundColor","theme","restStyle","StyleSheet","textColor","getContrastingColor","width","height","borderRadius","styles","container","justifyContent","alignItems","withTheme"],"mappings":"ybAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAEA,MAAA,CAAA,IAAA,eACA,OAAA,SAAA,0BACA,OAAA,KAAA,2BACA,MAAA,CAAA,mBAAA,uCAEA,GAAMA,CAAAA,WAAW,CAAjB,EAAA,CAyCA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAA,IAAA,CAAgE,CAAA,GAAA,CAAA,WAAA,CAA/D,GAAA,CAAA,IAAA,CAA+D,IAA/D,CAAA,IAAA,WAA+D,IAA/D,CAAQC,IAAR,CAAQA,IAAR,oBAAA,WAAA,WAAA,KAAA,CAA+D,IAA/D,CAAA,KAAA,CAAA,KAAA,CAA+D,IAA/D,CAAA,KAAA,CAA6CC,IAA7C,0BAA+D,IAA/D,YACd,UACEI,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GADF,EAAA,6BAAQH,eAAR,CAAQA,eAAR,gCAA0BC,KAAK,CAALA,MAAAA,CAApB,OAAN,uBAAmDC,SAAnD,4CAEA,GAAME,CAAAA,SAAS,CAAA,CAAA,WAAA,CACbL,IAAI,CADS,KAAA,IAAA,IAAA,EAAA,WAAA,GAAA,IAAA,EAAA,CAAA,WAAA,CAEbM,mBAAmB,CAAA,eAAA,CAAA,KAAA,CAFrB,oBAEqB,CAFrB,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACL,CACEC,KAAK,CADP,IAAA,CAEEC,MAAM,CAFR,IAAA,CAGEC,YAAY,CAAEV,IAAI,CAHpB,CAAA,CAIEE,eAAAA,CAAAA,eAJF,CADK,CAOLS,MAAM,CAPD,SAAA,CAAA,SAAA,CADT,CAAA,CAAA,IAAA,CAAA,CAaE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,MAAM,CAAZ,IAAA,CAAoB,KAAK,CAAzB,SAAA,CAAsC,IAAI,CAAEX,IAAI,CAAG,GAAnD,CAAA,CAbF,CADF,CAPF,CAAA,CA0BAD,MAAM,CAANA,WAAAA,CAAAA,aAAAA,CAEA,GAAMY,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,cAAc,CADL,QAAA,CAETC,UAAU,CAAE,QAFH,CADoB,CAAlB,CAAf,CAOA,cAAeC,CAAAA,SAAS,CAAxB,MAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Avatar);\n"]},"metadata":{},"sourceType":"module"}