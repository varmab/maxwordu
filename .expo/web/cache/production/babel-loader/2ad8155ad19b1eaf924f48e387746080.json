{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"size\",\"style\",\"theme\",\"visible\"],_excluded2=[\"backgroundColor\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{white,black}from\"../styles/colors\";import{withTheme}from\"../core/theming\";import getContrastingColor from\"../utils/getContrastingColor\";var defaultSize=20;var Badge=function Badge(_ref){var children=_ref.children,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,theme=_ref.theme,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,rest=_objectWithoutProperties(_ref,_excluded);var _React$useRef=React.useRef(new Animated.Value(visible?1:0)),opacity=_React$useRef.current;var isFirstRendering=React.useRef(true);var scale=theme.animation.scale;React.useEffect(function(){if(isFirstRendering.current){isFirstRendering.current=false;return;}Animated.timing(opacity,{toValue:visible?1:0,duration:150*scale,useNativeDriver:true}).start();},[visible,opacity,scale]);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?theme.colors.notification:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=getContrastingColor(backgroundColor,white,black);var borderRadius=size/2;return React.createElement(Animated.Text,_extends({numberOfLines:1,style:[_objectSpread(_objectSpread({opacity:opacity,backgroundColor:backgroundColor,color:textColor,fontSize:size*0.5},theme.fonts.regular),{},{lineHeight:size,height:size,minWidth:size,borderRadius:borderRadius}),styles.container,restStyle]},rest),children);};export default withTheme(Badge);var styles=StyleSheet.create({container:{alignSelf:'flex-end',textAlign:'center',textAlignVertical:'center',paddingHorizontal:4,overflow:'hidden'}});","map":{"version":3,"sources":["Badge.tsx"],"names":["defaultSize","Badge","size","visible","rest","current","opacity","React","Animated","isFirstRendering","animation","scale","toValue","duration","useNativeDriver","backgroundColor","theme","restStyle","StyleSheet","textColor","getContrastingColor","borderRadius","color","fontSize","lineHeight","height","minWidth","styles","withTheme","container","alignSelf","textAlign","textAlignVertical","paddingHorizontal","overflow"],"mappings":"+wCAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,8HAEA,OAAA,KAAA,CAAA,KAAA,wBACA,OAAA,SAAA,uBACA,MAAA,CAAA,mBAAA,oCAEA,GAAMA,CAAAA,WAAW,CAAjB,EAAA,CAkDA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAA,IAAA,CAOD,CAPE,GAAA,CAAA,QAAA,CAOF,IAPE,CAAA,QAAA,WAOF,IAPE,CAEbC,IAFa,CAEbA,IAFa,oBAAA,WAAA,WAAA,KAAA,CAOF,IAPE,CAAA,KAAA,CAAA,KAAA,CAOF,IAPE,CAAA,KAAA,cAOF,IAPE,CAKbC,OALa,CAKbA,OALa,uBAAA,IAAA,cAMVC,IANU,0BAOF,IAPE,YAQb,kBAA6BG,KAAK,CAALA,MAAAA,CAC3B,GAAIC,CAAAA,QAAQ,CAAZ,KAAA,CAAmBL,OAAO,CAAA,CAAA,CAD5B,CACE,CAD2BI,CAA7B,CAAiBD,OAAjB,eAAQD,OAAR,CAGA,GAAMI,CAAAA,gBAAgB,CAAGF,KAAK,CAALA,MAAAA,CAAzB,IAAyBA,CAAzB,CAEA,GACeI,CAAAA,KADf,CAAA,KAAA,CACED,SADF,CACeC,KADf,CAIAJ,KAAK,CAALA,SAAAA,CAAgB,UAAM,CAEpB,GAAIE,gBAAgB,CAApB,OAAA,CAA8B,CAC5BA,gBAAgB,CAAhBA,OAAAA,CAAAA,KAAAA,CACA,OACD,CAEDD,QAAQ,CAARA,MAAAA,CAAAA,OAAAA,CAAyB,CACvBI,OAAO,CAAET,OAAO,CAAA,CAAA,CADO,CAAA,CAEvBU,QAAQ,CAAE,IAFa,KAAA,CAGvBC,eAAe,CAAE,IAHM,CAAzBN,EAAAA,KAAAA,GAPFD,CAAAA,CAYG,CAAA,OAAA,CAAA,OAAA,CAZHA,KAYG,CAZHA,EAcA,UACGW,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GADH,EAAA,6BAAQH,eAAR,CAAQA,eAAR,gCAA0BC,KAAK,CAALA,MAAAA,CAApB,YAAN,uBAAwDC,SAAxD,4CAGA,GAAME,CAAAA,SAAS,CAAGC,mBAAmB,CAAA,eAAA,CAAA,KAAA,CAArC,KAAqC,CAArC,CAEA,GAAMC,CAAAA,YAAY,CAAGnB,IAAI,CAAzB,CAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,aAAa,CADf,CAAA,CAEE,KAAK,CAAE,8BAEHI,OADF,CACEA,OAFG,CAGHS,eAFF,CAEEA,eAHG,CAIHO,KAAK,CAHP,SADK,CAKHC,QAAQ,CAAErB,IAAI,CAJhB,GADK,EAMAc,KAAK,CAALA,KAAAA,CALL,OADK,MAOHQ,UAAU,CANZ,IADK,CAQHC,MAAM,CAPR,IADK,CASHC,QAAQ,CARV,IADK,CAUHL,YAAAA,CAAAA,YAVG,GAYLM,MAAM,CAZD,SAAA,CAAA,SAAA,CAFT,CAAA,CAAA,IAAA,CAAA,CADF,QACE,CADF,CAtCF,CAAA,CA+DA,cAAeC,CAAAA,SAAS,CAAxB,KAAwB,CAAxB,CAEA,GAAMD,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BE,SAAS,CAAE,CACTC,SAAS,CADA,UAAA,CAETC,SAAS,CAFA,QAAA,CAGTC,iBAAiB,CAHR,QAAA,CAITC,iBAAiB,CAJR,CAAA,CAKTC,QAAQ,CAAE,QALD,CADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport { white, black } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nimport getContrastingColor from '../utils/getContrastingColor';\n\nconst defaultSize = 20;\n\ntype Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible?: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-1.png\" />\n *     <figcaption>Badge with content</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-2.png\" />\n *     <figcaption>Badge without content</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = ({\n  children,\n  size = defaultSize,\n  style,\n  theme,\n  visible = true,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [visible, opacity, scale]);\n\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    (StyleSheet.flatten(style) || {}) as TextStyle;\n\n  const textColor = getContrastingColor(backgroundColor, white, black);\n\n  const borderRadius = size / 2;\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          backgroundColor,\n          color: textColor,\n          fontSize: size * 0.5,\n          ...theme.fonts.regular,\n          lineHeight: size,\n          height: size,\n          minWidth: size,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n};\n\nexport default withTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}