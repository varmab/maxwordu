{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends from\"@babel/runtime/helpers/extends\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import AccessibilityInfo from\"react-native-web/dist/exports/AccessibilityInfo\";import Appearance from\"react-native-web/dist/exports/Appearance\";import{ThemeProvider}from\"./theming\";import{Provider as SettingsProvider}from\"./settings\";import MaterialCommunityIcon from\"../components/MaterialCommunityIcon\";import PortalHost from\"../components/Portal/PortalHost\";import DefaultTheme from\"../styles/DefaultTheme\";import DarkTheme from\"../styles/DarkTheme\";import{addEventListener}from\"../utils/addEventListener\";var Provider=function Provider(_ref){var props=_extends({},_ref);var colorSchemeName=!props.theme&&(Appearance===null||Appearance===void 0?void 0:Appearance.getColorScheme())||'light';var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),reduceMotionEnabled=_React$useState2[0],setReduceMotionEnabled=_React$useState2[1];var _React$useState3=React.useState(colorSchemeName),_React$useState4=_slicedToArray(_React$useState3,2),colorScheme=_React$useState4[0],setColorScheme=_React$useState4[1];var handleAppearanceChange=function handleAppearanceChange(preferences){var colorScheme=preferences.colorScheme;setColorScheme(colorScheme);};React.useEffect(function(){var subscription;if(!props.theme){subscription=addEventListener(AccessibilityInfo,'reduceMotionChanged',setReduceMotionEnabled);}return function(){if(!props.theme){var _subscription;(_subscription=subscription)===null||_subscription===void 0?void 0:_subscription.remove();}};},[props.theme]);React.useEffect(function(){var appearanceSubscription;if(!props.theme){appearanceSubscription=Appearance===null||Appearance===void 0?void 0:Appearance.addChangeListener(handleAppearanceChange);}return function(){if(!props.theme){if(appearanceSubscription){appearanceSubscription.remove();}else{Appearance===null||Appearance===void 0?void 0:Appearance.removeChangeListener(handleAppearanceChange);}}};},[props.theme]);var getTheme=function getTheme(){var providedTheme=props.theme;if(providedTheme){return providedTheme;}else{var theme=colorScheme==='dark'?DarkTheme:DefaultTheme;return _objectSpread(_objectSpread({},theme),{},{animation:_objectSpread(_objectSpread({},theme.animation),{},{scale:reduceMotionEnabled?0:1})});}};var children=props.children,settings=props.settings;return React.createElement(PortalHost,null,React.createElement(SettingsProvider,{value:settings||{icon:MaterialCommunityIcon}},React.createElement(ThemeProvider,{theme:getTheme()},children)));};export default Provider;","map":{"version":3,"sources":["Provider.tsx"],"names":["Provider","props","colorSchemeName","Appearance","React","handleAppearanceChange","preferences","colorScheme","setColorScheme","subscription","addEventListener","appearanceSubscription","getTheme","theme","providedTheme","animation","scale","reduceMotionEnabled","settings","icon","MaterialCommunityIcon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\nimport { addEventListener } from '../utils/addEventListener';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (\n        colorScheme === 'dark' ? DarkTheme : DefaultTheme\n      ) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}