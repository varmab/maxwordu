{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onPress\",\"style\",\"theme\",\"children\",\"pointerEvents\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";var DataTableRow=function DataTableRow(_ref){var onPress=_ref.onPress,style=_ref.style,theme=_ref.theme,children=_ref.children,pointerEvents=_ref.pointerEvents,rest=_objectWithoutProperties(_ref,_excluded);var borderBottomColor=color(theme.dark?white:black).alpha(0.12).rgb().string();return React.createElement(TouchableRipple,_extends({},rest,{onPress:onPress,style:[styles.container,{borderBottomColor:borderBottomColor},style]}),React.createElement(View,{style:styles.content,pointerEvents:pointerEvents},children));};DataTableRow.displayName='DataTable.Row';var styles=StyleSheet.create({container:{borderStyle:'solid',borderBottomWidth:StyleSheet.hairlineWidth,minHeight:48,paddingHorizontal:16},content:{flex:1,flexDirection:'row'}});export default withTheme(DataTableRow);export{DataTableRow};","map":{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","rest","borderBottomColor","color","theme","styles","pointerEvents","container","borderStyle","borderBottomWidth","StyleSheet","minHeight","paddingHorizontal","content","flex","flexDirection","withTheme"],"mappings":"ibAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,KAAA,KAAA,OAAA,C,sHAQA,MAAA,CAAA,eAAA,0CACA,OAAA,KAAA,CAAA,KAAA,2BACA,OAAA,SAAA,0BAmDA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAA,IAAA,CAOR,CAPS,GAAA,CAAA,OAAA,CAOT,IAPS,CAAA,OAAA,CAAA,KAAA,CAOT,IAPS,CAAA,KAAA,CAAA,KAAA,CAOT,IAPS,CAAA,KAAA,CAAA,QAAA,CAOT,IAPS,CAAA,QAAA,CAAA,aAAA,CAOT,IAPS,CAAA,aAAA,CAMjBC,IANiB,0BAOT,IAPS,YAQpB,GAAMC,CAAAA,iBAAiB,CAAGC,KAAK,CAACC,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAAND,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAA1B,MAA0BA,EAA1B,CAKA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,OAAO,CAFT,OAAA,CAGE,KAAK,CAAE,CAACE,MAAM,CAAP,SAAA,CAAmB,CAAEH,iBAAAA,CAAAA,iBAAF,CAAnB,CAAA,KAAA,CAHT,CAAA,CAAA,CAKE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEG,MAAM,CAAnB,OAAA,CAA6B,aAAa,CAAEC,aAA5C,CAAA,CANJ,QAMI,CALF,CADF,CAbF,CAAA,CA0BAN,YAAY,CAAZA,WAAAA,CAAAA,eAAAA,CAEA,GAAMK,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BE,SAAS,CAAE,CACTC,WAAW,CADF,OAAA,CAETC,iBAAiB,CAAEC,UAAU,CAFpB,aAAA,CAGTC,SAAS,CAHA,EAAA,CAITC,iBAAiB,CAAE,EAJV,CADoB,CAO/BC,OAAO,CAAE,CACPC,IAAI,CADG,CAAA,CAEPC,aAAa,CAAE,KAFR,CAPsB,CAAlB,CAAf,CAaA,cAAeC,CAAAA,SAAS,CAAxB,YAAwB,CAAxB,CAGA,OAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * `pointerEvents` passed to the `View` container, which is wrapping children within `TouchableRipple`.\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({\n  onPress,\n  style,\n  theme,\n  children,\n  pointerEvents,\n  ...rest\n}: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content} pointerEvents={pointerEvents}>\n        {children}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nDataTableRow.displayName = 'DataTable.Row';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}