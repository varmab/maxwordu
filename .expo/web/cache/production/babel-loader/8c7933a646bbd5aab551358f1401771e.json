{"ast":null,"code":"export var handlePress=function handlePress(_ref){var onPress=_ref.onPress,value=_ref.value,onValueChange=_ref.onValueChange;if(onPress&&onValueChange){console.warn(\"onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead\");}onValueChange?onValueChange(value):onPress===null||onPress===void 0?void 0:onPress();};export var isChecked=function isChecked(_ref2){var value=_ref2.value,status=_ref2.status,contextValue=_ref2.contextValue;if(contextValue!==undefined&&contextValue!==null){return contextValue===value?'checked':'unchecked';}else{return status;}};","map":{"version":3,"sources":["utils.ts"],"names":["handlePress","onValueChange","onPress","console","isChecked","contextValue"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAA,IAAA,CAQrB,CARsB,GAAA,CAAA,OAAA,CAQtB,IARsB,CAAA,OAAA,CAAA,KAAA,CAQtB,IARsB,CAAA,KAAA,CAG1BC,aAH0B,CAQtB,IARsB,CAG1BA,aAH0B,CAS1B,GAAIC,OAAO,EAAX,aAAA,CAA8B,CAC5BC,OAAO,CAAPA,IAAAA,6FAGD,CAEDF,aAAa,CAAGA,aAAa,CAAhB,KAAgB,CAAhB,CAA0BC,OAA1B,GAAA,IAA0BA,EAAAA,OAA1B,GAAA,IAAA,EAA0BA,CAA1B,IAAA,EAA0BA,CAAAA,OAAvCD,EAAAA,CAfK,CAAA,CAkBP,MAAO,IAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAA,KAAA,CAQnB,CARoB,GAAA,CAAA,KAAA,CAQpB,KARoB,CAAA,KAAA,CAAA,MAAA,CAQpB,KARoB,CAAA,MAAA,CAGxBC,YAHwB,CAQpB,KARoB,CAGxBA,YAHwB,CASxB,GAAIA,YAAY,GAAZA,SAAAA,EAA8BA,YAAY,GAA9C,IAAA,CAAyD,CACvD,MAAOA,CAAAA,YAAY,GAAZA,KAAAA,CAAAA,SAAAA,CAAP,WAAA,CADF,CAAA,IAEO,CACL,MAAA,CAAA,MAAA,CACD,CAbI,CAAA","sourcesContent":["export const handlePress = ({\n  onPress,\n  value,\n  onValueChange,\n}: {\n  onPress?: () => void;\n  value: string;\n  onValueChange?: (value: string) => void;\n}) => {\n  if (onPress && onValueChange) {\n    console.warn(\n      `onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`\n    );\n  }\n\n  onValueChange ? onValueChange(value) : onPress?.();\n};\n\nexport const isChecked = ({\n  value,\n  status,\n  contextValue,\n}: {\n  value: string;\n  status?: 'checked' | 'unchecked';\n  contextValue?: string;\n}) => {\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}