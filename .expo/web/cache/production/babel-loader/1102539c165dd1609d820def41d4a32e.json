{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\",\"title\",\"titleStyle\",\"style\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ListSubheader from\"./ListSubheader\";import{withTheme}from\"../../core/theming\";var ListSection=function ListSection(_ref){var children=_ref.children,title=_ref.title,titleStyle=_ref.titleStyle,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);return React.createElement(View,_extends({},rest,{style:[styles.container,style]}),title?React.createElement(ListSubheader,{style:titleStyle},title):null,children);};ListSection.displayName='List.Section';var styles=StyleSheet.create({container:{marginVertical:8}});export default withTheme(ListSection);","map":{"version":3,"sources":["ListSection.tsx"],"names":["ListSection","rest","styles","title","titleStyle","container","marginVertical","withTheme"],"mappings":"oaAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAQA,MAAA,CAAA,aAAA,uBACA,OAAA,SAAA,0BAgDA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAA,IAAA,CAAA,CAAA,GAAC,CAAA,QAAD,CAAA,IAAA,CAAC,QAAD,CAAC,KAAD,CAAA,IAAA,CAAC,KAAD,CAAC,UAAD,CAAA,IAAA,CAAC,UAAD,CAAC,KAAD,CAAA,IAAA,CAAC,KAAD,CAKfC,IALe,0BAAA,IAAA,YAAA,MAOlB,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAgB,KAAK,CAAE,CAACC,MAAM,CAAP,SAAA,CAAA,KAAA,CAAvB,CAAA,CAAA,CACGC,KAAK,CAAG,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CAAe,KAAK,CAAEC,UAAtB,CAAA,CAAH,KAAG,CAAH,CADR,IAAA,CAPkB,QAOlB,CAPkB,CAApB,CAAA,CAaAJ,WAAW,CAAXA,WAAAA,CAAAA,cAAAA,CAEA,GAAME,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BG,SAAS,CAAE,CACTC,cAAc,CAAE,CADP,CADoB,CAAlB,CAAf,CAMA,cAAeC,CAAAA,SAAS,CAAxB,WAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport ListSubheader from './ListSubheader';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title text for the section.\n   */\n  title?: string;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to group list items.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/list-section.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Section>\n *     <List.Subheader>Some title</List.Subheader>\n *     <List.Item title=\"First Item\" left={() => <List.Icon icon=\"folder\" />} />\n *     <List.Item\n *       title=\"Second Item\"\n *       left={() => <List.Icon color=\"#000\" icon=\"folder\" />}\n *     />\n *   </List.Section>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListSection = ({\n  children,\n  title,\n  titleStyle,\n  style,\n  ...rest\n}: Props) => (\n  <View {...rest} style={[styles.container, style]}>\n    {title ? <ListSubheader style={titleStyle}>{title}</ListSubheader> : null}\n    {children}\n  </View>\n);\n\nListSection.displayName = 'List.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 8,\n  },\n});\n\nexport default withTheme(ListSection);\n"]},"metadata":{},"sourceType":"module"}